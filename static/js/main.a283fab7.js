/*! For license information please see main.a283fab7.js.LICENSE.txt */
(()=>{var e={3915:function(e,t,n){!function(e,t,n){"use strict";const r={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class s{constructor(e,t){this.modelPath=t||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return"lite_mobilenet_v2"===e?`ssd${e}`:`ssd_${e}`}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),r=await this.model.executeAsync(e);await Promise.all(r.map((e=>e.data()))),r.map((e=>e.dispose())),e.dispose()}async infer(e,t,r){const s=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e)))),a=s.shape[1],i=s.shape[2],o=await this.model.executeAsync(s),l=o[0].dataSync(),u=o[1].dataSync();s.dispose(),n.dispose(o);const[c,h]=this.calculateMaxScores(l,o[0].shape[1],o[0].shape[2]),d=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const p=n.tidy((()=>{const e=n.tensor2d(u,[o[1].shape[1],o[1].shape[3]]);return n.image.nonMaxSuppression(e,c,t,r,r)})),f=p.dataSync();return p.dispose(),d!==n.getBackend()&&n.setBackend(d),this.buildDetectedObjects(i,a,u,c,f,h)}buildDetectedObjects(e,t,n,s,a,i){const o=a.length,l=[];for(let u=0;u<o;u++){const o=[];for(let e=0;e<4;e++)o[e]=n[4*a[u]+e];const c=o[0]*t,h=o[1]*e,d=o[2]*t,p=o[3]*e;o[0]=h,o[1]=c,o[2]=p-h,o[3]=d-c,l.push({bbox:o,class:r[i[a[u]]+1].displayName,score:s[a[u]]})}return l}calculateMaxScores(e,t,n){const r=[],s=[];for(let a=0;a<t;a++){let t=Number.MIN_VALUE,i=-1;for(let r=0;r<n;r++)e[a*n+r]>t&&(t=e[a*n+r],i=r);r[a]=t,s[a]=i}return[r,s]}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=s,e.load=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",r=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error(`ObjectDetection constructed with invalid base model ${t}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const a=new s(t,r);return await a.load(),a},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})}(t,n(5452),n(664))},5452:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>qe,deregisterOp:()=>C,loadGraphModel:()=>Ke,loadGraphModelSync:()=>Ye,registerOp:()=>E,version_converter:()=>Xe});var r={};n.r(r),n.d(r,{json:()=>z});var s={};n.r(s),n.d(s,{json:()=>P});var a={};n.r(a),n.d(a,{json:()=>B});var i={};n.r(i),n.d(i,{json:()=>W});var o={};n.r(o),n.d(o,{json:()=>V});var l={};n.r(l),n.d(l,{json:()=>U});var u={};n.r(u),n.d(u,{json:()=>G});var c={};n.r(c),n.d(c,{json:()=>j});var h={};n.r(h),n.d(h,{json:()=>H});var d={};n.r(d),n.d(d,{json:()=>q});var p={};n.r(p),n.d(p,{json:()=>K});var f={};n.r(f),n.d(f,{json:()=>Y});var m={};n.r(m),n.d(m,{json:()=>X});var g={};n.r(g),n.d(g,{json:()=>Z});var y={};n.r(y),n.d(y,{json:()=>Q});var b={};n.r(b),n.d(b,{json:()=>J});var v={};n.r(v),n.d(v,{json:()=>ee});var x={};n.r(x),n.d(x,{json:()=>te});var w={};n.r(w),n.d(w,{json:()=>ne});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:()=>ve.BTT,abs:()=>ve.tnl,acos:()=>ve.HQu,acosh:()=>ve.FqL,add:()=>ve.WQq,addN:()=>ve.QiD,all:()=>ve.Q7R,any:()=>ve.bzn,argMax:()=>ve.FLi,argMin:()=>ve.XRg,asin:()=>ve.qRo,asinh:()=>ve.yHs,atan:()=>ve.rYl,atan2:()=>ve.FPz,atanh:()=>ve.rfv,avgPool:()=>ve.$jT,avgPool3d:()=>ve.sub,basicLSTMCell:()=>ve.lZX,batchNorm:()=>ve.$v7,batchNorm2d:()=>ve.BFc,batchNorm3d:()=>ve.kSi,batchNorm4d:()=>ve.T5N,batchToSpaceND:()=>ve.GTe,bincount:()=>ve.HbZ,bitwiseAnd:()=>ve.vjT,booleanMaskAsync:()=>ve.ftb,broadcastArgs:()=>ve.ROE,broadcastTo:()=>ve.hOW,buffer:()=>ve.ra8,cast:()=>ve.wgE,ceil:()=>ve.mkO,clipByValue:()=>ve.zQh,clone:()=>ve.o8B,complex:()=>ve.faB,concat:()=>ve.xWs,concat1d:()=>ve.I1m,concat2d:()=>ve.RPU,concat3d:()=>ve.O5O,concat4d:()=>ve.P1l,conv1d:()=>ve.kA9,conv2d:()=>ve.Xtf,conv2dTranspose:()=>ve.wX9,conv3d:()=>ve.IPL,conv3dTranspose:()=>ve.jIJ,cos:()=>ve.gnS,cosh:()=>ve.yIG,cosineWindow:()=>ve._jP,cumprod:()=>ve.Lp0,cumsum:()=>ve.rCv,denseBincount:()=>ve.aOp,depthToSpace:()=>ve.Rj8,depthwiseConv2d:()=>ve.Gl3,diag:()=>ve.smy,dilation2d:()=>ve.X7t,div:()=>ve.y4m,divNoNan:()=>ve.ek5,dot:()=>ve.Omf,dropout:()=>ve.EZY,einsum:()=>ve._3C,elu:()=>ve.Pqc,enclosingPowerOfTwo:()=>ve.FJY,ensureShape:()=>ve.QP2,equal:()=>ve.LCg,erf:()=>ve.Y12,euclideanNorm:()=>ve.p4S,exp:()=>ve.oNF,expandDims:()=>ve.UG6,expm1:()=>ve.IYd,eye:()=>ve.y5U,fft:()=>ve.hVP,fill:()=>ve.GSj,floor:()=>ve.RIf,floorDiv:()=>ve.wh_,fused:()=>ve.cZk,gather:()=>ve.kgh,gatherND:()=>ve.SY9,greater:()=>ve.rhj,greaterEqual:()=>ve.DQN,ifft:()=>ve.KGM,imag:()=>ve.ngS,image:()=>ve.Slp,inTopKAsync:()=>ve.U4u,irfft:()=>ve.ggX,isFinite:()=>ve.MIs,isInf:()=>ve.EN4,isNaN:()=>ve.yrW,leakyRelu:()=>ve.H8d,less:()=>ve.M7h,lessEqual:()=>ve.InN,linalg:()=>ve.mPL,linspace:()=>ve.mT8,localResponseNormalization:()=>ve.Kgs,log:()=>ve.Rm2,log1p:()=>ve.Kko,logSigmoid:()=>ve.nqI,logSoftmax:()=>ve.HPB,logSumExp:()=>ve.VZ,logicalAnd:()=>ve.n76,logicalNot:()=>ve.NSZ,logicalOr:()=>ve.ztW,logicalXor:()=>ve.rxB,losses:()=>ve.YYh,lowerBound:()=>ve.yzS,matMul:()=>ve.NoW,max:()=>ve.T9B,maxPool:()=>ve.jgi,maxPool3d:()=>ve.NYV,maxPoolWithArgmax:()=>ve.RO,maximum:()=>ve.PhQ,mean:()=>ve.i2o,meshgrid:()=>ve.OYQ,min:()=>ve.jkA,minimum:()=>ve.BpO,mirrorPad:()=>ve.FFZ,mod:()=>ve.ziu,moments:()=>ve.Clk,movingAverage:()=>ve.CRk,mul:()=>ve.lKK,multiRNNCell:()=>ve.YDF,multinomial:()=>ve.OjQ,neg:()=>ve.HZy,norm:()=>ve.xbf,notEqual:()=>ve.Ec,oneHot:()=>ve.Mw0,ones:()=>ve.SaS,onesLike:()=>ve.P61,op:()=>ve.op,outerProduct:()=>ve.X4o,pad:()=>ve.eVF,pad1d:()=>ve.BZs,pad2d:()=>ve.grY,pad3d:()=>ve.XHu,pad4d:()=>ve.WLX,pool:()=>ve.dzn,pow:()=>ve.n7C,prelu:()=>ve.NsG,print:()=>ve.yyV,prod:()=>ve._eU,raggedGather:()=>ve.whe,raggedRange:()=>ve.iyU,raggedTensorToTensor:()=>ve.Q0_,rand:()=>ve._9M,randomGamma:()=>ve.pR9,randomNormal:()=>ve.FE$,randomStandardNormal:()=>ve.m0H,randomUniform:()=>ve.YeY,randomUniformInt:()=>ve.HYA,range:()=>ve.y17,real:()=>ve.xav,reciprocal:()=>ve.VOZ,relu:()=>ve.VVh,relu6:()=>ve.j__,reshape:()=>ve.tQQ,reverse:()=>ve.BEg,reverse1d:()=>ve.QD2,reverse2d:()=>ve.LMr,reverse3d:()=>ve.I2l,reverse4d:()=>ve.JYU,rfft:()=>ve.z8$,round:()=>ve.LIG,rsqrt:()=>ve.Z$r,scalar:()=>ve.d_2,scatterND:()=>ve.NFr,searchSorted:()=>ve.sZg,selu:()=>ve.WfX,separableConv2d:()=>ve.wdz,setdiff1dAsync:()=>ve.F12,sigmoid:()=>ve.ry7,sign:()=>ve._SZ,signal:()=>ve.vPA,sin:()=>ve.F8e,sinh:()=>ve.L0l,slice:()=>ve.dik,slice1d:()=>ve.Q$M,slice2d:()=>ve.zAd,slice3d:()=>ve.wck,slice4d:()=>ve.R0O,softmax:()=>ve.Vs9,softplus:()=>ve.lw0,spaceToBatchND:()=>ve.eDJ,sparse:()=>ve.lMo,sparseToDense:()=>ve.Zhr,spectral:()=>ve.lOn,split:()=>ve.lDo,sqrt:()=>ve.RZD,square:()=>ve.EwI,squaredDifference:()=>ve.Pbu,squeeze:()=>ve.r2V,stack:()=>ve.t$z,step:()=>ve.PMw,stridedSlice:()=>ve.Ym9,string:()=>ve.YjP,sub:()=>ve.jbE,sum:()=>ve.czq,tan:()=>ve.Mlm,tanh:()=>ve.ymU,tensor:()=>ve.OEK,tensor1d:()=>ve.tGX,tensor2d:()=>ve.KtR,tensor3d:()=>ve.$_$,tensor4d:()=>ve.g9W,tensor5d:()=>ve.Lpo,tensor6d:()=>ve.yxw,tensorScatterUpdate:()=>ve.NNh,tile:()=>ve.Vsq,topk:()=>ve.rfw,transpose:()=>ve.mgz,truncatedNormal:()=>ve.efE,unique:()=>ve.AmM,unsortedSegmentSum:()=>ve.zAU,unstack:()=>ve.K$i,upperBound:()=>ve.rni,variable:()=>ve.bvq,where:()=>ve._M9,whereAsync:()=>ve.YJN,zeros:()=>ve.Ul9,zerosLike:()=>ve.POl});var T=n(664);var N,S;(0,T.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(N||(N={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(S||(S={}));const I={};function E(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};I[e]=n}function $(e){return I[e]}function C(e){delete I[e]}function A(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return R(t.inputNames[o],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>R(e,n,r,s)))}const l=R(t.inputNames[o],n,r,s),u=l.dataSync();return"number"===a.type?u[0]:T.util.toNestedArray(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function R(e,t,n,r){const[s,a]=M(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[F(s,e)]));return void 0!==i?t[F(s,i)][a]:void 0}function _(e,t,n){return t[F(e,n.currentContextId)]}function D(e,t){const[n,r,s]=M(e,t);return[F(n,t&&t.currentContextId),r,s]}function F(e,t){return t?`${e}-${t}`:e}function M(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function O(e,t,n){let r=A("pad",e,t,n);if("explicit"===r){r=A("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function L(e){return e.kept?e:(0,T.clone)(e)}const z=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],W=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],V=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],U=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],G=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],j=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],H=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],q=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],K=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Y=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],X=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Z=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Q=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],J=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],te=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ne=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class re{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,s,a,i,o,l,u,c,h,d,p,f,m,g,y,b,v,x,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=D(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=D(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=D(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:l,weights:s,placeholders:r,signature:t,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=$(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=ae(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=me(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=oe(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=fe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=ie(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=ye(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ye(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=pe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=ge(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=ce(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=he(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=ue(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=D(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:le(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=D(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=D(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function se(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,T.env)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ae(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e[t];return null!=s?se(s.s,r):n}function ie(e,t,n){const r=e[t];return r?r.b:n}function oe(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof s?s:parseInt(s,10)}function le(e){switch("string"===typeof e&&(e=N[e]),e){case N.DT_FLOAT:case N.DT_HALF:return"float32";case N.DT_INT32:case N.DT_INT64:case N.DT_INT8:case N.DT_UINT8:return"int32";case N.DT_BOOL:return"bool";case N.DT_DOUBLE:return"float32";case N.DT_STRING:return"string";case N.DT_COMPLEX64:case N.DT_COMPLEX128:return"complex64";default:return null}}function ue(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ce(e,t,n){const r=e[t];return r&&r.type?le(r.type):n}function he(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>le(e))):n}function de(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function pe(e,t,n){const r=e[t];return r&&r.shape?de(r.shape):n}function fe(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function me(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>se(e,r))):n}function ge(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>de(e))):n}function ye(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class be{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return R(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return R(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return oe(this.node.rawAttrs,e,t);if(null!=n.s)return ae(this.node.rawAttrs,e,t);if(null!=n.b)return ie(this.node.rawAttrs,e,t);if(null!=n.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.type)return ce(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fe(this.node.rawAttrs,e,t);if(null!=n.list.s)return me(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ge(this.node.rawAttrs,e,t);if(null!=n.list.b)return ye(this.node.rawAttrs,e,t);if(null!=n.list.type)return he(this.node.rawAttrs,e,t)}return t}}var ve=n(814);function xe(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){T.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];T.util.assert(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function we(e){return"number"!==typeof e&&!e.some((e=>e<0))}function ke(e,t,n){let r=Te(e,n);const s=!we(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=Te(e.shape,r)})),!we(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Te(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class Ne{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,T.scalar)(0),(0,T.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),xe(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,T.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,T.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,T.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,T.tensor)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return xe(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,T.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,T.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];(0,T.tidy)((()=>{t=(0,T.reshape)(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=(0,T.reshape)((0,T.slice)(t,i,o),this.elementShape)}return a}));const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,a)}}class Se{get id(){return this.idTensor.id}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);xe(t,e.shape,"TensorList shape mismatch: "),(0,T.keep)(e)})),this.idTensor=(0,T.scalar)(0),this.maxNumElements=r,(0,T.keep)(this.idTensor)}copy(){return new Se([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);xe(e,this.elementShape,"TensorList shape mismatch: ");const r=ke(this.elementShape,this.tensors,e);return(0,T.tidy)((()=>{const e=this.tensors.map((e=>(0,T.reshape)(e,r)));return(0,T.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=ke(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,xe(r.shape,e,"TensorList shape mismatch: "),(0,T.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(xe(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,T.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Se([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);xe(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=ke(this.elementShape,this.tensors,t);return(0,T.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);xe(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,T.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);xe(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=ke(this.elementShape,this.tensors,n);return 0===e.length?(0,T.tensor)([],[0].concat(r)):(0,T.tidy)((()=>{const t=e.map((e=>(0,T.reshape)(this.tensors[e],r)));return(0,T.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);xe(this.elementShape,t,"TensorList shape mismatch: ");const n=ke(this.elementShape,this.tensors,t);return 0===this.size()?(0,T.tensor)([],[0].concat(n)):(0,T.tidy)((()=>{const e=this.tensors.map((e=>(0,T.reshape)(e,n)));return(0,T.concat)(e,0)}))}}const Ie=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=A("thenBranch",e,t,n),s=A("elseBranch",e,t,n),a=A("cond",e,t,n),i=A("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=A("body",e,t,n),s=A("cond",e,t,n),a=A("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[L(A("pred",e,t,n))];case"Switch":{const r=A("pred",e,t,n);let s=A("data",e,t,n);return s.kept||(s=L(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==R(e,t,n)));if(r){return[L(R(r,t,n))]}return}case"Enter":{const r=A("frameName",e,t,n),s=A("tensor",e,t,n);return n.enterFrame(r),[L(s)]}case"Exit":{const r=A("tensor",e,t,n);return n.exitFrame(),[L(r)]}case"NextIteration":{const r=A("tensor",e,t,n);return n.nextIteration(),[L(r)]}case"TensorArrayV3":{const r=A("size",e,t,n),s=A("dtype",e,t,n),a=A("elementShape",e,t,n),i=A("dynamicSize",e,t,n),o=A("clearAfterRead",e,t,n),l=A("identicalElementShapes",e,t,n),u=A("name",e,t,n),c=new Ne(u,s,r,a,l,i,o);return n.addTensorArray(c),[c.idTensor,(0,T.scalar)(1)]}case"TensorArrayWriteV3":{const r=A("tensorArrayId",e,t,n),s=A("index",e,t,n),a=A("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=A("tensorArrayId",e,t,n),s=A("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=A("tensorArrayId",e,t,n),s=A("indices",e,t,n),a=A("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=A("tensorArrayId",e,t,n),s=A("indices",e,t,n),a=A("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=A("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=A("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=A("tensorArrayId",e,t,n),s=A("tensor",e,t,n),a=A("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=A("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[(0,T.scalar)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=A("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=A("tensorListId",e,t,n),s=A("index",e,t,n),a=A("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=A("tensorListId",e,t,n),s=A("index",e,t,n),a=A("elementShape",e,t,n),i=A("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=A("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new Se([],n,e.dtype,r),i=(0,T.unstack)(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(A("tensor",e,t,n),r,A("elementShape",e,t,n),A("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=A("elementShape",e,t,n),s=A("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=A(a,e,t,n),o=function(e,t,n,r){return new Se([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=A("tensorListId",e,t,n),s=A("indices",e,t,n),a=A("elementShape",e,t,n),i=A("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=A("tensorListId",e,t,n),s=A("elementShape",e,t,n),a=A("elementDType",e,t,n),i=A("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);xe(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=(0,T.unstack)(e);return new Se(s,t,r)}(A("tensor",e,t,n),A("elementShape",e,t,n),A("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=A("tensorListId",e,t,n),s=n.getTensorList(r.id),a=A("dtype",e,t,n),i=A("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=A("tensorListId",e,t,n),s=A("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=A("tensorListId",e,t,n),s=A("elementShape",e,t,n),a=A("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=A("tensor",e,t,n),s=A("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=Te(e.shape.slice(1),n),i=0===r?0:e.size/r,o=(0,T.tidy)((()=>{const n=[];e=(0,T.reshape)(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],l=[1,t[r],i];n[r]=(0,T.reshape)((0,T.slice)(e,o,l),a)}return e.dispose(),n})),l=new Se([],n,e.dtype,t.length);for(let u=0;u<o.length;u++)l.setItem(u,o[u]);return l}(r,A("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=A("tensorListId",e,t,n),s=n.getTensorList(r.id);return[(0,T.scalar)(s.size(),"int32")]}case"TensorListResize":{const r=A("tensorListId",e,t,n),s=A("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ee(e,t,n){const[r,s]=A("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,l="fusedbatchnorm"===r,u=A("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=A("strides",e,t,n),h=O(e,t,n),d=A("dataFormat",e,t,n).toUpperCase(),p=A("dilations",e,t,n);let[f,m]=A("args",e,t,n);i&&(m=f,f=void 0);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:A("leakyreluAlpha",e,t,n)}}function $e(e,t,n){return{boxes:A("boxes",e,t,n),scores:A("scores",e,t,n),maxOutputSize:A("maxOutputSize",e,t,n),iouThreshold:A("iouThreshold",e,t,n),scoreThreshold:A("scoreThreshold",e,t,n),softNmsSigma:A("softNmsSigma",e,t,n)}}var Ce=n(1997);class Ae{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,T.scalar)(0),this.tensorMap=new Map,(0,T.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ce.d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,T.tidy)((()=>{const e=(0,T.unstack)(t),r=n.length,s=e.length;T.util.assert(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];(0,T.keep)(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,T.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return(0,T.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function Re(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:T.tidy;const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(A("a",e,t,n),A("b",e,t,n))];case"AddN":return[r.addN(A("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(A("a",e,t,n),A("b",e,t,n))];case"Mul":return[r.mul(A("a",e,t,n),A("b",e,t,n))];case"RealDiv":case"Div":return[r.div(A("a",e,t,n),A("b",e,t,n))];case"DivNoNan":return[r.divNoNan(A("a",e,t,n),A("b",e,t,n))];case"FloorDiv":return[r.floorDiv(A("a",e,t,n),A("b",e,t,n))];case"Sub":return[r.sub(A("a",e,t,n),A("b",e,t,n))];case"Minimum":return[r.minimum(A("a",e,t,n),A("b",e,t,n))];case"Maximum":return[r.maximum(A("a",e,t,n),A("b",e,t,n))];case"Pow":return[r.pow(A("a",e,t,n),A("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(A("a",e,t,n),A("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"basic_math":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(A("x",e,t,n))];case"Acos":return[r.acos(A("x",e,t,n))];case"Acosh":return[r.acosh(A("x",e,t,n))];case"Asin":return[r.asin(A("x",e,t,n))];case"Asinh":return[r.asinh(A("x",e,t,n))];case"Atan":return[r.atan(A("x",e,t,n))];case"Atan2":return[r.atan2(A("x",e,t,n),A("y",e,t,n))];case"Atanh":return[r.atanh(A("x",e,t,n))];case"Ceil":return[r.ceil(A("x",e,t,n))];case"Complex":return[r.complex(A("real",e,t,n),A("imag",e,t,n))];case"Cos":return[r.cos(A("x",e,t,n))];case"Cosh":return[r.cosh(A("x",e,t,n))];case"Elu":return[r.elu(A("x",e,t,n))];case"Erf":return[r.erf(A("x",e,t,n))];case"Exp":return[r.exp(A("x",e,t,n))];case"Expm1":return[r.expm1(A("x",e,t,n))];case"Floor":return[r.floor(A("x",e,t,n))];case"Log":return[r.log(A("x",e,t,n))];case"Log1p":return[r.log1p(A("x",e,t,n))];case"Imag":return[r.imag(A("x",e,t,n))];case"Neg":return[r.neg(A("x",e,t,n))];case"Reciprocal":return[r.reciprocal(A("x",e,t,n))];case"Real":return[r.real(A("x",e,t,n))];case"Relu":return[r.relu(A("x",e,t,n))];case"Round":return[r.round(A("x",e,t,n))];case"Selu":return[r.selu(A("x",e,t,n))];case"Sigmoid":return[r.sigmoid(A("x",e,t,n))];case"Sin":return[r.sin(A("x",e,t,n))];case"Sign":return[r.sign(A("x",e,t,n))];case"Sinh":return[r.sinh(A("x",e,t,n))];case"Softplus":return[r.softplus(A("x",e,t,n))];case"Sqrt":return[r.sqrt(A("x",e,t,n))];case"Square":return[r.square(A("x",e,t,n))];case"Tanh":return[r.tanh(A("x",e,t,n))];case"Tan":return[r.tan(A("x",e,t,n))];case"ClipByValue":return[r.clipByValue(A("x",e,t,n),A("clipValueMin",e,t,n),A("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(A("x",e,t,n))];case"Rsqrt":return[r.rsqrt(R(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(A("x",e,t,n),A("alpha",e,t,n))];case"Prelu":return[r.prelu(A("x",e,t,n),A("alpha",e,t,n))];case"IsNan":return[r.isNaN(R(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(R(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(R(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"control":return Ie(e,t,n);case"convolution":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Conv1D":{const s=A("stride",e,t,n),a=A("pad",e,t,n),i=A("dataFormat",e,t,n).toUpperCase(),o=A("dilation",e,t,n);return[r.conv1d(A("x",e,t,n),A("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=A("strides",e,t,n),a=O(e,t,n),i=A("dataFormat",e,t,n).toUpperCase(),o=A("dilations",e,t,n);return[r.conv2d(A("x",e,t,n),A("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Ee(e,t,n);return[r.fused.conv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Ee(e,t,n);return[r.fused.depthwiseConv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=A("outputShape",e,t,n),a=A("strides",e,t,n),i=O(e,t,n);return[r.conv2dTranspose(A("x",e,t,n),A("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=A("strides",e,t,n),a=O(e,t,n),i=A("dilations",e,t,n),o=A("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(A("input",e,t,n),A("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=A("strides",e,t,n),a=A("pad",e,t,n),i=A("dataFormat",e,t,n).toUpperCase(),o=A("dilations",e,t,n);return[r.conv3d(A("x",e,t,n),A("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=A("strides",e,t,n),a=A("pad",e,t,n),i=A("kernelSize",e,t,n);return[r.avgPool(A("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=A("strides",e,t,n),a=A("pad",e,t,n),i=A("kernelSize",e,t,n);return[r.maxPool(A("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=A("strides",e,t,n),a=A("pad",e,t,n),i=A("kernelSize",e,t,n),o=A("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(A("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[l,u]}case"AvgPool3D":{const s=A("strides",e,t,n),a=A("pad",e,t,n),i=A("kernelSize",e,t,n);return[r.avgPool3d(A("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=A("strides",e,t,n),a=A("pad",e,t,n),i=A("kernelSize",e,t,n);return[r.maxPool3d(A("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=A("strides",e,t,n),a=A("pad",e,t,n),i=A("dilations",e,t,n),o=s[1],l=s[2],u=i[1],c=i[2];return[r.dilation2d(A("x",e,t,n),A("filter",e,t,n),[o,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"creation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Fill":{const s=A("shape",e,t,n),a=A("dtype",e,t,n),i=A("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=A("start",e,t,n),a=A("stop",e,t,n),i=A("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=A("logits",e,t,n),a=A("numSamples",e,t,n),i=A("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=A("indices",e,t,n),a=A("depth",e,t,n),i=A("onValue",e,t,n),o=A("offValue",e,t,n),l=A("dtype",e,t,n);return[r.oneHot(s,a,i,o,l)]}case"Ones":return[r.ones(A("shape",e,t,n),A("dtype",e,t,n))];case"OnesLike":return[r.onesLike(A("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(A("shape",e,t,n),A("dtype",e,t,n),A("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(A("shape",e,t,n),A("minval",e,t,n),A("maxval",e,t,n),A("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(A("shape",e,t,n),A("minval",e,t,n),A("maxval",e,t,n),A("seed",e,t,n))];case"Range":{const s=A("start",e,t,n),a=A("stop",e,t,n),i=A("step",e,t,n);return[r.range(s,a,i,A("dtype",e,t,n))]}case"TruncatedNormal":{const s=A("shape",e,t,n),a=A("mean",e,t,n),i=A("stdDev",e,t,n),o=A("seed",e,t,n);return[r.truncatedNormal(s,a,i,A("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(A("shape",e,t,n),A("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(A("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"dynamic":return async function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:k;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=$e(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=$e(e,t,n),u=A("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=$e(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,l)]}case"Where":{const r=s.cast(A("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(A("x",e,t,n),A("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n);case"evaluation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"LowerBound":{const s=A("sortedSequence",e,t,n),a=A("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=A("x",e,t,n),a=A("k",e,t,n),i=A("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=A("sortedSequence",e,t,n),a=A("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=A("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=A("x",e,t,n),a=A("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"image":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ResizeBilinear":{const s=A("images",e,t,n),a=A("size",e,t,n),i=A("alignCorners",e,t,n),o=A("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=A("images",e,t,n),a=A("size",e,t,n),i=A("alignCorners",e,t,n),o=A("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=A("image",e,t,n),a=A("boxes",e,t,n),i=A("boxInd",e,t,n),o=A("cropSize",e,t,n),l=A("method",e,t,n),u=A("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,l,u)]}case"ImageProjectiveTransformV3":{const s=A("images",e,t,n),a=A("transforms",e,t,n),i=A("outputShape",e,t,n),o=A("fillValue",e,t,n),l=A("interpolation",e,t,n),u=A("fillMode",e,t,n);return[r.image.transform(s,a,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"graph":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=A("default",e,t,n);return[R(e.name,t,n)||s];case"Placeholder":return[R(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[L(A("x",e,t,n))];case"IdentityN":return A("x",e,t,n).map((e=>L(e)));case"Shape":return[r.tensor1d(A("x",e,t,n).shape,"int32")];case"ShapeN":return A("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(A("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(A("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=A("x",e,t,n),i=A("data",e,t,n),o=A("message",e,t,n),l=A("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"logical":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Equal":return[r.equal(A("a",e,t,n),A("b",e,t,n))];case"NotEqual":return[r.notEqual(A("a",e,t,n),A("b",e,t,n))];case"Greater":return[r.greater(A("a",e,t,n),A("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(A("a",e,t,n),A("b",e,t,n))];case"Less":return[r.less(A("a",e,t,n),A("b",e,t,n))];case"LessEqual":return[r.lessEqual(A("a",e,t,n),A("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(A("a",e,t,n),A("b",e,t,n))];case"LogicalNot":return[r.logicalNot(A("a",e,t,n))];case"LogicalOr":return[r.logicalOr(A("a",e,t,n),A("b",e,t,n))];case"Select":case"SelectV2":return[r.where(A("condition",e,t,n),A("a",e,t,n),A("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(A("a",e,t,n),A("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"matrices":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(A("a",e,t,n),A("b",e,t,n),A("transposeA",e,t,n),A("transposeB",e,t,n))];case"Einsum":return[r.einsum(A("equation",e,t,n),...A("tensors",e,t,n))];case"Transpose":return[r.transpose(A("x",e,t,n),A("perm",e,t,n))];case"_FusedMatMul":const[s,a]=A("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,l=A("numArgs",e,t,n),u=A("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=A("args",e,t,n);return[r.fused.matMul({a:A("a",e,t,n),b:A("b",e,t,n),transposeA:A("transposeA",e,t,n),transposeB:A("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(A("a",e,t,n),A("numLower",e,t,n),A("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"normalization":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(A("x",e,t,n),A("axis",e,t,n),A("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(A("x",e,t,n),A("mean",e,t,n),A("variance",e,t,n),A("offset",e,t,n),A("scale",e,t,n),A("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(A("x",e,t,n),A("radius",e,t,n),A("bias",e,t,n),A("alpha",e,t,n),A("beta",e,t,n))];case"Softmax":return[r.softmax(A("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(A("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"ragged":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(A("paramsNestedSplits",e,t,n),A("paramsDenseValues",e,t,n),A("indices",e,t,n),A("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(A("starts",e,t,n),A("limits",e,t,n),A("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(A("shape",e,t,n),A("values",e,t,n),A("defaultValue",e,t,n),A("rowPartitionTensors",e,t,n),A("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"reduction":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Max":{const s=A("axis",e,t,n),a=A("keepDims",e,t,n);return[r.max(A("x",e,t,n),s,a)]}case"Mean":{const s=A("axis",e,t,n),a=A("keepDims",e,t,n);return[r.mean(A("x",e,t,n),s,a)]}case"Min":{const s=A("axis",e,t,n),a=A("keepDims",e,t,n);return[r.min(A("x",e,t,n),s,a)]}case"Sum":{const s=A("axis",e,t,n),a=A("keepDims",e,t,n);return[r.sum(A("x",e,t,n),s,a)]}case"All":{const s=A("axis",e,t,n),a=A("keepDims",e,t,n);return[r.all(A("x",e,t,n),s,a)]}case"Any":{const s=A("axis",e,t,n),a=A("keepDims",e,t,n);return[r.any(A("x",e,t,n),s,a)]}case"ArgMax":{const s=A("axis",e,t,n);return[r.argMax(A("x",e,t,n),s)]}case"ArgMin":{const s=A("axis",e,t,n);return[r.argMin(A("x",e,t,n),s)]}case"Prod":{const s=A("axis",e,t,n),a=A("keepDims",e,t,n);return[r.prod(A("x",e,t,n),s,a)]}case"Cumprod":{const s=A("axis",e,t,n),a=A("exclusive",e,t,n),i=A("reverse",e,t,n);return[r.cumprod(A("x",e,t,n),s,a,i)]}case"Cumsum":{const s=A("axis",e,t,n),a=A("exclusive",e,t,n),i=A("reverse",e,t,n);return[r.cumsum(A("x",e,t,n),s,a,i)]}case"Bincount":const s=A("x",e,t,n),a=A("weights",e,t,n),i=A("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=A("x",e,t,n),a=A("weights",e,t,n),i=A("size",e,t,n),o=A("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"slice_join":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ConcatV2":case"Concat":{const s=A("n",e,t,n),a=A("axis",e,t,n);let i=A("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=A("x",e,t,n),a=A("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=A("axis",e,t,n),a=A("batchDims",e,t,n),i=A("x",e,t,n),o=A("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=A("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=A("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=A("axis",e,t,n),a=A("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=A("begin",e,t,n),a=A("size",e,t,n);return[r.slice(A("x",e,t,n),s,a)]}case"StridedSlice":{const s=A("begin",e,t,n),a=A("end",e,t,n),i=A("strides",e,t,n),o=A("beginMask",e,t,n),l=A("endMask",e,t,n),u=A("ellipsisMask",e,t,n),c=A("newAxisMask",e,t,n),h=A("shrinkAxisMask",e,t,n),d=A("x",e,t,n);return[r.stridedSlice(d,s,a,i,o,l,u,c,h)]}case"Pack":return(0,T.tidy)((()=>{const s=A("axis",e,t,n),a=A("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,l=a.map((e=>{const t=T.util.arraysEqual(e.shape,i);if(!t&&!T.util.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,s)]}));case"Unpack":{const s=A("axis",e,t,n),a=A("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=A("reps",e,t,n);return[r.tile(A("x",e,t,n),s)]}case"Split":case"SplitV":{const s=A("axis",e,t,n),a=A("numOrSizeSplits",e,t,n),i=A("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=A("indices",e,t,n),a=A("values",e,t,n),i=A("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=A("x",e,t,n),a=A("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=A("sparseIndices",e,t,n),a=A("outputShape",e,t,n),i=A("sparseValues",e,t,n),o=A("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const s=A("indices",e,t,n),a=A("values",e,t,n),i=A("tensor",e,t,n);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"sparse":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(A("indices",e,t,n),A("values",e,t,n),A("denseShape",e,t,n),A("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(A("inputIndices",e,t,n),A("inputShape",e,t,n),A("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"spectral":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"FFT":return[r.fft(A("x",e,t,n))];case"IFFT":return[r.ifft(A("x",e,t,n))];case"RFFT":return[r.rfft(A("x",e,t,n))];case"IRFFT":return[r.irfft(A("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"string":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(A("input",e,t,n),A("pattern",e,t,n),A("rewrite",e,t,n),A("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(A("data",e,t,n),A("dataSplits",e,t,n),A("separator",e,t,n),A("nGramWidths",e,t,n),A("leftPad",e,t,n),A("rightPad",e,t,n),A("padWidth",e,t,n),A("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(A("input",e,t,n),A("delimiter",e,t,n),A("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(A("input",e,t,n),A("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"transformation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Cast":return[r.cast(A("x",e,t,n),A("dtype",e,t,n))];case"ExpandDims":{const s=A("axis",e,t,n);return[r.expandDims(A("x",e,t,n),s)]}case"Squeeze":{const s=A("axis",e,t,n);return[r.squeeze(A("x",e,t,n),s)]}case"Reshape":return[r.reshape(A("x",e,t,n),A("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(A("x",e,t,n),A("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(A("x",e,t,n),A("padding",e,t,n),A("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(A("x",e,t,n),A("padding",e,t,n),A("constantValue",e,t,n))];case"SpaceToBatchND":{const s=A("blockShape",e,t,n),a=A("paddings",e,t,n);return[r.spaceToBatchND(A("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=A("blockShape",e,t,n),a=A("crops",e,t,n);return[r.batchToSpaceND(A("x",e,t,n),s,a)]}case"DepthToSpace":{const s=A("blockSize",e,t,n),a=A("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(A("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(A("x",e,t,n),A("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(A("s0",e,t,n),A("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=A("keyDType",e,t,n),a=A("valueDType",e,t,n),i=new Ae(s,a);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=A("tableHandle",e,t,n,r),a=A("keys",e,t,n),i=A("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=A("tableHandle",e,t,n,r),a=A("keys",e,t,n),i=A("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=A("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=$(e.op);if(a&&a.customExecutor)return a.customExecutor(new be(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return T.util.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class _e{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function De(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>M(e)[0])));r=r||[];const c=new Set(r.map((e=>M(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(Pe(e)||Be(e)||We(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}function Fe(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>M(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],i=e=>n.has("string"===typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...s,...e.weights,...a]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),h={};for(const m of u){h[m.name]=h[m.name]||0;for(const e of m.children)i(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const d=Object.entries(h).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...d];for(;d.length>0;){const e=d.pop(),t=c.get(e);for(const n of t.children.filter(i))0===--h[n.name]&&(p.push(n.name),d.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const a of t.children)n.has(a.name)&&!s.has(a.name)&&(s.add(a.name),r.push(a.name))}const a=e.filter((e=>s.has(e.name)));return a}(p.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"===typeof e?e:e.name),a=new Set(e.map((e=>e.name))),i=e=>a.has("string"===typeof e?e:e.name);for(const o of e){for(const e of o.children.filter(i)){if(!n.has(e.name))throw new Me(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new Me(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!s(o))for(const e of o.inputs){if(!n.has(e.name))throw new Me(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new Me(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}class Me extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const Oe=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Le=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),ze=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Pe(e){return Oe.has(e.op)}function Be(e){return Le.has(e.op)}function We(e){return ze.has(e.op)}class Ve{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Ve(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=De(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const i=Fe(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>Pe(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let o=0;o<e.length;++o){const t=a[o];if(t===n)continue;const r=e[o],s=e[t];i.has(s.name)||i.set(s.name,[]),i.get(s.name).push(r)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,T.keep)(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[M(e)[0]])),s=t.map((e=>M(e)[0])),a=new Set(s);let i=s.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=(0,T.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const u={},c={};return(0,T.tidy)((()=>{const n=new _e(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=M(t,n),i=[];i[a]=e[t],r[s]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(i))}));const s=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(r[e.name])continue;const t=Re(e,r,n,this._resourceManager);if(T.util.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>R(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){if(!Pe(t)&&!a.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(Pe(e))continue;const t=_(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function i(e){return Pe(e)||s.has(e.name)}if(!Pe(e)&&null!=a)for(const o of a){if(i(o))continue;const e=_(o.name,t,n);for(const t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,T.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const a=new _e(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>R(e,i,a))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[M(e)[0]])),i=n.map((e=>M(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:h,syncInputs:d}=De(e,l,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=M(t),s=[];s[r]=e[t],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(a,p,t,f,y,g,o,m,u);await Promise.all(e)}null!=h||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!Pe(e)&&!R(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&A("isConstant",e.node,r,n)&&([c]=D(e.node.name,n)),null==r[e.node.name]){const h=Re(e.node,r,n,this._resourceManager);c||([c]=D(e.node.name,n));const d=n.currentContext;T.util.isPromise(h)?u.push(h.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=D(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!R(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!R(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=M(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));T.util.assert(t,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&T.util.assert(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=M(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=M(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Ue{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var Ge=n(285);const je="?tfjs-format=file",He="model.json";class qe{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:T.io;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Ue}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return T.util.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,Ge.s5)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Ve(re.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=re.Instance.transformGraph(e.modelInitializer);this.initializer=new Ve(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof T.Tensor?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof T.Tensor)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,i;const o=null===(i=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,T.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ke(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:T.io;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}${He}${je}`}(e));const r=new qe(e,t,n);return await r.load(),r}function Ye(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const s=T.io.getWeightSpecs(n.weightsManifest),a=T.io.getModelArtifactsForJSONSync(n,s,r);t=T.io.fromMemorySync(a)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=T.io.fromMemorySync(e)}const n=new qe(t);return n.load(),n}const Xe="4.22.0"},6790:(e,t,n)=>{"use strict";n.d(t,{GJ:()=>r,uI:()=>s});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r,s){return a("move")}createTensorFromGPUData(e,t,n){return a("createTensorFromGPUData")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},6692:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||s)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function s(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,r,s){return l(e,t,n,r,s,0)}function i(e,t,n,r,s,a){return l(e,t,n,r,s,0,!1,a,!0)}function o(e,t,n,r,s,a){return l(e,t,n,r,s,a,!0)}function l(e,t,n,s,a,i){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],l=arguments.length>7&&void 0!==arguments[7]&&arguments[7],d=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let r=0;r<t.length;r++)t[r]>a&&p.push({score:t[r],boxIndex:r,suppressBeginIndex:0});p.sort(h);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<a)break;let l=!1;for(let r=m.length-1;r>=o;--r){const n=u(e,i,m[r]);if(n>=s){l=!0;break}if(t.score=t.score*c(s,f,n),t.score<=a)break}t.suppressBeginIndex=m.length,l||(t.score===n?(m.push(i),g.push(t.score)):t.score>a&&r(p,t,h))}const y=m.length,b=n-y;l&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const v={selectedIndices:m};return o&&(v.selectedScores=g),d&&(v.validOutputs=y),v}function u(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,d),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{c7:()=>a,ZS:()=>i,ut:()=>o})},9286:(e,t,n)=>{"use strict";n.d(t,{Y:()=>s});var r=n(259);function s(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const s=(0,r.r)(e,"int32"),a=(0,r.r)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=s.indexToLoc(n[r]),i=r*e.length;a.values.set(t,i)}return a.toTensor()}},2164:(e,t,n)=>{"use strict";n.d(t,{T2:()=>x,Ye:()=>v});var r=n(6790),s=n(5399),a=n(7926),i=n(9554),o=n(843),l=n(4124),u=n(8977),c=n(1426);class h{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if((0,s._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let s=0;s<r.length;s++){const t=r[s];t.data().then((n=>{d(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function d(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,s,a){const i="number"===typeof r?c.av(`${r}ms`,9):r.error,o=c.av(e,25),l=t.rank,u=t.size,h=c.av(t.shape.toString(),14);let d="";for(const c in s){const e=s[c];if(null!=e){const n=e.shape||t.shape,r=n.length;d+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${h}\t%c${u}\t%c${d}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(9494),m=n(8804);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(l.i(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new h(this.backendInstance),!0}setupRegisteredKernels(){(0,o.Op)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.Op)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.uI||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,l.i(`Initialization of backend ${e} failed`),l.i(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return l.i(`Initialization of backend ${e} failed`),l.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=x.runKernel(i.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(i.KXH,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,o._5)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const u=(0,o._5)(t,this.backendName);c.vA(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:h,attrs:d}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(u,h,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(u,h,t,p,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,o.vQ)(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(c.vA(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&c.Kg(e[0])&&(s=e.map((e=>u.encodeString(e))));const a=r.write(s,t,n),i=new f.qY(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,c.SL)(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new f.qY(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new f.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},l=(0,o.vQ)(e);null!=l&&(r=l.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.Ty(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(c.vA(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.vA(s instanceof f.qY,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(s[t.id]&&i[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=(0,c.FZ)((0,c.Ze)(e),"float32");return x.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!c.r1(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),w);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){var t=this;return c.vA(c.Tn(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];let a;c.vA(r.every((e=>e instanceof f.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const i={};r.forEach(((e,t)=>{i[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(a=e(...r,n),c.vA(a.value instanceof f.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.vA(c.Tn(a.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),a.value),backwardsFunc:(e,t)=>{const n=a.gradFunc(e,t),s=Array.isArray(n)?n:[n];c.vA(s.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.vA(s.every((e=>e instanceof f.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,u.now)(),n=await this.backend.time(e);return n.wallMs=(0,u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=(0,a.L)();if(null==e._tfengine){const t=new s.OH(e);e._tfengine=new b(t)}return(0,s.tj)(e._tfengine.ENV),(0,f.qP)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const x=v();function w(e,t){const n={a:e,b:t};return x.runKernel(i.OMN,n)}},5399:(e,t,n)=>{"use strict";n.d(t,{Km:()=>l,OH:()=>a,_K:()=>o,tj:()=>u});var r=n(1426);const s="tfjsflags";class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.yL)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(s in e){e[s].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),s=1;s<n;s++)r[s-1]=arguments[s];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,r[0],r[1]),r.join("=")})),t}function o(){return l}let l=null;function u(e){l=e}},7926:(e,t,n)=>{"use strict";let r;function s(){if(null==r){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function a(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{L:()=>s,m:()=>a})},8046:(e,t,n)=>{"use strict";n.d(t,{AS:()=>g,DZ:()=>m,Gc:()=>x,Hi:()=>d,Hs:()=>I,IS:()=>u,ME:()=>f,Ok:()=>E,Sm:()=>o,W4:()=>N,aC:()=>y,fL:()=>c,gJ:()=>S,gY:()=>l,go:()=>T,jh:()=>v,jz:()=>w,kB:()=>b,m1:()=>p,rE:()=>k,rm:()=>h});var r=n(2164),s=n(5399),a=n(9494),i=n(8804);function o(){(0,s._K)().set("PROD",!0)}function l(){(0,s._K)().set("DEBUG",!0)}function u(){(0,s._K)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,s._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function h(){r.T2.disposeVariables()}function d(){return r.T2}function p(){return r.T2.memory()}function f(e){return r.T2.profile(e)}function m(e,t){return r.T2.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.T2.keep(e)}function b(e){return r.T2.time(e)}function v(e){return r.T2.setBackend(e)}function x(){return r.T2.ready()}function w(){return r.T2.backendName}function k(e){r.T2.removeBackend(e)}function T(e){return r.T2.findBackend(e)}function N(e){return r.T2.findBackendFactory(e)}function S(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return r.T2.registerBackend(e,t,n)}function I(){return r.T2.backend}function E(e,t){(0,s._K)().setPlatform(e,t)}(0,a.B4)(c)},1839:(e,t,n)=>{"use strict";n.d(t,{Dv:()=>o,_X:()=>d,jY:()=>u,mu:()=>c,ok:()=>l,y7:()=>h});var r=n(2164),s=n(9494),a=n(4148),i=n(1426);function o(e){return i.vA(i.Tn(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const s=(0,a.YT)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,a.YT)(n,"dy","tf.grad"):null;return r.T2.tidy((()=>{const{value:t,grads:n}=r.T2.gradients((()=>e(s)),[s],o);return null!=o&&i.O3(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]}))}}function l(e){return i.vA(i.Tn(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.vA(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const s=(0,a.j1)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,a.YT)(n,"dy","tf.grads"):null;return r.T2.tidy((()=>{const{value:t,grads:n}=r.T2.gradients((()=>e(...s)),s,o);return null!=o&&i.O3(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n}))}}function u(e){return i.vA(i.Tn(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.vA(t instanceof s.qY,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.vA(null==n||n instanceof s.qY,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:a,value:o}=r.T2.gradients((()=>e(t)),[t],n);return p(a),{grad:a[0],value:o}}}function c(e){return i.vA(i.Tn(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.vA(Array.isArray(t)&&t.every((e=>e instanceof s.qY)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.vA(null==n||n instanceof s.qY,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const a=r.T2.gradients((()=>e(...t)),t,n);return null!=n&&i.O3(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(a.grads),a}}function h(e,t){i.vA(i.Tn(e),(()=>"The f passed in variableGrads(f) must be a function")),i.vA(null==t||Array.isArray(t)&&t.every((e=>e instanceof s.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.T2.registeredVariables)t.push(r.T2.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.vA(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:l,grads:u}=r.T2.gradients(e,t,null,!0);i.vA(u.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.vA(0===l.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=u[t]&&(c[e.name]=u[t])})),null!=a&&a.forEach((e=>c[e.name]=null)),{value:l,grads:c}}function d(e){return r.T2.customGrad(e)}function p(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},664:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>bt.ljI,Acos:()=>bt.Vvy,Acosh:()=>bt.PH8,AdadeltaOptimizer:()=>Re,AdagradOptimizer:()=>De,AdamOptimizer:()=>Oe,AdamaxOptimizer:()=>Pe,Add:()=>bt.OMN,AddN:()=>bt.EkD,All:()=>bt.u8Z,Any:()=>bt.FSt,ArgMax:()=>bt.Jp_,ArgMin:()=>bt.p_m,Asin:()=>bt.QKF,Asinh:()=>bt.epO,Atan:()=>bt.TyE,Atan2:()=>bt.lxb,Atanh:()=>bt.zP9,AvgPool:()=>bt.ho8,AvgPool3D:()=>bt.cS,AvgPool3DGrad:()=>bt.wwC,AvgPoolGrad:()=>bt.VCH,BatchMatMul:()=>bt.jAQ,BatchToSpaceND:()=>bt.Ik2,Bincount:()=>bt.N4F,BitwiseAnd:()=>bt.HNs,BroadcastArgs:()=>bt.vj7,BroadcastTo:()=>bt.LB5,Cast:()=>bt.KXH,Ceil:()=>bt.QDP,ClipByValue:()=>bt.vaV,Complex:()=>bt.pr3,ComplexAbs:()=>bt.$zE,Concat:()=>bt.$dB,Conv2D:()=>bt.p2J,Conv2DBackpropFilter:()=>bt.rFm,Conv2DBackpropInput:()=>bt.jfg,Conv3D:()=>bt.A1h,Conv3DBackpropFilterV2:()=>bt.iGz,Conv3DBackpropInputV2:()=>bt.gC7,Cos:()=>bt.Mn0,Cosh:()=>bt.MnK,CropAndResize:()=>bt.MRQ,Cumprod:()=>bt.jj_,Cumsum:()=>bt.nY8,DataStorage:()=>Dr.GJ,DenseBincount:()=>bt.wNW,DepthToSpace:()=>bt.TMz,DepthwiseConv2dNative:()=>bt.tGH,DepthwiseConv2dNativeBackpropFilter:()=>bt.X$8,DepthwiseConv2dNativeBackpropInput:()=>bt.nVu,Diag:()=>bt.ORI,Dilation2D:()=>bt.jxD,Dilation2DBackpropFilter:()=>bt.pk0,Dilation2DBackpropInput:()=>bt.bP9,Draw:()=>bt.XmO,ENV:()=>v.Km,Einsum:()=>bt.Qgm,Elu:()=>bt.Pah,EluGrad:()=>bt.rsH,Environment:()=>v.OH,Equal:()=>bt.BRl,Erf:()=>bt._s9,Exp:()=>bt.ox3,ExpandDims:()=>bt.ybN,Expm1:()=>bt.ybj,FFT:()=>bt.rGP,Fill:()=>bt.SQl,FlipLeftRight:()=>bt.BxF,Floor:()=>bt.ZgB,FloorDiv:()=>bt.ElG,FromPixels:()=>bt.awo,FusedBatchNorm:()=>bt.i5R,FusedConv2D:()=>bt.aAr,FusedDepthwiseConv2D:()=>bt.T7M,GatherNd:()=>bt.O4G,GatherV2:()=>bt.mxL,Greater:()=>bt.XhZ,GreaterEqual:()=>bt.lLS,IFFT:()=>bt.OAQ,Identity:()=>bt.lzr,Imag:()=>bt.dv8,IsFinite:()=>bt.gIW,IsInf:()=>bt.E3$,IsNan:()=>bt.iPs,KernelBackend:()=>Dr.uI,LRN:()=>bt.jM4,LRNGrad:()=>bt.ToN,LeakyRelu:()=>bt.X0$,Less:()=>bt.mIA,LessEqual:()=>bt.CwD,LinSpace:()=>bt.mnI,Log:()=>bt.tG8,Log1p:()=>bt.Cg$,LogSoftmax:()=>bt.zfU,LogicalAnd:()=>bt.RUm,LogicalNot:()=>bt.nZd,LogicalOr:()=>bt.LXA,LogicalXor:()=>bt.RW8,LowerBound:()=>bt.yPW,MatrixBandPart:()=>bt.WRv,Max:()=>bt.VAI,MaxPool:()=>bt.t3d,MaxPool3D:()=>bt.ySp,MaxPool3DGrad:()=>bt.cHb,MaxPoolGrad:()=>bt.RXX,MaxPoolWithArgmax:()=>bt.TL8,Maximum:()=>bt.LDN,Mean:()=>bt.g5A,Min:()=>bt.lNG,Minimum:()=>bt.LG0,MirrorPad:()=>bt.x7F,Mod:()=>bt.BLA,MomentumOptimizer:()=>We,Multinomial:()=>bt.WT3,Multiply:()=>bt.xu7,Neg:()=>bt.l0G,NonMaxSuppressionV3:()=>bt.SDM,NonMaxSuppressionV4:()=>bt.Zl4,NonMaxSuppressionV5:()=>bt.e0f,NotEqual:()=>bt.ylV,OP_SCOPE_SUFFIX:()=>yn.BTT,OneHot:()=>bt.urI,OnesLike:()=>bt.LWX,Optimizer:()=>Ae,OptimizerConstructors:()=>mn,Pack:()=>bt.mM$,PadV2:()=>bt.ODT,Pool:()=>bt.bCz,Pow:()=>bt.pyJ,Prelu:()=>bt.Ncv,Prod:()=>bt.kdj,RMSPropOptimizer:()=>Ve,RaggedGather:()=>bt.oJ2,RaggedRange:()=>bt.CQC,RaggedTensorToTensor:()=>bt.mH5,Range:()=>bt.Q6t,Rank:()=>gn.rg,Real:()=>bt.LRy,RealDiv:()=>bt.sDr,Reciprocal:()=>bt.huO,Reduction:()=>bn.i,Relu:()=>bt.fUj,Relu6:()=>bt.P_L,Reshape:()=>bt.R23,ResizeBilinear:()=>bt.hgw,ResizeBilinearGrad:()=>bt.FCQ,ResizeNearestNeighbor:()=>bt.jOE,ResizeNearestNeighborGrad:()=>bt.XQy,Reverse:()=>bt.D7i,RotateWithOffset:()=>bt.BK4,Round:()=>bt.hVg,Rsqrt:()=>bt.TOR,SGDOptimizer:()=>Be,ScatterNd:()=>bt.pJc,SearchSorted:()=>bt.uWl,Select:()=>bt.l6P,Selu:()=>bt.u$b,Sigmoid:()=>bt.vI1,Sign:()=>bt.YVe,Sin:()=>bt.hql,Sinh:()=>bt.J3C,Slice:()=>bt.JiE,Softmax:()=>bt.rFG,Softplus:()=>bt.Fin,SpaceToBatchND:()=>bt.A8B,SparseFillEmptyRows:()=>bt.C8s,SparseReshape:()=>bt.BoJ,SparseSegmentMean:()=>bt.L6G,SparseSegmentSum:()=>bt.DvZ,SparseToDense:()=>bt.jgd,SplitV:()=>bt.Blb,Sqrt:()=>bt.dFH,Square:()=>bt.M6A,SquaredDifference:()=>bt.Ddj,StaticRegexReplace:()=>bt.GZp,Step:()=>bt.pnw,StridedSlice:()=>bt.UcO,StringNGrams:()=>bt.YAb,StringSplit:()=>bt.iW0,StringToHashBucketFast:()=>bt.$jE,Sub:()=>bt.PbM,Sum:()=>bt.WuN,Tan:()=>bt.oFs,Tanh:()=>bt.iuW,Tensor:()=>pe.qY,TensorBuffer:()=>pe.yl,TensorScatterUpdate:()=>bt.X4r,Tile:()=>bt.FAs,TopK:()=>bt.TBb,Transform:()=>bt.dLy,Transpose:()=>bt.wx0,Unique:()=>bt.EwU,Unpack:()=>bt.dXR,UnsortedSegmentSum:()=>bt.pPe,UpperBound:()=>bt.RMm,Variable:()=>pe.rT,ZerosLike:()=>bt.xJ3,_FusedMatMul:()=>bt.Dr,abs:()=>yn.tnl,acos:()=>yn.HQu,acosh:()=>yn.FqL,add:()=>yn.WQq,addN:()=>yn.QiD,all:()=>yn.Q7R,any:()=>yn.bzn,argMax:()=>yn.FLi,argMin:()=>yn.XRg,asin:()=>yn.qRo,asinh:()=>yn.yHs,atan:()=>yn.rYl,atan2:()=>yn.FPz,atanh:()=>yn.rfv,avgPool:()=>yn.$jT,avgPool3d:()=>yn.sub,backend:()=>me.Hs,backend_util:()=>d,basicLSTMCell:()=>yn.lZX,batchNorm:()=>yn.$v7,batchNorm2d:()=>yn.BFc,batchNorm3d:()=>yn.kSi,batchNorm4d:()=>yn.T5N,batchToSpaceND:()=>yn.GTe,bincount:()=>yn.HbZ,bitwiseAnd:()=>yn.vjT,booleanMaskAsync:()=>yn.ftb,broadcastArgs:()=>yn.ROE,broadcastTo:()=>yn.hOW,broadcast_util:()=>yt,browser:()=>o,buffer:()=>yn.ra8,cast:()=>yn.wgE,ceil:()=>yn.mkO,clipByValue:()=>yn.zQh,clone:()=>yn.o8B,complex:()=>yn.faB,concat:()=>yn.xWs,concat1d:()=>yn.I1m,concat2d:()=>yn.RPU,concat3d:()=>yn.O5O,concat4d:()=>yn.P1l,conv1d:()=>yn.kA9,conv2d:()=>yn.Xtf,conv2dTranspose:()=>yn.wX9,conv3d:()=>yn.IPL,conv3dTranspose:()=>yn.jIJ,copyRegisteredKernels:()=>vt.Cf,cos:()=>yn.gnS,cosh:()=>yn.yIG,cosineWindow:()=>yn._jP,cumprod:()=>yn.Lp0,cumsum:()=>yn.rCv,customGrad:()=>ke._X,denseBincount:()=>yn.aOp,deprecationWarn:()=>me.fL,depthToSpace:()=>yn.Rj8,depthwiseConv2d:()=>yn.Gl3,device_util:()=>r,diag:()=>yn.smy,dilation2d:()=>yn.X7t,disableDeprecationWarnings:()=>me.IS,dispose:()=>me.AS,disposeVariables:()=>me.rm,div:()=>yn.y4m,divNoNan:()=>yn.ek5,dot:()=>yn.Omf,dropout:()=>yn.EZY,einsum:()=>yn._3C,elu:()=>yn.Pqc,enableDebugMode:()=>me.gY,enableProdMode:()=>me.Sm,enclosingPowerOfTwo:()=>yn.FJY,engine:()=>me.Hi,ensureShape:()=>yn.QP2,env:()=>v._K,equal:()=>yn.LCg,erf:()=>yn.Y12,euclideanNorm:()=>yn.p4S,exp:()=>yn.oNF,expandDims:()=>yn.UG6,expm1:()=>yn.IYd,eye:()=>yn.y5U,fft:()=>yn.hVP,fill:()=>yn.GSj,findBackend:()=>me.go,findBackendFactory:()=>me.W4,floor:()=>yn.RIf,floorDiv:()=>yn.wh_,fused:()=>yn.cZk,gather:()=>yn.kgh,gatherND:()=>yn.SY9,gather_util:()=>l,getBackend:()=>me.jz,getGradient:()=>vt.vQ,getKernel:()=>vt._5,getKernelsForBackend:()=>vt.Op,grad:()=>ke.Dv,grads:()=>ke.ok,greater:()=>yn.rhj,greaterEqual:()=>yn.DQN,ifft:()=>yn.KGM,imag:()=>yn.ngS,image:()=>yn.Slp,inTopKAsync:()=>yn.U4u,io:()=>a,irfft:()=>yn.ggX,isFinite:()=>yn.MIs,isInf:()=>yn.EN4,isNaN:()=>yn.yrW,keep:()=>me.aC,kernel_impls:()=>p,leakyRelu:()=>yn.H8d,less:()=>yn.M7h,lessEqual:()=>yn.InN,linalg:()=>yn.mPL,linspace:()=>yn.mT8,localResponseNormalization:()=>yn.Kgs,log:()=>yn.Rm2,log1p:()=>yn.Kko,logSigmoid:()=>yn.nqI,logSoftmax:()=>yn.HPB,logSumExp:()=>yn.VZ,logicalAnd:()=>yn.n76,logicalNot:()=>yn.NSZ,logicalOr:()=>yn.ztW,logicalXor:()=>yn.rxB,losses:()=>yn.YYh,lowerBound:()=>yn.yzS,matMul:()=>yn.NoW,math:()=>i,max:()=>yn.T9B,maxPool:()=>yn.jgi,maxPool3d:()=>yn.NYV,maxPoolWithArgmax:()=>yn.RO,maximum:()=>yn.PhQ,mean:()=>yn.i2o,memory:()=>me.m1,meshgrid:()=>yn.OYQ,min:()=>yn.jkA,minimum:()=>yn.BpO,mirrorPad:()=>yn.FFZ,mod:()=>yn.ziu,moments:()=>yn.Clk,movingAverage:()=>yn.CRk,mul:()=>yn.lKK,multiRNNCell:()=>yn.YDF,multinomial:()=>yn.OjQ,neg:()=>yn.HZy,nextFrame:()=>wn,norm:()=>yn.xbf,notEqual:()=>yn.Ec,oneHot:()=>yn.Mw0,ones:()=>yn.SaS,onesLike:()=>yn.P61,op:()=>yn.op,outerProduct:()=>yn.X4o,pad:()=>yn.eVF,pad1d:()=>yn.BZs,pad2d:()=>yn.grY,pad3d:()=>yn.XHu,pad4d:()=>yn.WLX,pool:()=>yn.dzn,pow:()=>yn.n7C,prelu:()=>yn.NsG,print:()=>yn.yyV,prod:()=>yn._eU,profile:()=>me.ME,raggedGather:()=>yn.whe,raggedRange:()=>yn.iyU,raggedTensorToTensor:()=>yn.Q0_,rand:()=>yn._9M,randomGamma:()=>yn.pR9,randomNormal:()=>yn.FE$,randomStandardNormal:()=>yn.m0H,randomUniform:()=>yn.YeY,randomUniformInt:()=>yn.HYA,range:()=>yn.y17,ready:()=>me.Gc,real:()=>yn.xav,reciprocal:()=>yn.VOZ,registerBackend:()=>me.gJ,registerGradient:()=>vt.kr,registerKernel:()=>vt.tA,relu:()=>yn.VVh,relu6:()=>yn.j__,removeBackend:()=>me.rE,reshape:()=>yn.tQQ,reverse:()=>yn.BEg,reverse1d:()=>yn.QD2,reverse2d:()=>yn.LMr,reverse3d:()=>yn.I2l,reverse4d:()=>yn.JYU,rfft:()=>yn.z8$,round:()=>yn.LIG,rsqrt:()=>yn.Z$r,scalar:()=>yn.d_2,scatterND:()=>yn.NFr,scatter_util:()=>Rt,searchSorted:()=>yn.sZg,selu:()=>yn.WfX,separableConv2d:()=>yn.wdz,serialization:()=>s,setBackend:()=>me.jh,setPlatform:()=>me.Ok,setdiff1dAsync:()=>yn.F12,sigmoid:()=>yn.ry7,sign:()=>yn._SZ,signal:()=>yn.vPA,sin:()=>yn.F8e,sinh:()=>yn.L0l,slice:()=>yn.dik,slice1d:()=>yn.Q$M,slice2d:()=>yn.zAd,slice3d:()=>yn.wck,slice4d:()=>yn.R0O,slice_util:()=>u,softmax:()=>yn.Vs9,softplus:()=>yn.lw0,spaceToBatchND:()=>yn.eDJ,sparse:()=>yn.lMo,sparseToDense:()=>yn.Zhr,spectral:()=>yn.lOn,split:()=>yn.lDo,sqrt:()=>yn.RZD,square:()=>yn.EwI,squaredDifference:()=>yn.Pbu,squeeze:()=>yn.r2V,stack:()=>yn.t$z,step:()=>yn.PMw,stridedSlice:()=>yn.Ym9,string:()=>yn.YjP,sub:()=>yn.jbE,sum:()=>yn.czq,sumOutType:()=>gn.ch,tan:()=>yn.Mlm,tanh:()=>yn.ymU,tensor:()=>yn.OEK,tensor1d:()=>yn.tGX,tensor2d:()=>yn.KtR,tensor3d:()=>yn.$_$,tensor4d:()=>yn.g9W,tensor5d:()=>yn.Lpo,tensor6d:()=>yn.yxw,tensorScatterUpdate:()=>yn.NNh,tensor_util:()=>Zt,test_util:()=>c,tidy:()=>me.DZ,tile:()=>yn.Vsq,time:()=>me.kB,topk:()=>yn.rfw,train:()=>vn,transpose:()=>yn.mgz,truncatedNormal:()=>yn.efE,unique:()=>yn.AmM,unregisterGradient:()=>vt.rY,unregisterKernel:()=>vt.iP,unsortedSegmentSum:()=>yn.zAU,unstack:()=>yn.K$i,upcastType:()=>gn.Tu,upperBound:()=>yn.rni,util:()=>Qt,valueAndGrad:()=>ke.jY,valueAndGrads:()=>ke.mu,variable:()=>yn.bvq,variableGrads:()=>ke.y7,version_core:()=>fn,where:()=>yn._M9,whereAsync:()=>yn.YJN,zeros:()=>yn.Ul9,zerosLike:()=>yn.POl});var r={};n.r(r),n.d(r,{isBrowser:()=>b,isMobile:()=>y,mockIsMobile:()=>g});var s={};n.r(s),n.d(s,{Serializable:()=>Ie,SerializationMap:()=>Ee,getRegisteredName:()=>Ce,registerClass:()=>$e});var a={};n.r(a),n.d(a,{CompositeArrayBuffer:()=>E.D,browserFiles:()=>qe,browserHTTPRequest:()=>rt,concatenateArrayBuffers:()=>w.AQ,copyModel:()=>ne,decodeWeights:()=>w.CY,decodeWeightsStream:()=>w.s5,encodeWeights:()=>w.aG,fromMemory:()=>ot,fromMemorySync:()=>lt,getLoadHandlers:()=>I,getModelArtifactsForJSON:()=>w.Ej,getModelArtifactsForJSONSync:()=>w.Rl,getModelArtifactsInfoForJSON:()=>w.oR,getSaveHandlers:()=>S,getWeightSpecs:()=>w.Xf,http:()=>nt,isHTTPScheme:()=>et,listModels:()=>ee,loadWeights:()=>Ze,moveModel:()=>re,registerLoadRouter:()=>N,registerSaveRouter:()=>T,removeModel:()=>te,weightsLoaderFactory:()=>Qe,withSaveHandler:()=>ut,withSaveHandlerSync:()=>ct});var i={};n.r(i),n.d(i,{confusionMatrix:()=>gt});var o={};n.r(o),n.d(o,{draw:()=>$t,fromPixels:()=>Ct,fromPixelsAsync:()=>St,toPixels:()=>Et});var l={};n.r(l),n.d(l,{prepareAndValidate:()=>At});var u={};n.r(u),n.d(u,{assertParamsValid:()=>Ft,computeFlatOffset:()=>qt,computeOutShape:()=>Ot,getNormalizedAxes:()=>Bt,isSliceContinous:()=>Ht,maskToAxes:()=>Mt,parseSliceParams:()=>Kt,sliceInfo:()=>Yt,startForAxis:()=>Gt,startIndicesWithElidedDims:()=>Wt,stopForAxis:()=>jt,stopIndicesWithElidedDims:()=>Vt,stridesForAxis:()=>Ut,stridesWithElidedDims:()=>Lt});var c={};n.r(c),n.d(c,{TEST_EPSILON_FLOAT16:()=>en,createVideoElement:()=>dn,encodeStrings:()=>hn,expectArrayBuffersEqual:()=>cn,expectArraysClose:()=>tn,expectArraysEqual:()=>an,expectNumbersClose:()=>on,expectPromiseToFail:()=>sn,expectValuesInRange:()=>un,play:()=>pn,testEpsilon:()=>nn});var h={};n.r(h),n.d(h,{collectGatherOpShapeInfo:()=>$r,computeOutShape:()=>Er,segOpComputeOptimalWindowSize:()=>Ir});var d={};n.r(d),n.d(d,{ERF_A1:()=>Un,ERF_A2:()=>Gn,ERF_A3:()=>jn,ERF_A4:()=>Hn,ERF_A5:()=>qn,ERF_P:()=>Vn,PARALLELIZE_THRESHOLD:()=>_n,RowPartitionType:()=>Sn,SELU_SCALE:()=>Wn,SELU_SCALEALPHA:()=>Bn,applyActivation:()=>En.f2,assertAndGetBroadcastShape:()=>yt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>kn.WC,assertParamsConsistent:()=>Tn,assignToTypedArray:()=>er,axesAreInnerMostDims:()=>kn.WH,calculateShapes:()=>Rt.calculateShapes,checkEinsumDimSizes:()=>ur,checkPadOnDimRoundingMode:()=>In.s_,combineLocations:()=>kn.aF,combineRaggedTensorToTensorShapes:()=>$n,complexWithEvenIndex:()=>Zn,complexWithOddIndex:()=>Qn,computeConv2DInfo:()=>In.uf,computeConv3DInfo:()=>In.p$,computeDefaultPad:()=>In.G8,computeDilation2DInfo:()=>In.YQ,computeOptimalWindowSize:()=>Dn,computeOutAndReduceShapes:()=>kn.lb,computeOutShape:()=>Nn,computePool2DInfo:()=>In.E6,computePool3DInfo:()=>In.l5,convertConv2DDataFormat:()=>In.$Q,decodeEinsumEquation:()=>or,eitherStridesOrDilationsAreOne:()=>In.G0,expandShapeToKeepDim:()=>kn.SM,exponent:()=>nr,exponents:()=>tr,fromStringArrayToUint8:()=>Ar,fromUint8ToStringArray:()=>Cr,getAxesPermutation:()=>kn.Em,getBroadcastDims:()=>yt.getBroadcastDims,getComplexWithIndex:()=>Jn,getEinsumComputePath:()=>cr,getEinsumPermutation:()=>lr,getFusedBiasGradient:()=>En.Do,getFusedDyActivation:()=>En.XB,getImageCenter:()=>Fn,getInnerMostAxes:()=>kn.fK,getPermuted:()=>On,getRaggedRank:()=>An,getReductionAxes:()=>yt.getReductionAxes,getReshaped:()=>Mn,getReshapedPermuted:()=>Ln,getRowPartitionTypesHelper:()=>Cn,getSliceBeginCoords:()=>zn,getSliceSize:()=>Pn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>fr,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>mr,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>gr,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>vr,getSparseReshapeInputOutputMismatchErrorMessage:()=>wr,getSparseReshapeInputOutputMultipleErrorMessage:()=>xr,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>yr,getSparseReshapeNegativeOutputDimErrorMessage:()=>br,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Sr,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>kr,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Tr,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Nr,getUndoAxesPermutation:()=>kn.gx,isIdentityPermutation:()=>hr,log:()=>Kn.R,mergeRealAndImagArrays:()=>Yn,prepareAndValidate:()=>At,prepareSplitSize:()=>pr,segment_util:()=>h,shouldFuse:()=>En.zE,slice_util:()=>u,splitRealAndImagArrays:()=>Xn,stridesOrDilationsArePositive:()=>In.qk,tupleValuesAreOne:()=>In.Dh,upcastType:()=>gn.Tu,validateDefaultValueShape:()=>Rn,validateInput:()=>Rt.validateInput,validateUpdateShape:()=>Rt.validateUpdateShape,warn:()=>Kn.i});var p={};n.r(p),n.d(p,{nonMaxSuppressionV3Impl:()=>Rr.c7,nonMaxSuppressionV4Impl:()=>Rr.ZS,nonMaxSuppressionV5Impl:()=>Rr.ut,whereImpl:()=>_r.Y});var f=n(2164);let m;function g(e){m=e}function y(e){if(void 0!==m)return m;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function b(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var v=n(5399);const x=(0,v._K)();x.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),x.registerFlag("IS_BROWSER",(()=>b())),x.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),x.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),x.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),x.registerFlag("PROD",(()=>!1)),x.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>x.getBool("DEBUG"))),x.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),x.registerFlag("IS_TEST",(()=>!1)),x.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>x.getBool("DEBUG"))),x.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),x.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),x.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var w=n(285);class k{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==k.instance&&(k.instance=new k),k.instance}static registerSaveRouter(e){k.getInstance().saveRouters.push(e)}static registerLoadRouter(e){k.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return k.getHandlers(e,"save")}static getLoadHandlers(e,t){return k.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?k.getInstance().loadRouters:k.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const T=e=>k.registerSaveRouter(e),N=e=>k.registerLoadRouter(e),S=e=>k.getSaveHandlers(e),I=(e,t)=>k.getLoadHandlers(e,t);var E=n(7131);const $="tensorflowjs",C="models_store",A="model_info_store";function R(){if(!(0,v._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _(e){const t=e.result;t.createObjectStore(C,{keyPath:"modelPath"}),t.createObjectStore(A,{keyPath:"modelPath"})}class D{constructor(e){if(this.indexedDB=R(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open($,1);r.onupgradeneeded=()=>_(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(C,"readonly"),r=t.objectStore(C).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=E.D.join(t.weightData);const r=(0,w.oR)(t),i=s.transaction(A,"readwrite");let o,l,u=i.objectStore(A);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(a){return n(a)}o.onsuccess=()=>{l=s.transaction(C,"readwrite");const o=l.objectStore(C);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(a){return n(a)}c.onsuccess=()=>e({modelArtifactsInfo:r}),c.onerror=e=>{u=i.objectStore(A);const t=u.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(c.error)),t.onerror=e=>(s.close(),n(c.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}D.URL_SCHEME="indexeddb://";const F=e=>{return(0,v._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(D.URL_SCHEME)?(t=e.slice(D.URL_SCHEME.length),new D(t)):null;var t};k.registerSaveRouter(F),k.registerLoadRouter(F);class M{constructor(){this.indexedDB=R()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open($,1);n.onupgradeneeded=()=>_(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(A,"readonly"),a=s.objectStore(A).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(D.URL_SCHEME)?t.slice(D.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open($,1);r.onupgradeneeded=()=>_(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(A,"readwrite"),i=a.objectStore(A),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(C,"readwrite");const r=l.objectStore(C).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}var O=n(1426);const L="/",z="tensorflowjs_models",P="info",B="model_topology",W="weight_specs",V="weight_data",U="model_metadata";function G(e){return{info:[z,e,P].join(L),topology:[z,e,B].join(L),weightSpecs:[z,e,W].join(L),weightData:[z,e,V].join(L),modelMetadata:[z,e,U].join(L)}}function j(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function H(e){const t=e.split(L);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(L)}class q{constructor(e){if(!(0,v._K)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=G(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=(0,w.oR)(e),a=E.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(0,w.l3)(a));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw j(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,w.jf)(a),t}}q.URL_SCHEME="localstorage://";const K=e=>{return(0,v._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(q.URL_SCHEME)?(t=e.slice(q.URL_SCHEME.length),new q(t)):null;var t};k.registerSaveRouter(K),k.registerLoadRouter(K);class Y{constructor(){(0,O.vA)((0,v._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,O.vA)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=z+L,n=L+P;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[H(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=G(e=(t=e).startsWith(q.URL_SCHEME)?t.slice(q.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return j(n),r}}const X="://";class Z{constructor(){this.managers={}}static getInstance(){return null==Z.instance&&(Z.instance=new Z),Z.instance}static registerManager(e,t){(0,O.vA)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(X)&&(e=e.slice(0,e.indexOf(X))),(0,O.vA)(e.length>0,(()=>"scheme must not be an empty string."));const n=Z.getInstance();(0,O.vA)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Z.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Z.getInstance().managers)}}function Q(e){if(-1===e.indexOf(X))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Z.getSchemes().join(",")}`);return{scheme:e.split(X)[0],path:e.split(X)[1]}}async function J(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,O.vA)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=k.getLoadHandlers(e);(0,O.vA)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,O.vA)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=k.getSaveHandlers(t);(0,O.vA)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,O.vA)(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=Q(e).scheme,l=Q(e).path,u=o===Q(e).scheme,c=await s.load();n&&u&&await Z.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await Z.getManager(o).removeModel(l),h.modelArtifactsInfo}async function ee(){const e=Z.getSchemes(),t={};for(const n of e){const e=await Z.getManager(n).listModels();for(const r in e){t[n+X+r]=e[r]}}return t}async function te(e){const t=Q(e);return Z.getManager(t.scheme).removeModel(t.path)}async function ne(e,t){return J(e,t,!1)}async function re(e,t){return J(e,t,!0)}var se=n(5767);class ae{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,v._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,se.Y)(e)}}if((0,v._K)().get("IS_BROWSER")){(0,v._K)().setPlatform("browser",new ae);try{Z.registerManager(q.URL_SCHEME,new Y)}catch(Fr){}try{Z.registerManager(D.URL_SCHEME,new M)}catch(Fr){}}const ie=()=>n(5817);let oe;class le{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,v._K)().global.fetch?(0,v._K)().global.fetch(e,t):(null==oe&&(oe=ie()),oe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,v._K)().get("IS_NODE")&&!(0,v._K)().get("IS_BROWSER")&&(0,v._K)().setPlatform("node",new le);var ue=n(259),ce=n(7794),he=n(9820),de=n(6574),pe=n(9494);(0,f.Ye)();const fe={buffer:ue.r,cast:ce.w,clone:he.o,print:de.y};(0,pe.Q5)(fe);var me=n(8046),ge=n(7242),ye=n(4974),be=n(803),ve=n(191),xe=n(7738),we=n(3290),ke=n(1839),Te=n(1997);const Ne=new Map,Se=new Map;class Ie{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ee{constructor(){this.classNameMap={}}static getMap(){return null==Ee.instance&&(Ee.instance=new Ee),Ee.instance}static register(e){Ee.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function $e(e,t,n){(0,O.vA)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,O.vA)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,O.vA)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const r=t+">"+n;return Ee.register(e),Ne.set(r,e),Se.set(e,r),e}function Ce(e){return Se.has(e)?Se.get(e):e.className}class Ae extends Ie{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return(0,me.AS)(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,ke.y7)(e,t)}dispose(){null!=this.iterations_&&(0,me.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Te.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ae,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Re extends Ae{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=f.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.T2.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,me.DZ)((()=>(0,we.P)(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,me.DZ)((()=>(0,we.P)(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,me.DZ)((()=>{const e=(0,ge.W)((0,be.l)(i,this.rho),(0,be.l)((0,xe.E)(a),1-this.rho)),t=(0,be.l)((0,ye.y)((0,ve.R)((0,ge.W)(o,this.epsilon)),(0,ve.R)((0,ge.W)(i,this.epsilon))),a),n=(0,ge.W)((0,be.l)(o,this.rho),(0,be.l)((0,xe.E)(t),1-this.rho));i.assign(e),o.assign(n);const s=(0,ge.W)((0,be.l)(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,me.AS)(this.accumulatedGrads.map((e=>e.variable))),(0,me.AS)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var _e=n(4660);class De extends Ae{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,me.DZ)((()=>(0,_e.G)(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;(0,me.DZ)((()=>{const e=(0,ge.W)(a,(0,xe.E)(s));a.assign(e);const t=(0,ge.W)((0,be.l)((0,ye.y)(s,(0,ve.R)((0,ge.W)(e,f.T2.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,me.AS)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var Fe=n(7587),Me=n(7951);class Oe extends Ae{static get className(){return"Adam"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,me.DZ)((()=>{this.accBeta1=(0,Te.d)(t).variable(),this.accBeta2=(0,Te.d)(n).variable()})),null==r&&(this.epsilon=f.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,me.DZ)((()=>{const n=(0,Me.j)(1,this.accBeta1),r=(0,Me.j)(1,this.accBeta2);t.forEach(((t,s)=>{const a=f.T2.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,me.DZ)((()=>(0,we.P)(a).variable(i)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:(0,me.DZ)((()=>(0,we.P)(a).variable(i)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=(0,ge.W)((0,be.l)(l,this.beta1),(0,be.l)(o,1-this.beta1)),h=(0,ge.W)((0,be.l)(u,this.beta2),(0,be.l)((0,xe.E)(o),1-this.beta2)),d=(0,ye.y)(c,n),p=(0,ye.y)(h,r);l.assign(c),u.assign(h);const m=(0,ge.W)((0,be.l)((0,ye.y)(d,(0,ge.W)((0,ve.R)(p),this.epsilon)),-this.learningRate),a);a.assign(m)})),this.accBeta1.assign((0,be.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,be.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,me.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,me.AS)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,me.DZ)((()=>{this.accBeta1.assign((0,Fe.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Fe.n)(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var Le=n(3753),ze=n(2131);class Pe extends Ae{static get className(){return"Adamax"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,me.DZ)((()=>{this.iteration=(0,Te.d)(0).variable(),this.accBeta1=(0,Te.d)(t).variable()})),null==r&&(this.epsilon=f.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,me.DZ)((()=>{const n=(0,Me.j)(1,this.accBeta1),r=(0,ye.y)(-this.learningRate,(0,ge.W)((0,be.l)(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=f.T2.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,we.P)(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:(0,we.P)(a).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=(0,ge.W)((0,be.l)(l,this.beta1),(0,be.l)(o,1-this.beta1)),h=(0,be.l)(u,this.beta2),d=(0,Le.t)(o),p=(0,ze.P)(h,d);l.assign(c),u.assign(p);const m=(0,ge.W)((0,be.l)((0,ye.y)(r,n),(0,ye.y)(c,(0,ge.W)(p,this.epsilon))),a);a.assign(m)})),this.iteration.assign((0,ge.W)(this.iteration,1)),this.accBeta1.assign((0,be.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,me.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,me.AS)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Be extends Ae{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=f.T2.registeredVariables[t];(0,me.DZ)((()=>{const e=(0,ge.W)((0,be.l)(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,me.aC)((0,Te.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class We extends Be{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Te.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,me.DZ)((()=>(0,we.P)(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,me.DZ)((()=>{let e;const t=(0,ge.W)((0,be.l)(this.m,s),a);e=this.useNesterov?(0,ge.W)((0,be.l)(this.c,(0,ge.W)(a,(0,be.l)(t,this.m))),r):(0,ge.W)((0,be.l)(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,me.AS)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Ve extends Ae{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=f.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=f.T2.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,me.DZ)((()=>(0,we.P)(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,me.DZ)((()=>(0,we.P)(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,me.DZ)((()=>(0,we.P)(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,me.DZ)((()=>{const e=(0,ge.W)((0,be.l)(i,this.decay),(0,be.l)((0,xe.E)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=(0,ge.W)((0,be.l)(t,this.decay),(0,be.l)(a,1-this.decay)),l=(0,ye.y)((0,be.l)(a,this.learningRate),(0,ve.R)((0,Me.j)(e,(0,ge.W)((0,xe.E)(s),this.epsilon)))),u=(0,ge.W)((0,be.l)(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=(0,Me.j)(r,u);r.assign(c)}else{const e=(0,ge.W)((0,be.l)(i,this.decay),(0,be.l)((0,xe.E)(a),1-this.decay)),t=(0,ge.W)((0,be.l)(o,this.momentum),(0,ye.y)((0,be.l)(a,this.learningRate),(0,ve.R)((0,ge.W)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,Me.j)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,me.AS)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,me.AS)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,me.AS)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ue=[Re,De,Oe,Pe,We,Ve,Be];function Ge(e){return new Promise((e=>setTimeout(e))).then(e)}class je{constructor(e){if(!(0,v._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(je.URL_SCHEME)&&(e=e.slice(je.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=E.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=(0,w.zV)(e,t),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await Ge((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ge((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,w.oR)(e)}}}}je.URL_SCHEME="downloads://";class He{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=(0,w.Ej)(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,w.P8)(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=(0,w.P8)(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function qe(e){return new He(e)}function Ke(e,t,n,r){!function(e){(0,O.vA)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,O.vA)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,O.vA)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,O.vA)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}k.registerSaveRouter((e=>(0,v._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(je.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new je(e)}(e.slice(je.URL_SCHEME.length)):null));var Ye=n(1042);async function Xe(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,v._K)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Ke(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Ke(s,t.onProgress,.5,1)}async function Ze(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Qe((e=>Xe(e,{requestInit:r})))(e,t,n)}function Qe(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Ye.i[l]*O.Ze(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let d=0;return l.forEach((e=>{const n=t[e].paths.length,r=new E.D(c.slice(d,d+n));a[e].forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,w.CY)(t,[e.manifestEntry]);for(const r in n)h[r]=n[r]})),d+=n})),h}}class Je{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,O.vA)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,v._K)().platform.fetch,(0,O.vA)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,O.vA)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=(0,w.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=E.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:(0,w.oR)(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,w.Ej)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,w.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?(0,v._K)().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const o of e)for(const e of o.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,w.Xf)(e),await Xe(t,this.loadOptions)]}}function et(e){return null!=e.match(Je.URL_SCHEME_REGEX)}Je.URL_SCHEME_REGEX=/^https?:\/\//;const tt=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>et(e))):et(e),n)return nt(e,t)}return null};function nt(e,t){return new Je(e,t)}function rt(e,t){return nt(e,t)}k.registerSaveRouter(tt),k.registerLoadRouter(tt);class st{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class at{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class it{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ot(e,t,n,r){return new it(lt(...arguments))}function lt(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new st(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new st({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new st({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function ut(e){return new at(e)}function ct(e){return new at(e)}var ht=n(4148),dt=n(5162),pt=n(6865),ft=n(7892),mt=n(2154);const gt=(0,ft.op)({confusionMatrix_:function(e,t,n){const r=(0,ht.YT)(e,"labels","confusionMatrix"),s=(0,ht.YT)(t,"predictions","confusionMatrix");O.vA(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),O.vA(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),O.vA(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),O.vA(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),O.vA(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=(0,pt.M)((0,ce.w)(r,"int32"),n),i=(0,pt.M)((0,ce.w)(s,"int32"),n),o=(0,mt.m)(a),l=(0,dt.N)(o,i);return(0,ce.w)(l,"int32")}});var yt=n(8805),bt=n(9554),vt=n(843),xt=n(5395);let wt,kt=!1;function Tt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=(0,vt._5)(bt.awo,f.T2.backendName)){const n={pixels:e},r={numChannels:t};return f.T2.runKernel(bt.awo,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||o){if(null==wt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");wt=new OffscreenCanvas(1,1).getContext("2d")}else wt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});wt.canvas.width=l,wt.canvas.height=u,wt.drawImage(e,0,0,l,u),c=wt.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}const d=[u,l,t];return(0,xt.$)(h,d,"int32")}function Nt(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function St(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,v._K)().getBool("WRAP_TO_IMAGEBITMAP")&&Nt(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Tt(n,t)}function It(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function Et(e,t){let n=(0,ht.YT)(e,"img","toPixels");if(!(e instanceof pe.qY)){const e=n;n=(0,ce.w)(e,"int32"),e.dispose()}It(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=i[u*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){if(!kt){null!=(0,vt._5)(bt.XmO,f.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),kt=!0)}t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function $t(e,t,n){let r=(0,ht.YT)(e,"img","draw");if(!(e instanceof pe.qY)){const e=r;r=(0,ce.w)(e,"int32"),e.dispose()}It(r),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null===n||void 0===n?void 0:n.imageOptions);const s={image:r},a={canvas:t,options:n};f.T2.runKernel(bt.XmO,s,a)}const Ct=(0,ft.op)({fromPixels_:Tt});function At(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,O.Ze)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let h=0;h<s.length-1;++h)i*=s[h];const o=e.shape,l=s.slice();l.pop();let u=1;for(let h=a;h<n;++h)u*=o[h],l.push(o[h]);const c=[...(0,O.Ur)(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}var Rt=n(4083);const _t=-2,Dt=-1;function Ft(e,t,n){const r=e.shape.length;O.vA(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),O.vA(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)O.vA(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Mt(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ot(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Lt(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function zt(e,t,n){return n<=e?n:n-(t-1)}function Pt(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Bt(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Wt(i,l,u,r,e),h=Vt(o,l,u,s,e),d=Lt(a,l,u,e)}else for(let p=0;p<u;p++)c[p]=Gt(i,r,a,e,p,l),h[p]=jt(o,s,a,e,p,l),d[p]=Ut(a,p,l);return{begin:c,end:h,strides:d}}function Wt(e,t,n,r,s){const a=[...s],i=Pt(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const s=zt(t,n,o);let i=r[s];e&1<<s&&(i=0),a[o]=i}return a}function Vt(e,t,n,r,s){const a=[...s],i=Pt(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{const s=zt(t,n,o);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),a[o]=i}for(let o=0;o<a.length;o++){const e=s[o];a[o]<0&&(a[o]+=e),a[o]=O.qE(0,a[o],s[o])}return a}function Ut(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Gt(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=O.qE(0,i,l-1),i}function jt(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?O.qE(0,i,l):O.qE(-1,i,l-1),i}function Ht(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function qt(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Kt(e,t,n){let r;const s=e.shape.length;let a;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{O.vA(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(O.vA(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Yt(e,t,n,r,s,a,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!==(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)c&&0!==(1<<b&o)&&h.numAddAxisAfterEllipsis++,1<<b&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(_t),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Dt),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const r=[d.beginMask&1<<b,d.endMask&1<<b],s=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const a=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){const e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=Xt(d.begin[b],0,d.strides[b],n,r,s),d.end[b]=Xt(d.end[b],1,d.strides[b],n,r,s);const e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;p=p&&e,f=f&&(0===b&&1===d.strides[b]||e)}else p=p&&1===d.strides[b]&&a,f=f&&(0===b&&1===d.strides[b]||a);let i,o=!1;if(d.beginValid&&d.endValid?(i=d.end[b]-d.begin[b],o=!0):t?(i=1,o=!0):a&&n>=0&&(i=d.strides[b]<0?-n:n,o=!0),o){let e;e=0===i||i<0!==d.strides[b]<0?0:Math.trunc(i/d.strides[b])+(i%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===_t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==_t)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Xt(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}var Zt=n(8804),Qt=n(8977);const Jt=.001,en=.1;function tn(e,t,n){return null==n&&(n=nn()),rn(e,t,((e,t)=>ln(e,t,n)))}function nn(){return 32===f.T2.backend.floatPrecision()?Jt:en}function rn(e,t,n){let r=!0;if(((0,Qt.isTypedArray)(e)||(0,Qt.isTypedArray)(t))&&(r=!1),(0,Qt.isTypedArray)(e)&&(0,Qt.isTypedArray)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ht.MZ)(e),r=(0,ht.MZ)(t);if(!(0,O.r1)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=(0,Qt.isTypedArray)(e)?e:(0,Qt.flatten)(e),a=(0,Qt.isTypedArray)(t)?t:(0,Qt.flatten)(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let i=0;i<a.length;++i){const e=s[i],t=a[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${s}.\nExpected: ${a}.`)}"undefined"!==typeof expect&&expect().nothing()}function sn(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!==typeof expect&&expect().nothing()}function an(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,O.Kg)(e)||(0,O.Kg)(e[0])||(0,O.Kg)(t)||(0,O.Kg)(t[0])?rn(e,n,((e,t)=>e==t)):rn(e,t,((e,t)=>ln(e,t,0)))}function on(e,t,n){if(null==n&&(n=nn()),!ln(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!==typeof expect&&expect().nothing()}function ln(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function un(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function cn(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let s=0;s<r.length;s++)if(n[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${n[s]} instead`)}function hn(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?hn(n):e[t]=(0,Qt.encodeString)(n)}return e}function dn(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function pn(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const fn="4.22.0";class mn{static sgd(e){return new Be(e)}static momentum(e,t){return new We(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Ve(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Oe(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Re(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Pe(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new De(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var gn=n(8075),yn=n(814),bn=n(1667);const vn=mn,xn="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function wn(){return new Promise((e=>xn((()=>e()))))}var kn=n(9235);function Tn(e,t){const n=e[0].length;e.forEach(((e,t)=>{O.vA(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),O.vA(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)O.vA(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Nn(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Sn,In=n(7538),En=n(7905);function $n(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function Cn(e){const t={FIRST_DIM_SIZE:Sn.FIRST_DIM_SIZE,VALUE_ROWIDS:Sn.VALUE_ROWIDS,ROW_LENGTHS:Sn.ROW_LENGTHS,ROW_SPLITS:Sn.ROW_SPLITS,ROW_LIMITS:Sn.ROW_LIMITS,ROW_STARTS:Sn.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function An(e){return 0===e.length?0:e[0]===Sn.FIRST_DIM_SIZE?e.length-1:e.length}function Rn(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Sn||(Sn={}));const _n=30;function Dn(e){return e<=_n?e:(0,O.lK)(e,Math.floor(Math.sqrt(e)))}function Fn(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Mn(e,t,n){let r=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function On(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{const r=[],s=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?s.push(n):r.push(n);n.push(...r),n.push(0),n.push(...s)}return n}function Ln(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function zn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Pn(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const Bn=1.7580993408473768,Wn=1.0507009873554805,Vn=.3275911,Un=.254829592,Gn=-.284496736,jn=1.421413741,Hn=-1.453152027,qn=1.061405429;var Kn=n(4124);function Yn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Xn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Zn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Qn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Jn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function er(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function tr(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function nr(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const rr="->",sr=/->/g,ar=",",ir="...";function or(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(sr,"").length)/rr.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${rr}").`);const[r,s]=e.split(rr);(0,O.vA)(-1===r.indexOf(ir),(()=>`The ellipsis notation ("${ir}") is not supported yet.`));const a=r.split(ar),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<s.length;++h){const e=s[h];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<r.length;++h){const e=r[h];-1===o.indexOf(e)&&e!==ar&&o.push(e)}const l=new Array(a.length);for(let h=0;h<i;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let e=0;e<a[h].length;++e)l[h].push(o.indexOf(a[h][e]))}const u=o.length,c=[];for(let h=s.length;h<u;++h)c.push(h);return{allDims:o,summedDims:c,idDims:l}}function lr(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function ur(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:(0,O.vA)(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function cr(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let i=0;i<s;++i)r.push([]);const a=[];for(let i=0;i<n.length;++i){const e=dr(t,n[i]);for(const t of e)-1===a.indexOf(t)&&(r[i].push(t),a.push(t))}return{path:n,steps:r}}function hr(e){return e.every(((e,t)=>e===t))}function dr(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function pr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof t)(0,O.vA)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,O.vA)(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}(0,O.vA)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function fr(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function mr(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function gr(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function yr(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function br(e,t){return`size ${e} must be non-negative, not ${t}`}function vr(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function xr(e,t){return`Input to reshape is a SparseTensor with ${(0,O.Ze)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,O.Ze)(t)}. inputShape=${e} outputShape= ${t}`}function wr(e,t){return`Input to reshape is a tensor with ${(0,O.Ze)(e)} dense values, but the requested shape has ${(0,O.Ze)(t)}. inputShape=${e} outputShape=${t}`}function kr(){return"segment ids must be >= 0"}function Tr(){return"segment ids are not increasing"}function Nr(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Sr(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Ir(e,t){let n,r=!1;for(e<=_n?(n=e,r=!0):n=(0,O.lK)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,O.lK)(e,n+1);return n}function Er(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function $r(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Cr(e){try{return e.map((e=>(0,Qt.decodeString)(e)))}catch(Fr){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${Fr}`)}}function Ar(e){return e.map((e=>(0,Qt.encodeString)(e)))}var Rr=n(6692),_r=n(9286),Dr=n(6790);!function(){for(const e of Ue)$e(e)}()},7131:(e,t,n)=>{"use strict";n.d(t,{D:()=>s});var r=n(8977);class s{static join(e){return new s(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>r.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let i=n;i<this.shards.length;i++){const n=this.shards[i],r=e+a-n.start,o=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,r,l-r);if(s.set(u,o),a+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},285:(e,t,n)=>{"use strict";n.d(t,{AQ:()=>T,CY:()=>d,Ej:()=>E,P8:()=>N,Rl:()=>I,Xf:()=>C,aG:()=>h,jf:()=>k,l3:()=>w,oR:()=>$,s5:()=>y,zV:()=>S});var r=n(6149),s=n(8032),a=n(1426),i=n(1042),o=n(7131),l=n(8046),u=n(5399);const c=4;async function h(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+c*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=c,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:b(await Promise.all(r)),specs:n}}function d(e,t){const n=new o.D(e),r={};let s=0;for(const a of t){const e=p(a,((e,t)=>n.slice(s+e,s+t)));r[a.name]=m(a,n.slice(s,s+e)),s+=e}return r}function p(e,t){const n=(0,a.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=i.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=c+new Uint32Array(t(e,e+c))[0];return e}r=i.i[e.dtype]}return n*r}async function f(e,t){const n=(0,a.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=i.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=c+new Uint32Array(await t(e,e+c))[0];return e}r=i.i[e.dtype]}return n*r}function m(e,t){const n=e.name,o=e.dtype,l=e.shape,u=(0,a.Ze)(l);let h,d=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}const s=i.i[r.dtype],a="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){h=new Float32Array(a.length);for(let e=0;e<a.length;e++){const t=a[e];h[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){const s=r[i],o=e[n[s>>10]+(1023&s)]+t[s>>10];a[i]=o}return new Float32Array(s)}}();h=e(a)}}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${n}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);h=new Int32Array(a.length);for(let e=0;e<a.length;e++){const t=a[e];h[e]=Math.round(t*r.scale+r.min)}}d+=u*s}else if("string"===o){const n=(0,a.Ze)(e.shape);h=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(d,d+c))[0];d+=c;const n=new Uint8Array(t.slice(d,d+e));h.push(n),d+=e}}else{const e=i.i[o];if("float32"===o)h=new Float32Array(t);else if("int32"===o)h=new Int32Array(t);else{if("bool"!==o){if("complex64"===o){h=new Float32Array(t);const e=new Float32Array(h.length/2),n=new Float32Array(h.length/2);for(let t=0;t<e.length;t++)e[t]=h[2*t],n[t]=h[2*t+1];const a=(0,s.O)(e,l,"float32"),i=(0,s.O)(n,l,"float32"),o=(0,r.f)(a,i);return a.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${o}`)}h=new Uint8Array(t)}d+=u*e}return(0,s.O)(h,l,o)}async function g(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function y(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const i of t){const e=await f(i,(async(e,t)=>(s=await g(r,s,t),s.slice(e,t))));s=await g(r,s,e);const t=s.slice(0,e);s=s.slice(e);const o=m(i,t);if(n[i.name]=o,"webgpu"===(0,l.jz)()){const e=(0,l.Hs)();"uploadToGPU"in e&&(0,a.Ze)(o.shape)>=(0,u._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(o.dataId)}}return n}function b(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const v="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function x(e){return v?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function w(e){if(v)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function k(e){if(v){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function T(e){return o.D.join(e)}function N(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function S(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function I(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function E(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),I(e,n,r)}function $(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:x(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:x(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new o.D(e.weightData).byteLength}}function C(e){const t=[];for(const n of e)t.push(...n.weights);return t}},1042:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},9554:(e,t,n)=>{"use strict";n.d(t,{$dB:()=>_,$jE:()=>nn,$zE:()=>R,A1h:()=>O,A8B:()=>Vt,BK4:()=>bn,BLA:()=>Ze,BRl:()=>ae,Blb:()=>Ut,BoJ:()=>Ht,BxF:()=>he,C8s:()=>jt,CQC:()=>ft,Cg$:()=>Ae,CwD:()=>Ee,D7i:()=>It,Ddj:()=>Xt,Dr:()=>vn,DvZ:()=>Kt,E3$:()=>Te,EkD:()=>o,ElG:()=>pe,EwU:()=>hn,FAs:()=>on,FCQ:()=>Nt,FSt:()=>u,Fin:()=>Pt,GZp:()=>Qt,HNs:()=>N,Ik2:()=>k,J3C:()=>Ot,JiE:()=>Ft,Jp_:()=>c,KXH:()=>E,L6G:()=>qt,LB5:()=>S,LDN:()=>We,LG0:()=>Ye,LRy:()=>yt,LWX:()=>at,LXA:()=>De,M6A:()=>Zt,MRQ:()=>U,Mn0:()=>P,MnK:()=>B,N4F:()=>T,Ncv:()=>ht,O4G:()=>ge,OAQ:()=>xe,ODT:()=>lt,OMN:()=>i,ORI:()=>Y,PH8:()=>a,P_L:()=>St,Pah:()=>ne,PbM:()=>rn,Q6t:()=>gt,QDP:()=>$,QKF:()=>d,Qgm:()=>te,R23:()=>xt,RMm:()=>fn,RUm:()=>Re,RW8:()=>Fe,RXX:()=>Ue,SDM:()=>nt,SQl:()=>ce,T7M:()=>wn,TBb:()=>ln,TL8:()=>He,TMz:()=>j,TOR:()=>$t,ToN:()=>ze,TyE:()=>f,UcO:()=>Jt,VAI:()=>Be,VCH:()=>b,Vvy:()=>s,WRv:()=>Pe,WT3:()=>Qe,WuN:()=>Wt,X$8:()=>q,X0$:()=>Se,X4r:()=>At,XQy:()=>kt,XhZ:()=>ye,XmO:()=>J,YAb:()=>en,YVe:()=>Lt,ZgB:()=>de,Zl4:()=>rt,_s9:()=>se,aAr:()=>xn,awo:()=>yn,bCz:()=>ut,bP9:()=>Z,cHb:()=>je,cS:()=>v,dFH:()=>Bt,dLy:()=>un,dXR:()=>dn,dv8:()=>we,e0f:()=>st,epO:()=>p,fUj:()=>vt,g5A:()=>qe,gC7:()=>z,gIW:()=>ke,hVg:()=>Et,hgw:()=>Tt,ho8:()=>y,hql:()=>Mt,huO:()=>bt,i5R:()=>fe,iGz:()=>L,iPs:()=>Ne,iW0:()=>tn,iuW:()=>an,jAQ:()=>w,jM4:()=>Le,jOE:()=>wt,jfg:()=>M,jgd:()=>Yt,jj_:()=>W,jxD:()=>X,kdj:()=>dt,l0G:()=>et,l6P:()=>_t,lLS:()=>be,lNG:()=>Ke,ljI:()=>r,lxb:()=>g,lzr:()=>ve,mH5:()=>mt,mIA:()=>Ie,mM$:()=>ot,mnI:()=>$e,mxL:()=>me,nVu:()=>K,nY8:()=>V,nZd:()=>_e,oFs:()=>sn,oJ2:()=>pt,ox3:()=>ie,p2J:()=>D,pJc:()=>Ct,pPe:()=>pn,p_m:()=>h,pk0:()=>Q,pnw:()=>gn,pr3:()=>A,pyJ:()=>ct,rFG:()=>Gt,rFm:()=>F,rGP:()=>ue,rsH:()=>re,sDr:()=>ee,t3d:()=>Ve,tG8:()=>Ce,tGH:()=>H,u$b:()=>Dt,u8Z:()=>l,uWl:()=>Rt,urI:()=>it,vI1:()=>zt,vaV:()=>C,vj7:()=>I,wNW:()=>G,wwC:()=>x,wx0:()=>cn,x7F:()=>Xe,xJ3:()=>mn,xu7:()=>Je,yPW:()=>Oe,ySp:()=>Ge,ybN:()=>oe,ybj:()=>le,ylV:()=>tt,zP9:()=>m,zfU:()=>Me});const r="Abs",s="Acos",a="Acosh",i="Add",o="AddN",l="All",u="Any",c="ArgMax",h="ArgMin",d="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",T="Bincount",N="BitwiseAnd",S="BroadcastTo",I="BroadcastArgs",E="Cast",$="Ceil",C="ClipByValue",A="Complex",R="ComplexAbs",_="Concat",D="Conv2D",F="Conv2DBackpropFilter",M="Conv2DBackpropInput",O="Conv3D",L="Conv3DBackpropFilterV2",z="Conv3DBackpropInputV2",P="Cos",B="Cosh",W="Cumprod",V="Cumsum",U="CropAndResize",G="DenseBincount",j="DepthToSpace",H="DepthwiseConv2dNative",q="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",Y="Diag",X="Dilation2D",Z="Dilation2DBackpropInput",Q="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",te="Einsum",ne="Elu",re="EluGrad",se="Erf",ae="Equal",ie="Exp",oe="ExpandDims",le="Expm1",ue="FFT",ce="Fill",he="FlipLeftRight",de="Floor",pe="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",ve="Identity",xe="IFFT",we="Imag",ke="IsFinite",Te="IsInf",Ne="IsNan",Se="LeakyRelu",Ie="Less",Ee="LessEqual",$e="LinSpace",Ce="Log",Ae="Log1p",Re="LogicalAnd",_e="LogicalNot",De="LogicalOr",Fe="LogicalXor",Me="LogSoftmax",Oe="LowerBound",Le="LRN",ze="LRNGrad",Pe="MatrixBandPart",Be="Max",We="Maximum",Ve="MaxPool",Ue="MaxPoolGrad",Ge="MaxPool3D",je="MaxPool3DGrad",He="MaxPoolWithArgmax",qe="Mean",Ke="Min",Ye="Minimum",Xe="MirrorPad",Ze="Mod",Qe="Multinomial",Je="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",rt="NonMaxSuppressionV4",st="NonMaxSuppressionV5",at="OnesLike",it="OneHot",ot="Pack",lt="PadV2",ut="Pool",ct="Pow",ht="Prelu",dt="Prod",pt="RaggedGather",ft="RaggedRange",mt="RaggedTensorToTensor",gt="Range",yt="Real",bt="Reciprocal",vt="Relu",xt="Reshape",wt="ResizeNearestNeighbor",kt="ResizeNearestNeighborGrad",Tt="ResizeBilinear",Nt="ResizeBilinearGrad",St="Relu6",It="Reverse",Et="Round",$t="Rsqrt",Ct="ScatterNd",At="TensorScatterUpdate",Rt="SearchSorted",_t="Select",Dt="Selu",Ft="Slice",Mt="Sin",Ot="Sinh",Lt="Sign",zt="Sigmoid",Pt="Softplus",Bt="Sqrt",Wt="Sum",Vt="SpaceToBatchND",Ut="SplitV",Gt="Softmax",jt="SparseFillEmptyRows",Ht="SparseReshape",qt="SparseSegmentMean",Kt="SparseSegmentSum",Yt="SparseToDense",Xt="SquaredDifference",Zt="Square",Qt="StaticRegexReplace",Jt="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",rn="Sub",sn="Tan",an="Tanh",on="Tile",ln="TopK",un="Transform",cn="Transpose",hn="Unique",dn="Unpack",pn="UnsortedSegmentSum",fn="UpperBound",mn="ZerosLike",gn="Step",yn="FromPixels",bn="RotateWithOffset",vn="_FusedMatMul",xn="FusedConv2D",wn="FusedDepthwiseConv2D"},843:(e,t,n)=>{"use strict";n.d(t,{Cf:()=>m,Op:()=>c,_5:()=>l,iP:()=>p,kr:()=>d,rY:()=>f,tA:()=>h,vQ:()=>u});var r=n(5399),s=n(7926),a=n(4124);const i=(0,s.m)("kernelRegistry",(()=>new Map)),o=(0,s.m)("gradRegistry",(()=>new Map));function l(e,t){const n=g(e,t);return i.get(n)}function u(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function h(e){const{kernelName:t,backendName:n}=e,r=g(t,n);i.has(r)&&a.i(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function d(e){const{kernelName:t}=e;o.has(t)&&(0,r._K)().getBool("DEBUG")&&a.i(`Overriding the gradient for '${t}'`),o.set(t,e)}function p(e,t){const n=g(e,t);if(!i.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);i.delete(n)}function f(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function m(e,t){c(e).forEach((e=>{h(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},4124:(e,t,n)=>{"use strict";n.d(t,{R:()=>a,i:()=>s});var r=n(5399);function s(){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.warn(...arguments)}function a(){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.log(...arguments)}},3753:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({abs_:function(e){const t=(0,a.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.T2.runKernel(s.$zE,e)}{const e={x:t};return r.T2.runKernel(s.ljI,e)}}})},7242:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(2164),s=n(9554),a=n(8804),i=n(4148);const o=(0,n(7892).op)({add_:function(e,t){let n=(0,i.YT)(e,"a","add"),o=(0,i.YT)(t,"b","add");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.OMN,l)}})},9235:(e,t,n)=>{"use strict";n.d(t,{Em:()=>u,SM:()=>o,WC:()=>l,WH:()=>s,aF:()=>a,fK:()=>h,gx:()=>c,lb:()=>i});var r=n(1426);function s(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function i(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function o(e,t){return a(e,t.map((e=>1)),t)}function l(e,t,n){r.vA(s(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function u(e,t){if(s(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},8805:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function s(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function a(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-s-1]=a}}return r}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>a,getBroadcastDims:()=>r,getReductionAxes:()=>s})},259:(e,t,n)=>{"use strict";n.d(t,{r:()=>a});var r=n(9494),s=n(1426);function a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",s.SA(e),new r.yl(e,t,n)}},7794:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(2164),s=n(9554),a=n(4148),i=n(1426);const o=(0,n(7892).op)({cast_:function(e,t){const n=(0,a.YT)(e,"x","cast");if(!i.xn(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},l={dtype:t};return r.T2.runKernel(s.KXH,o,l)}})},9820:(e,t,n)=>{"use strict";n.d(t,{o:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({clone_:function(e){const t={x:(0,a.YT)(e,"x","clone","string_or_numeric")};return r.T2.runKernel(s.lzr,t)}})},6149:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(2164),s=n(9554),a=n(4148),i=n(1426);const o=(0,n(7892).op)({complex_:function(e,t){const n=(0,a.YT)(e,"real","complex"),o=(0,a.YT)(t,"imag","complex");i.O3(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const l={real:n,imag:o};return r.T2.runKernel(s.pr3,l)}})},7538:(e,t,n)=>{"use strict";n.d(t,{$Q:()=>y,Dh:()=>f,E6:()=>a,G0:()=>m,G8:()=>u,YQ:()=>s,l5:()=>i,p$:()=>l,qk:()=>g,s_:()=>b,uf:()=>o});var r=n(1426);function s(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5?arguments[5]:void 0;return o(e,[...t,e[3]],n,a,r,null,null,y(s))}function a(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[l,u]=c(t);let h;if("channelsLast"===i)h=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);h=[l,u,e[1],e[1]]}return o(e,h,n,r,s,a,!1,i)}function i(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[o,u,c]=h(t);let d,p;if("NDHWC"===i)p="channelsLast",d=[o,u,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",d=[o,u,c,e[1],e[1]]}return l(e,d,n,r,s,!1,p,a)}function o(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[l,h,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,m,h,f]=e}const[g,y,,b]=t,[v,x]=c(n),[w,k]=c(r),T=d(g,w),N=d(y,k),{padInfo:S,outHeight:I,outWidth:E}=function(e,t,n,r,s,a,i,o,l){let c,h,d;if("number"===typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=u(e,t,n));const a=e[0],i=e[1],o=p((a-t+2*r)/n+1,s),l=p((i-t+2*r)/n+1,s);return[o,l]}([t,n],a,r,e,o);h=s[0],d=s[1]}else if("same"===e){h=Math.ceil(t/r),d=Math.ceil(n/s);const e=Math.max(0,(h-1)*r+a-t),o=Math.max(0,(d-1)*s+i-n),l=Math.floor(e/2),u=e-l,p=Math.floor(o/2);c={top:l,bottom:u,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/r),d=Math.ceil((n-i+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=p((t-a+u+f)/r+1,o),d=p((n-i+m+g)/s+1,o)}}return{padInfo:c,outHeight:h,outWidth:d}}(s,h,f,v,x,T,N,a,o),$=i?b*m:b;let C;return"channelsFirst"===o?C=[l,$,I,E]:"channelsLast"===o&&(C=[l,I,E,$]),{batchSize:l,dataFormat:o,inHeight:h,inWidth:f,inChannels:m,outHeight:I,outWidth:E,outChannels:$,padInfo:S,strideHeight:v,strideWidth:x,filterHeight:g,filterWidth:y,effectiveFilterHeight:T,effectiveFilterWidth:N,dilationHeight:w,dilationWidth:k,inShape:e,outShape:C,filterShape:t}}function l(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,c,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,g,c,f,m]=e}const[y,b,v,,x]=t,[w,k,T]=h(n),[N,S,I]=h(r),E=d(y,N),$=d(b,S),C=d(v,I),{padInfo:A,outDepth:R,outHeight:_,outWidth:D}=function(e,t,n,r,s,a,i,o,l,c,h){let d,f,m,g;"valid"===e&&(e=0);if("number"===typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,r,s,a){null==s&&(s=u(e,t[0],r[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*s>=t[o]&&(i[o]=p((e[o]-t[o]+2*s)/r[o]+1,a));return i}([t,n,r,1],[o,l,c],1,[s,a,i],e,h);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{f=Math.ceil(t/s),m=Math.ceil(n/a),g=Math.ceil(r/i);const e=(f-1)*s+o-t,u=(m-1)*a+l-n,h=(g-1)*i+c-r,p=Math.floor(e/2),y=e-p,b=Math.floor(u/2),v=u-b,x=Math.floor(h/2);d={top:b,bottom:v,left:x,right:h-x,front:p,back:y,type:"SAME"}}}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(s,c,f,m,w,k,T,E,$,C,o),F=a?x*g:x;let M;return"channelsFirst"===i?M=[l,F,R,_,D]:"channelsLast"===i&&(M=[l,R,_,D,F]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:R,outHeight:_,outWidth:D,outChannels:F,padInfo:A,strideDepth:w,strideHeight:k,strideWidth:T,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:E,effectiveFilterHeight:$,effectiveFilterWidth:C,dilationDepth:N,dilationHeight:S,dilationWidth:I,inShape:e,outShape:M,filterShape:t}}function u(e,t,n){const r=d(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}function c(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function h(e){return"number"===typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){return c(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function b(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},4974:(e,t,n)=>{"use strict";n.d(t,{y:()=>l});var r=n(2164),s=n(9554),a=n(8804),i=n(4148),o=n(3612);const l=(0,n(7892).op)({div_:function(e,t){let n=(0,i.YT)(e,"a","div"),l=(0,i.YT)(t,"b","div");if([n,l]=(0,a.makeTypesMatch)(n,l),"int32"===n.dtype&&"int32"===l.dtype)return(0,o.w)(n,l);const u={a:n,b:l};return r.T2.runKernel(s.sDr,u,{})}})},3645:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({elu_:function(e){const t={x:(0,a.YT)(e,"x","elu","float32")};return r.T2.runKernel(s.Pah,t)}})},4660:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(2164),s=n(9554),a=n(1426);function i(e,t,n){(0,a.SA)(e);const i={shape:e,value:t,dtype:n=n||(0,a.X$)(t)};return r.T2.runKernel(s.SQl,{},i)}},3612:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(2164),s=n(9554),a=n(8804),i=n(4148);const o=(0,n(7892).op)({floorDiv_:function(e,t){let n=(0,i.YT)(e,"a","floorDiv"),o=(0,i.YT)(t,"b","floorDiv");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.ElG,l)}})},7905:(e,t,n)=>{"use strict";n.d(t,{Do:()=>m,XB:()=>f,f2:()=>g,zE:()=>y});var r=n(8805),s=n(3645),a=n(8076),i=n(803),o=n(9855),l=n(5251),u=n(9721),c=n(5583),h=n(4213),d=n(319),p=n(7382);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.l)(e,(0,d.P)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const s=r.getReductionAxes(e.shape,t.shape);return s.length>0&&(n=(0,p.c)(n,s)),(0,c.t)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,l.V)(e);if("elu"===t)return(0,s.P)(e);if("relu6"===t)return(0,u.j)(e);if("prelu"===t)return(0,o.N)(e,n);if("leakyrelu"===t)return(0,a.H)(e,r);if("sigmoid"===t)return(0,h.r)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},1047:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({imag_:function(e){const t={input:(0,a.YT)(e,"input","imag")};return r.T2.runKernel(s.dv8,t)}})},8076:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,a.YT)(e,"x","leakyRelu")},i={alpha:t};return r.T2.runKernel(s.X0$,n,i)}})},1667:(e,t,n)=>{"use strict";var r;n.d(t,{i:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},5162:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(2164),s=n(9554),a=n(8804),i=n(4148);const o=(0,n(7892).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],l=(0,i.YT)(e,"a","matMul"),u=(0,i.YT)(t,"b","matMul");[l,u]=(0,a.makeTypesMatch)(l,u);const c={a:l,b:u},h={transposeA:n,transposeB:o};return r.T2.runKernel(s.jAQ,c,h)}})},2131:(e,t,n)=>{"use strict";n.d(t,{P:()=>u});var r=n(2164),s=n(9554),a=n(8804),i=n(4148),o=n(8805),l=n(7794);const u=(0,n(7892).op)({maximum_:function(e,t){let n=(0,i.YT)(e,"a","maximum"),u=(0,i.YT)(t,"b","maximum");[n,u]=(0,a.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.w)(n,"int32"),u=(0,l.w)(u,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(s.LDN,c)}})},803:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(2164),s=n(9554),a=n(8804),i=n(4148);const o=(0,n(7892).op)({mul_:function(e,t){let n=(0,i.YT)(e,"a","mul"),o=(0,i.YT)(t,"b","mul");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.xu7,l)}})},1011:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({neg_:function(e){const t={x:(0,a.YT)(e,"x","neg")};return r.T2.runKernel(s.l0G,t)}})},6865:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const l={indices:(0,a.YT)(e,"indices","oneHot","int32")},u={dtype:o,depth:t,onValue:n,offValue:i};return r.T2.runKernel(s.urI,l,u)}})},7892:(e,t,n)=>{"use strict";n.d(t,{B:()=>a,op:()=>i});var r=n(2164),s=n(1426);const a="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=a;const o=function(){r.T2.startScope(n);try{const e=i(...arguments);return(0,s.yL)(e)&&console.error("Cannot return a Promise inside of tidy."),r.T2.endScope(e),e}catch(e){throw r.T2.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},814:(e,t,n)=>{"use strict";n.d(t,{BTT:()=>l.B,tnl:()=>s.t,HQu:()=>u,FqL:()=>c,WQq:()=>h.W,QiD:()=>p,Q7R:()=>f,bzn:()=>m,FLi:()=>g,XRg:()=>y,qRo:()=>b,yHs:()=>v,rYl:()=>x,FPz:()=>k,rfv:()=>T,$jT:()=>E,sub:()=>$,lZX:()=>O,$v7:()=>z,BFc:()=>P,kSi:()=>B,T5N:()=>W,GTe:()=>L,HbZ:()=>V,vjT:()=>U,ftb:()=>lr,ROE:()=>G,hOW:()=>j,ra8:()=>H.r,wgE:()=>N.w,mkO:()=>q,zQh:()=>Y,o8B:()=>C.o,faB:()=>X.f,xWs:()=>A,I1m:()=>Z,RPU:()=>Q,O5O:()=>J,P1l:()=>ee,kA9:()=>ne,Xtf:()=>te,wX9:()=>se,IPL:()=>ae,jIJ:()=>oe,gnS:()=>le,yIG:()=>ue,_jP:()=>gr,Lp0:()=>ce,rCv:()=>he,aOp:()=>de,Rj8:()=>pe,Gl3:()=>fe,smy:()=>me,X7t:()=>ge,y4m:()=>ye.y,ek5:()=>ke,Omf:()=>Te,EZY:()=>fr,_3C:()=>Ne,Pqc:()=>Se.P,FJY:()=>mr,QP2:()=>Ie,LCg:()=>ve,Y12:()=>Ee,p4S:()=>ze,oNF:()=>Pe,UG6:()=>Be,IYd:()=>We,y5U:()=>Ue,hVP:()=>_n,GSj:()=>K.G,RIf:()=>Ge,wh_:()=>je.w,cZk:()=>r,kgh:()=>He,SY9:()=>pr,rhj:()=>qe,DQN:()=>Ke,KGM:()=>Dn,ngS:()=>Ye.n,Slp:()=>us,U4u:()=>yr,ggX:()=>Fn,MIs:()=>Xe,EN4:()=>Ze,yrW:()=>Qe,H8d:()=>Je.H,M7h:()=>et,InN:()=>tt,mPL:()=>cs,mT8:()=>nt,Kgs:()=>rt,Rm2:()=>st,Kko:()=>at,nqI:()=>ut,HPB:()=>ht,VZ:()=>dt,n76:()=>pt,NSZ:()=>ft,ztW:()=>mt,rxB:()=>gt,YYh:()=>hs,yzS:()=>vt,NoW:()=>R.N,T9B:()=>Ce,jgi:()=>xt,NYV:()=>wt,RO:()=>kt,PhQ:()=>Tt.P,i2o:()=>Nt,OYQ:()=>$t,jkA:()=>Ae,BpO:()=>Ct,FFZ:()=>At,ziu:()=>Rt,Clk:()=>_t,CRk:()=>cr,lKK:()=>_.l,YDF:()=>Dt,OjQ:()=>Ft,HZy:()=>ot.H,xbf:()=>Le,Ec:()=>Mt,Mw0:()=>Ot.M,SaS:()=>It,P61:()=>Lt,op:()=>l.op,X4o:()=>zt,eVF:()=>Pt,BZs:()=>Bt,grY:()=>Wt,XHu:()=>Vt,WLX:()=>Ut,dzn:()=>jt,n7C:()=>Re.n,NsG:()=>Ht.N,yyV:()=>qt.y,_eU:()=>Kt,whe:()=>Yt,iyU:()=>Xt,Q0_:()=>Zt,_9M:()=>Qt,pR9:()=>rn,FE$:()=>sn,m0H:()=>an,YeY:()=>on,HYA:()=>ln,y17:()=>un,xav:()=>cn.x,VOZ:()=>hn,VVh:()=>dn.V,j__:()=>pn.j,tQQ:()=>I.t,BEg:()=>fn,QD2:()=>mn,LMr:()=>gn,I2l:()=>yn,JYU:()=>bn,z8$:()=>On,LIG:()=>vn,Z$r:()=>xn,d_2:()=>_e.d,NFr:()=>hr,sZg:()=>bt,WfX:()=>wn,wdz:()=>kn,F12:()=>Tn,ry7:()=>D.r,_SZ:()=>Nn,vPA:()=>ls,F8e:()=>Sn,L0l:()=>In,dik:()=>F,Q$M:()=>En,zAd:()=>$n,wck:()=>Cn,R0O:()=>An,Vs9:()=>Rn,lw0:()=>lt,eDJ:()=>Gt,lMo:()=>ds,Zhr:()=>dr,lOn:()=>os,lDo:()=>Mn,RZD:()=>De.R,EwI:()=>Fe.E,Pbu:()=>Ln,r2V:()=>zn,t$z:()=>Pn,PMw:()=>Bn.P,Ym9:()=>Wn,YjP:()=>ps,jbE:()=>ct.j,czq:()=>Me.c,Mlm:()=>Vn,ymU:()=>M,OEK:()=>Un.O,tGX:()=>jn,KtR:()=>Hn,$_$:()=>qn.$,g9W:()=>Kn,Lpo:()=>Yn,yxw:()=>Xn,NNh:()=>Qn,Vsq:()=>Ve,rfw:()=>Jn,mgz:()=>ur.m,efE:()=>er,AmM:()=>tr,zAU:()=>nr,K$i:()=>rr,rni:()=>sr,bvq:()=>ar,_M9:()=>xe,YJN:()=>or,Ul9:()=>St,POl:()=>we.P});var r={};n.r(r),n.d(r,{conv2d:()=>xr,depthwiseConv2d:()=>Tr,matMul:()=>Nr});var s=n(3753),a=n(2164),i=n(9554),o=n(4148),l=n(7892);const u=(0,l.op)({acos_:function(e){const t={x:(0,o.YT)(e,"x","acos")};return a.T2.runKernel(i.Vvy,t)}});const c=(0,l.op)({acosh_:function(e){const t={x:(0,o.YT)(e,"x","acosh")};return a.T2.runKernel(i.PH8,t)}});var h=n(7242),d=n(1426);const p=(0,l.op)({addN_:function(e){d.vA(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),d.vA(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,o.YT)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!d.r1(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return a.T2.runKernel(i.EkD,r)}});const f=(0,l.op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:(0,o.YT)(e,"x","all","bool")},s={axis:t,keepDims:n};return a.T2.runKernel(i.u8Z,r,s)}});const m=(0,l.op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:(0,o.YT)(e,"x","any","bool")},s={axis:t,keepDims:n};return a.T2.runKernel(i.FSt,r,s)}});const g=(0,l.op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,o.YT)(e,"x","argMax")},r={axis:t};return a.T2.runKernel(i.Jp_,n,r)}});const y=(0,l.op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,o.YT)(e,"x","argMin")},r={axis:t};return a.T2.runKernel(i.p_m,n,r)}});const b=(0,l.op)({asin_:function(e){const t={x:(0,o.YT)(e,"x","asin")};return a.T2.runKernel(i.QKF,t)}});const v=(0,l.op)({asinh_:function(e){const t={x:(0,o.YT)(e,"x","asinh")};return a.T2.runKernel(i.epO,t)}});const x=(0,l.op)({atan_:function(e){const t={x:(0,o.YT)(e,"x","atan")};return a.T2.runKernel(i.TyE,t)}});var w=n(8804);const k=(0,l.op)({atan2_:function(e,t){let n=(0,o.YT)(e,"a","atan2"),r=(0,o.YT)(t,"b","atan2");[n,r]=(0,w.makeTypesMatch)(n,r);const s={a:n,b:r};return a.T2.runKernel(i.lxb,s)}});const T=(0,l.op)({atanh_:function(e){const t={x:(0,o.YT)(e,"x","atanh")};return a.T2.runKernel(i.zP9,t)}});var N=n(7794),S=n(7538),I=n(5583);const E=(0,l.op)({avgPool_:function(e,t,n,r,s){const l=(0,o.YT)(e,"x","avgPool","float32");d.vA(S.G0(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let u=l,c=!1;3===l.rank&&(c=!0,u=(0,I.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),d.vA(4===u.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${u.rank}.`)),S.s_("avgPool",r,s);const h={x:u},p={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let f=a.T2.runKernel(i.ho8,h,p);return f=(0,N.w)(f,l.dtype),c?(0,I.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const $=(0,l.op)({avgPool3d_:function(e,t,n,r,s){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const u=(0,o.YT)(e,"x","avgPool3d","float32");let c=u,h=!1;4===u.rank&&(h=!0,c=(0,I.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),d.vA(5===c.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${c.rank}.`)),d.vA("NDHWC"===l,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${l}`)),d.vA("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,S.s_)("avgPool3d",r,s);const p={x:c},f={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:l};let m=a.T2.runKernel(i.cS,p,f);return m=(0,N.w)(m,c.dtype),h?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var C=n(9820);const A=(0,l.op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,d.vA)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,o.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,C.o)(n[0]);const r=n,s={axis:t};return a.T2.runKernel(i.$dB,r,s)}});var R=n(5162),_=n(803),D=n(4213);const F=(0,l.op)({slice_:function(e,t,n){const r=(0,o.YT)(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},l={begin:t,size:n};return a.T2.runKernel(i.JiE,s,l)}});const M=(0,l.op)({tanh_:function(e){const t={x:(0,o.YT)(e,"x","tanh","float32")};return a.T2.runKernel(i.iuW,t)}});const O=(0,l.op)({basicLSTMCell_:function(e,t,n,r,s,a){const i=(0,o.YT)(e,"forgetBias","basicLSTMCell"),l=(0,o.YT)(t,"lstmKernel","basicLSTMCell"),u=(0,o.YT)(n,"lstmBias","basicLSTMCell"),c=(0,o.YT)(r,"data","basicLSTMCell"),d=(0,o.YT)(s,"c","basicLSTMCell"),p=(0,o.YT)(a,"h","basicLSTMCell"),f=A([c,p],1),m=(0,R.N)(f,l),g=(0,h.W)(m,u),y=g.shape[0],b=g.shape[1]/4,v=[y,b],x=F(g,[0,0],v),w=F(g,[0,b],v),k=F(g,[0,2*b],v),T=F(g,[0,3*b],v),N=(0,h.W)((0,_.l)((0,D.r)(x),M(w)),(0,_.l)(d,(0,D.r)((0,h.W)(i,k))));return[N,(0,_.l)(M(N),(0,D.r)(T))]}});const L=(0,l.op)({batchToSpaceND_:function(e,t,n){const r=(0,o.YT)(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));d.vA(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),d.vA(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),d.vA(r.shape[0]%s===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const l={x:r},u={blockShape:t,crops:n};return a.T2.runKernel(i.Ik2,l,u)}});const z=(0,l.op)({batchNorm_:function(e,t,n,r,s,l){null==l&&(l=.001);const u=(0,o.YT)(e,"x","batchNorm"),c=(0,o.YT)(t,"mean","batchNorm"),h=(0,o.YT)(n,"variance","batchNorm");let p,f;null!=s&&(p=(0,o.YT)(s,"scale","batchNorm")),null!=r&&(f=(0,o.YT)(r,"offset","batchNorm")),d.vA(c.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d.vA(null==f||c.rank===f.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d.vA(null==p||c.rank===p.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const m={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,I.t)(e,[1,1,1,e.size]):2===e.rank?(0,I.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,I.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(u),scale:p,offset:f,mean:c,variance:h},g={varianceEpsilon:l},y=a.T2.runKernel(i.i5R,m,g);return(0,I.t)(y,u.shape)}});const P=(0,l.op)({batchNorm2d_:function(e,t,n,r,s,a){const i=(0,o.YT)(e,"x","batchNorm"),l=(0,o.YT)(t,"mean","batchNorm"),u=(0,o.YT)(n,"variance","batchNorm");let c,h;return null!=s&&(c=(0,o.YT)(s,"scale","batchNorm")),null!=r&&(h=(0,o.YT)(r,"offset","batchNorm")),d.vA(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),d.vA(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`)),d.vA(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&d.vA(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=h&&d.vA(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),z(i,l,u,h,c,a)}});const B=(0,l.op)({batchNorm3d_:function(e,t,n,r,s,a){const i=(0,o.YT)(e,"x","batchNorm"),l=(0,o.YT)(t,"mean","batchNorm"),u=(0,o.YT)(n,"variance","batchNorm");let c,h;return null!=s&&(c=(0,o.YT)(s,"scale","batchNorm")),null!=r&&(h=(0,o.YT)(r,"offset","batchNorm")),d.vA(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),d.vA(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`)),d.vA(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&d.vA(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=h&&d.vA(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),z(i,l,u,h,c,a)}});const W=(0,l.op)({batchNorm4d_:function(e,t,n,r,s,a){const i=(0,o.YT)(e,"x","batchNorm"),l=(0,o.YT)(t,"mean","batchNorm"),u=(0,o.YT)(n,"variance","batchNorm");let c,h;return null!=s&&(c=(0,o.YT)(s,"scale","batchNorm")),null!=r&&(h=(0,o.YT)(r,"offset","batchNorm")),d.vA(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),d.vA(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`)),d.vA(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&d.vA(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=h&&d.vA(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),z(i,l,u,h,c,a)}});const V=(0,l.op)({bincount_:function(e,t,n){const r=(0,o.YT)(e,"x","bincount"),s=(0,o.YT)(t,"weights","bincount");d.vA("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),d.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d.vA(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const l={x:r,weights:s},u={size:n};return a.T2.runKernel(i.N4F,l,u)}});const U=(0,l.op)({bitwiseAnd_:function(e,t){const n=(0,o.YT)(e,"x","bitwiseAnd"),r=(0,o.YT)(t,"y","bitwiseAnd");if(!(0,d.r1)(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return a.T2.runKernel(i.HNs,s)}});const G=(0,l.op)({broadcastArgs_:function(e,t){const n=(0,o.YT)(e,"s0","broadcastArgs","int32"),r=(0,o.YT)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return a.T2.runKernel(i.vj7,s)}});const j=(0,l.op)({broadcastTo_:function(e,t){let n=(0,o.YT)(e,"broadcastTo","x");const r=n.shape;if((0,d.SA)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,I.t)(n,e)}const s=n.shape,l=Array.from(t);for(let a=t.length-1;a>=0;a--)if(s[a]===t[a])l[a]=1;else if(1!==n.shape[a])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===l.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,C.o)(n);const u={x:n},c={reps:l};return a.T2.runKernel(i.FAs,u,c)}});var H=n(259);const q=(0,l.op)({ceil_:function(e){const t={x:(0,o.YT)(e,"x","ceil","float32")};return a.T2.runKernel(i.QDP,t)}});var K=n(4660);const Y=(0,l.op)({clipByValue_:function(e,t,n){const r=(0,o.YT)(e,"x","clipByValue");if(d.vA(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,K.G)(r.shape,t,r.dtype);const s={x:r},l={clipValueMin:t,clipValueMax:n};return a.T2.runKernel(i.vaV,s,l)}});var X=n(6149);const Z=(0,l.op)({concat1d_:function(e){return A(e,0)}});const Q=(0,l.op)({concat2d_:function(e,t){return A(e,t)}});const J=(0,l.op)({concat3d_:function(e,t){return A(e,t)}});const ee=(0,l.op)({concat4d_:function(e,t){return A(e,t)}});const te=(0,l.op)({conv2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0;const c=(0,o.YT)(e,"x","conv2d","float32"),h=(0,o.YT)(t,"filter","conv2d","float32");let p=c,f=!1;3===c.rank&&(f=!0,p=(0,I.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),d.vA(4===p.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${p.rank}.`)),d.vA(4===h.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${h.rank}.`)),S.s_("conv2d",r,u);const m="NHWC"===s?p.shape[3]:p.shape[1];d.vA(m===h.shape[2],(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`)),d.vA(S.G0(n,l),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${l}'`)),d.vA(S.qk(l),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),d.vA(S.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const g={x:p,filter:h},y={strides:n,pad:r,dataFormat:s,dilations:l,dimRoundingMode:u},b=a.T2.runKernel(i.p2J,g,y);return f?(0,I.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const ne=(0,l.op)({conv1d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0;const l=(0,o.YT)(e,"x","conv1d"),u=(0,o.YT)(t,"filter","conv1d");let c=l,h=!1;2===l.rank&&(h=!0,c=(0,I.t)(l,[1,l.shape[0],l.shape[1]])),d.vA(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),d.vA(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),S.s_("conv1d",r,i),d.vA(c.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),d.vA(S.G0(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),d.vA(S.qk(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),d.vA(S.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),d.vA("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const p=(0,I.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]),f=(0,I.t)(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=te(f,p,[1,n],r,"NHWC",[1,a],i);return h?(0,I.t)(m,[m.shape[2],m.shape[3]]):(0,I.t)(m,[m.shape[0],m.shape[2],m.shape[3]])}});const re=(0,l.op)({conv2DBackpropInput_:function(e,t,n,r,s){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",l=arguments.length>6?arguments[6]:void 0;d.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let u=e,c=t,h=!1;3===t.rank&&(h=!0,c=(0,I.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),u=[1,e[0],e[1],e[2]]),d.vA(4===u.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${u.length}.`)),d.vA(4===c.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`)),d.vA(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const p="NHWC"===o?u[3]:u[1],f="NHWC"===o?c.shape[3]:c.shape[1];d.vA(p===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`)),d.vA(f===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${f}) must match output depth for filter ${n.shape[3]}.`)),S.s_("conv2dDerInput",s,l);const m={dy:c,filter:n},g={strides:r,pad:s,dataFormat:o,dimRoundingMode:l,inputShape:u},y=a.T2.runKernel(i.jfg,m,g);return h?(0,I.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});const se=(0,l.op)({conv2dTranspose_:function(e,t,n,r,s,a){const i=(0,o.YT)(e,"x","conv2dTranspose"),l=(0,o.YT)(t,"filter","conv2dTranspose");return re(n,i,l,r,s,"NHWC",a)}});const ae=(0,l.op)({conv3d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const u=(0,o.YT)(e,"x","conv3d"),c=(0,o.YT)(t,"filter","conv3d");let h=u,p=!1;4===u.rank&&(p=!0,h=(0,I.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),d.vA(5===h.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${h.rank}.`)),d.vA(5===c.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${c.rank}.`)),d.vA(h.shape[4]===c.shape[3],(()=>`Error in conv3d: depth of input (${h.shape[4]}) must match input depth for filter ${c.shape[3]}.`)),d.vA((0,S.G0)(n,l),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${l}'`)),d.vA("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),d.vA((0,S.qk)(l),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),d.vA((0,S.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:h,filter:c},m={strides:n,pad:r,dataFormat:s,dilations:l},g=a.T2.runKernel(i.A1h,f,m);return p?(0,I.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});const ie=(0,l.op)({conv3DBackpropInput_:function(e,t,n,r,s){d.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;4===t.rank&&(u=!0,l=(0,I.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,e[0],e[1],e[2],e[3]]);const c=o[4],h=l.shape[4];d.vA(5===o.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`)),d.vA(5===l.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${l.rank}`)),d.vA(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),d.vA(c===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`)),d.vA(h===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[4]}.`));const p={dy:l,filter:n},f={pad:s,strides:r,inputShape:o},m=a.T2.runKernel(i.gC7,p,f);return u?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const oe=(0,l.op)({conv3dTranspose_:function(e,t,n,r,s){const a=(0,o.YT)(e,"x","conv3dTranspose"),i=(0,o.YT)(t,"filter","conv3dTranspose");return ie(n,a,i,r,s)}});const le=(0,l.op)({cos_:function(e){const t={x:(0,o.YT)(e,"x","cos","float32")};return a.T2.runKernel(i.Mn0,t)}});const ue=(0,l.op)({cosh_:function(e){const t={x:(0,o.YT)(e,"x","cosh","float32")};return a.T2.runKernel(i.MnK,t)}});const ce=(0,l.op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s={x:(0,o.YT)(e,"x","cumprod")},l={axis:t,exclusive:n,reverse:r};return a.T2.runKernel(i.jj_,s,l)}});const he=(0,l.op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s={x:(0,o.YT)(e,"x","cumsum")},l={axis:t,exclusive:n,reverse:r};return a.T2.runKernel(i.nY8,s,l)}});const de=(0,l.op)({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=(0,o.YT)(e,"x","denseBincount"),l=(0,o.YT)(t,"weights","denseBincount");d.vA("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),d.vA(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),d.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d.vA(l.size===s.size||0===l.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${l.shape}.`));const u={x:s,weights:l},c={size:n,binaryOutput:r};return a.T2.runKernel(i.wNW,u,c)}});const pe=(0,l.op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const r=(0,o.YT)(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],l="NHWC"===n?r.shape[2]:r.shape[3],u="NHWC"===n?r.shape[3]:r.shape[1];d.vA(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),d.vA(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),d.vA(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),d.vA(u%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${u} for depthToSpace with input shape ${r.shape}`));const c={x:r},h={blockSize:t,dataFormat:n};return a.T2.runKernel(i.TMz,c,h)}});const fe=(0,l.op)({depthwiseConv2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0;const c=(0,o.YT)(e,"x","depthwiseConv2d","float32"),h=(0,o.YT)(t,"filter","depthwiseConv2d","float32");let p=c,f=!1;3===c.rank&&(f=!0,p=(0,I.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),d.vA(4===p.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),d.vA(4===h.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`));const m="NHWC"===s?p.shape[3]:p.shape[1];d.vA(m===h.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${m}) must match the inChannels dimension in filter ${h.shape[2]}.`)),S.s_("depthwiseConv2d",r,u);const g={x:p,filter:h},y={strides:n,pad:r,dataFormat:s,dilations:l,dimRoundingMode:u},b=a.T2.runKernel(i.tGH,g,y);return f?(0,I.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const me=(0,l.op)({diag_:function(e){const t={x:(0,o.YT)(e,"x","diag")};return a.T2.runKernel(i.ORI,t)}});const ge=(0,l.op)({dilation2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const u=(0,o.YT)(e,"x","dilation2d"),c=(0,o.YT)(t,"filter","dilation2d");d.vA(3===u.rank||4===u.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${u.rank}.`)),d.vA(3===c.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`)),d.vA("NHWC"===l,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${l}`));let h=u,p=!1;3===u.rank&&(h=(0,I.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=!0),d.vA(h.shape[3]===c.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${h.shape[3]} vs ${c.shape[2]}`));const f={x:h,filter:c},m={strides:n,pad:r,dilations:s},g=a.T2.runKernel(i.jxD,f,m);return p?(0,I.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});var ye=n(4974),be=n(8805);const ve=(0,l.op)({equal_:function(e,t){let n=(0,o.YT)(e,"a","equal","string_or_numeric"),r=(0,o.YT)(t,"b","equal","string_or_numeric");[n,r]=(0,w.makeTypesMatch)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.T2.runKernel(i.BRl,s)}});const xe=(0,l.op)({where_:function(e,t,n){const r=(0,o.YT)(t,"a","where"),s=(0,o.YT)(n,"b","where"),l=(0,o.YT)(e,"condition","where","bool"),u=(0,be.assertAndGetBroadcastShape)((0,be.assertAndGetBroadcastShape)(l.shape,r.shape),s.shape),c={condition:j(l,u),t:j(r,u),e:j(s,u)};return a.T2.runKernel(i.l6P,c)}});var we=n(3290);const ke=(0,l.op)({divNoNan_:function(e,t){let n=(0,o.YT)(e,"a","div"),r=(0,o.YT)(t,"b","div");[n,r]=(0,w.makeTypesMatch)(n,r);const s=(0,ye.y)(n,r),a=(0,we.P)(s),i=ve(r,a);return xe(i,a,s)}});const Te=(0,l.op)({dot_:function(e,t){const n=(0,o.YT)(e,"t1","dot"),r=(0,o.YT)(t,"t2","dot");d.vA((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(d.vA(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=(0,I.t)(n,[1,-1]),t=(0,I.t)(r,[-1,1]),s=(0,R.N)(e,t);return(0,I.t)(s,[])}if(1===n.rank&&2===r.rank){const e=(0,I.t)(n,[1,-1]),t=(0,I.t)(r,[r.shape[0],r.shape[1]]),s=(0,R.N)(e,t);return(0,I.t)(s,[s.size])}if(2===n.rank&&1===r.rank){const e=(0,I.t)(r,[-1,1]),t=(0,R.N)(n,e);return(0,I.t)(t,[t.size])}{const e=(0,I.t)(r,[r.shape[0],r.shape[1]]);return(0,R.N)(n,e)}}});const Ne=(0,l.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const s=n.map(((e,t)=>(0,o.YT)(e,`tensors${t}`,"einsum"))),l={equation:e};return a.T2.runKernel(i.Qgm,s,l)}});var Se=n(3645);const Ie=(0,l.op)({ensureShape_:function(e,t){const n=(0,o.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,d.e_)(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});const Ee=(0,l.op)({erf_:function(e){let t=(0,o.YT)(e,"x","erf");d.vA("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,N.w)(t,"float32"));const n={x:t};return a.T2.runKernel(i._s9,n)}});var $e=n(9235);const Ce=(0,l.op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:(0,o.YT)(e,"x","max")},s={reductionIndices:t,keepDims:n};return a.T2.runKernel(i.VAI,r,s)}});const Ae=(0,l.op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:(0,o.YT)(e,"x","min")},s={axis:t,keepDims:n};return a.T2.runKernel(i.lNG,r,s)}});var Re=n(7587),_e=n(1997),De=n(191),Fe=n(7738),Me=n(7382);function Oe(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,s.t)(e);if(1!==e.rank&&null===n)return Oe((0,I.t)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,Me.c)((0,s.t)(e),n);if(t===1/0)return Ce((0,s.t)(e),n);if(t===-1/0)return Ae((0,s.t)(e),n);if("euclidean"===t||2===t)return(0,De.R)((0,Me.c)((0,Re.n)((0,s.t)(e),(0,_e.d)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Ce((0,Me.c)((0,s.t)(e),n[0]),n[1]-1);if(t===1/0)return Ce((0,Me.c)((0,s.t)(e),n[1]),n[0]);if(t===-1/0)return Ae((0,Me.c)((0,s.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,De.R)((0,Me.c)((0,Fe.E)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Le=(0,l.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Oe(e=(0,o.YT)(e,"x","norm"),t,n);let a=s.shape;if(r){const t=(0,d.Y6)(n,e.shape);a=$e.SM(s.shape,t)}return(0,I.t)(s,a)}});const ze=(0,l.op)({euclideanNorm_:function(e){return Le(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const Pe=(0,l.op)({exp_:function(e){const t={x:(0,o.YT)(e,"x","exp")};return a.T2.runKernel(i.ox3,t)}});const Be=(0,l.op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,o.YT)(e,"x","expandDims","string_or_numeric");d.vA(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return a.T2.runKernel(i.ybN,r,s)}});const We=(0,l.op)({expm1_:function(e){const t={x:(0,o.YT)(e,"x","expm1")};return a.T2.runKernel(i.ybj,t)}});const Ve=(0,l.op)({tile_:function(e,t){const n=(0,o.YT)(e,"x","tile","string_or_numeric");d.vA(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return a.T2.runKernel(i.FAs,r,s)}});const Ue=(0,l.op)({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const s=(0,H.r)([e,t],r),a=e<=t?e:t;for(let o=0;o<a;++o)s.set(1,o,o);const i=(0,I.t)(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Ve(Be(i,0),[n[0],1,1]);if(2===n.length)return Ve(Be(Be(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ve(Be(Be(Be(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Ge=(0,l.op)({floor_:function(e){const t={x:(0,o.YT)(e,"x","floor","float32")};return a.T2.runKernel(i.ZgB,t)}});var je=n(3612);const He=(0,l.op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const s={x:(0,o.YT)(e,"x","gather"),indices:(0,o.YT)(t,"indices","gather","int32")},l={axis:n,batchDims:r};return a.T2.runKernel(i.mxL,s,l)}});const qe=(0,l.op)({greater_:function(e,t){let n=(0,o.YT)(e,"a","greater","string_or_numeric"),r=(0,o.YT)(t,"b","greater","string_or_numeric");[n,r]=(0,w.makeTypesMatch)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.T2.runKernel(i.XhZ,s)}});const Ke=(0,l.op)({greaterEqual_:function(e,t){let n=(0,o.YT)(e,"a","greaterEqual","string_or_numeric"),r=(0,o.YT)(t,"b","greaterEqual","string_or_numeric");[n,r]=(0,w.makeTypesMatch)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.T2.runKernel(i.lLS,s)}});var Ye=n(1047);const Xe=(0,l.op)({isFinite_:function(e){const t={x:(0,o.YT)(e,"x","isFinite")};return a.T2.runKernel(i.gIW,t)}});const Ze=(0,l.op)({isInf_:function(e){const t={x:(0,o.YT)(e,"x","isInf")};return a.T2.runKernel(i.E3$,t)}});const Qe=(0,l.op)({isNaN_:function(e){const t={x:(0,o.YT)(e,"x","isNaN")};return a.T2.runKernel(i.iPs,t)}});var Je=n(8076);const et=(0,l.op)({less_:function(e,t){let n=(0,o.YT)(e,"a","less","string_or_numeric"),r=(0,o.YT)(t,"b","less","string_or_numeric");[n,r]=(0,w.makeTypesMatch)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.T2.runKernel(i.mIA,s)}});const tt=(0,l.op)({lessEqual_:function(e,t){let n=(0,o.YT)(e,"a","lessEqual","string_or_numeric"),r=(0,o.YT)(t,"b","lessEqual","string_or_numeric");[n,r]=(0,w.makeTypesMatch)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.T2.runKernel(i.CwD,s)}});function nt(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return a.T2.runKernel(i.mnI,{},r)}const rt=(0,l.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const l=(0,o.YT)(e,"x","localResponseNormalization");d.vA(4===l.rank||3===l.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`)),d.vA(d.E6(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let u=l,c=!1;3===l.rank&&(c=!0,u=(0,I.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const h={x:u},p={depthRadius:t,bias:n,alpha:r,beta:s},f=a.T2.runKernel(i.jM4,h,p);return c?(0,I.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const st=(0,l.op)({log_:function(e){const t={x:(0,o.YT)(e,"x","log","float32")};return a.T2.runKernel(i.tG8,t)}});const at=(0,l.op)({log1p_:function(e){const t={x:(0,o.YT)(e,"x","log1p")};return a.T2.runKernel(i.Cg$,t)}});var it=n(1839),ot=n(1011);const lt=(0,l.op)({softplus_:function(e){const t={x:(0,o.YT)(e,"x","softplus")};return a.T2.runKernel(i.Fin,t)}});const ut=(0,l.op)({logSigmoid_:function(e){const t=(0,o.YT)(e,"x","logSigmoid");return(0,it._X)((e=>({value:(0,ot.H)(lt((0,ot.H)(e))),gradFunc:t=>(0,_.l)(t,(0,D.r)((0,ot.H)(e)))})))(t)}});var ct=n(7951);const ht=(0,l.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,o.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=(0,it._X)(((e,n)=>{const r=Ce(e,t,!0),s=(0,ct.j)(e,r),a=(0,ct.j)((0,N.w)(s,"float32"),st((0,Me.c)(Pe(s),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,s=Pe(r);return(0,ct.j)(e,(0,_.l)((0,Me.c)(e,t,!0),s))}}}));return r(n)}});const dt=(0,l.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=(0,o.YT)(e,"x","logSumExp"),s=(0,d.Y6)(t,r.shape),a=Ce(r,s,!0),i=(0,ct.j)(r,a),l=Pe(i),u=(0,Me.c)(l,s),c=st(u),p=(0,h.W)((0,I.t)(a,c.shape),c);if(n){const e=(0,$e.SM)(p.shape,s);return(0,I.t)(p,e)}return p}});const pt=(0,l.op)({logicalAnd_:function(e,t){const n=(0,o.YT)(e,"a","logicalAnd","bool"),r=(0,o.YT)(t,"b","logicalAnd","bool");(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.T2.runKernel(i.RUm,s)}});const ft=(0,l.op)({logicalNot_:function(e){const t={x:(0,o.YT)(e,"x","logicalNot","bool")};return a.T2.runKernel(i.nZd,t)}});const mt=(0,l.op)({logicalOr_:function(e,t){const n=(0,o.YT)(e,"a","logicalOr","bool"),r=(0,o.YT)(t,"b","logicalOr","bool");(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.T2.runKernel(i.LXA,s)}});const gt=(0,l.op)({logicalXor_:function(e,t){const n=(0,o.YT)(e,"a","logicalXor","bool"),r=(0,o.YT)(t,"b","logicalXor","bool");return(0,be.assertAndGetBroadcastShape)(n.shape,r.shape),pt(mt(e,t),ft(pt(e,t)))}}),yt=2147483648;const bt=(0,l.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const r=(0,o.YT)(e,"sortedSequence","searchSorted"),s=(0,o.YT)(t,"values","searchSorted"),l=r.shape[r.shape.length-1],u=s.shape[s.shape.length-1],c=(0,I.t)(r,[-1,l]),h=(0,I.t)(s,[-1,u]);if(c.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(c.shape[0]!==h.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.Ze)(h.shape)>=yt)throw new Error("values tensor size must less than 2147483648");if(c.shape[1]>=yt)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${c.shape[1]}`);const p={sortedSequence:c,values:h},f={side:n};return a.T2.runKernel(i.uWl,p,f)}});function vt(e,t){return bt(e,t,"left")}const xt=(0,l.op)({maxPool_:function(e,t,n,r,s){const l=(0,o.YT)(e,"x","maxPool");let u=l,c=!1;3===l.rank&&(c=!0,u=(0,I.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),d.vA(4===u.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${u.rank}.`)),d.vA(S.G0(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),S.s_("maxPool",r,s);const h={x:u},p={filterSize:t,strides:n,pad:r,dimRoundingMode:s},f=a.T2.runKernel(i.t3d,h,p);return c?(0,I.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const wt=(0,l.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const u=(0,o.YT)(e,"x","maxPool3d");let c=u,h=!1;4===u.rank&&(h=!0,c=(0,I.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),d.vA(5===c.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${c.rank}.`)),d.vA("NDHWC"===l,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${l}`)),(0,S.s_)("maxPool3d",r,s);const p={x:c},f={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:l},m=a.T2.runKernel(i.ySp,p,f);return h?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const kt=(0,l.op)({maxPoolWithArgmax_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const l={x:(0,o.YT)(e,"x","maxPoolWithArgmax")},u={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},c=a.T2.runKernel(i.TL8,l,u);return{result:c[0],indexes:c[1]}}});var Tt=n(2131);const Nt=(0,l.op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:(0,o.YT)(e,"x","mean")},s={axis:t,keepDims:n};return a.T2.runKernel(i.g5A,r,s)}});function St(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,d.SA)(e),"complex64"===t){const t=St(e,"float32"),n=St(e,"float32");return(0,X.f)(t,n)}const n=(0,d.Ty)((0,d.Ze)(e),t);return a.T2.makeTensor(n,e,t)}function It(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,d.SA)(e),"complex64"===t){const t=It(e,"float32"),n=St(e,"float32");return(0,X.f)(t,n)}const n=(0,d.FZ)((0,d.Ze)(e),t);return a.T2.makeTensor(n,e,t)}var Et=n(9494);function $t(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,o.YT)(e,"x","meshgrid",e instanceof Et.qY?e.dtype:"float32");if(void 0===t)return[r];let s=(0,o.YT)(t,"y","meshgrid",t instanceof Et.qY?t.dtype:"float32");const a=(0,d.Ze)(r.shape),i=(0,d.Ze)(s.shape);return"xy"===n?(r=(0,I.t)(r,[1,-1]),s=(0,I.t)(s,[-1,1]),[(0,R.N)(It([i,1],r.dtype),r),(0,R.N)(s,It([1,a],s.dtype))]):(r=(0,I.t)(r,[-1,1]),s=(0,I.t)(s,[1,-1]),[(0,R.N)(r,It([1,i],r.dtype)),(0,R.N)(It([a,1],s.dtype),s)])}const Ct=(0,l.op)({minimum_:function(e,t){let n=(0,o.YT)(e,"a","minimum"),r=(0,o.YT)(t,"b","minimum");[n,r]=(0,w.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=(0,N.w)(n,"int32"),r=(0,N.w)(r,"int32")),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.T2.runKernel(i.LG0,s)}});const At=(0,l.op)({mirrorPad_:function(e,t,n){d.vA("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=(0,o.YT)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");d.vA(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let a=0;a<r.rank;a++)d.vA(2===t[a].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),d.vA(t[a][0]>=0&&t[a][0]<=r.shape[a]-s&&t[a][1]>=0&&t[a][1]<=r.shape[a]-s,(()=>`Padding in dimension ${a} cannot be greater than or equal to ${r.shape[a]-s} or less than 0 for input of shape ${r.shape}`));const l={paddings:t,mode:n},u={x:r};return a.T2.runKernel(i.x7F,u,l)}});const Rt=(0,l.op)({mod_:function(e,t){let n=(0,o.YT)(e,"a","mod"),r=(0,o.YT)(t,"b","mod");[n,r]=(0,w.makeTypesMatch)(n,r);const s={a:n,b:r};return a.T2.runKernel(i.BLA,s)}});const _t=(0,l.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,o.YT)(e,"x","moments");const r=(0,d.Y6)(t,e.shape),s=Nt(e,r,n);let a=s.shape;n||(a=(0,$e.SM)(s.shape,r));const i=(0,Fe.E)((0,ct.j)((0,N.w)(e,"float32"),(0,I.t)(s,a)));return{mean:s,variance:Nt(i,r,n)}}});const Dt=(0,l.op)({multiRNNCell_:function(e,t,n,r){const s=(0,o.YT)(t,"data","multiRNNCell"),a=(0,o.j1)(n,"c","multiRNNCell"),i=(0,o.j1)(r,"h","multiRNNCell");let l=s;const u=[];for(let o=0;o<e.length;o++){const t=e[o](l,a[o],i[o]);u.push(t[0]),u.push(t[1]),l=t[1]}const c=[],h=[];for(let o=0;o<u.length;o+=2)c.push(u[o]),h.push(u[o+1]);return[c,h]}});const Ft=(0,l.op)({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=(0,o.YT)(e,"logits","multinomial"),l=s.size,u=s.rank;if(l<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${l}.`);if(u>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${u}`);n=n||Math.random();const c={logits:1===u?(0,I.t)(s,[1,-1]):s},h={numSamples:t,seed:n,normalized:r},d=a.T2.runKernel(i.WT3,c,h);return 1===u?(0,I.t)(d,[d.size]):d}});const Mt=(0,l.op)({notEqual_:function(e,t){let n=(0,o.YT)(e,"a","notEqual","string_or_numeric"),r=(0,o.YT)(t,"b","notEqual","string_or_numeric");[n,r]=(0,w.makeTypesMatch)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.T2.runKernel(i.ylV,s)}});var Ot=n(6865);const Lt=(0,l.op)({onesLike_:function(e){const t={x:(0,o.YT)(e,"x","onesLike")};return a.T2.runKernel(i.LWX,t)}});const zt=(0,l.op)({outerProduct_:function(e,t){const n=(0,o.YT)(e,"v1","outerProduct"),r=(0,o.YT)(t,"v2","outerProduct");d.vA(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=(0,I.t)(n,[-1,1]),a=(0,I.t)(r,[1,-1]);return(0,R.N)(s,a)}});const Pt=(0,l.op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=(0,o.YT)(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},l={x:r};return a.T2.runKernel(i.ODT,l,s)}});const Bt=(0,l.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Pt(e,[t],n)}});const Wt=(0,l.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Pt(e,t,n)}});const Vt=(0,l.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Pt(e,t,n)}});const Ut=(0,l.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Pt(e,t,n)}});const Gt=(0,l.op)({spaceToBatchND_:function(e,t,n){const r=(0,o.YT)(e,"x","spaceToBatchND");d.vA(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),d.vA(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),d.vA(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},l={blockShape:t,paddings:n};return a.T2.runKernel(i.A8B,s,l)}});const jt=(0,l.op)({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const l=(0,o.YT)(e,"x","maxPool");let u=l,c=!1;3===l.rank&&(c=!0,u=(0,I.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),d.vA(S.G0(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const h=S.E6(u.shape,t,a,s,r),p=[h.dilationHeight,h.dilationWidth];let f;f="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),a=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],a[t]]))}([h.filterHeight,h.filterWidth],p):[[0,0],[0,0]];const m=1===p[0]&&1===p[1],[g,y]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([h.inHeight,h.inWidth],p,f),b=m?r:"valid",v=m?u:Gt(u,p,g),x=("avg"===n?()=>E(v,t,a,b,i):()=>xt(v,t,a,b,i))(),w=m?x:L(x,p,y);return c?(0,I.t)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});var Ht=n(9855),qt=n(6574);const Kt=(0,l.op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=(0,o.YT)(e,"x","prod");"bool"===r.dtype&&(r=(0,N.w)(r,"int32"));const s={x:r},l={axis:t,keepDims:n};return a.T2.runKernel(i.kdj,s,l)}});const Yt=(0,l.op)({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>(0,o.YT)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,o.YT)(t,"paramsDenseValues","raggedGather"),indices:(0,o.YT)(n,"indices","raggedGather","int32")},l={outputRaggedRank:r},u=a.T2.runKernel(i.oJ2,s,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}});const Xt=(0,l.op)({raggedRange_:function(e,t,n){const r=(0,o.YT)(e,"starts","raggedRange"),s={starts:r,limits:(0,o.YT)(t,"limits","raggedRange",r.dtype),deltas:(0,o.YT)(n,"deltas","raggedRange",r.dtype)},l=a.T2.runKernel(i.CQC,s);return{rtNestedSplits:l[0],rtDenseValues:l[1]}}});const Zt=(0,l.op)({raggedTensorToTensor_:function(e,t,n,r,s){const l=(0,o.YT)(e,"shape","raggedTensorToTensor","int32"),u=(0,o.YT)(t,"values","raggedTensorToTensor"),c={shape:l,values:u,defaultValue:(0,o.YT)(n,"defaultValue","raggedTensorToTensor",u.dtype),rowPartitionTensors:r.map(((e,t)=>(0,o.YT)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},h={rowPartitionTypes:s};return a.T2.runKernel(i.mH5,c,h)}});const Qt=(0,l.op)({rand_:function(e,t,n){(0,d.SA)(e);const r=(0,d.Ze)(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=t();return a.T2.makeTensor(s,e,n)}});var Jt=n(9815);class en{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Jt.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class tn{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Jt.alea(s.toString()),this.randn=new en(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class nn{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Jt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const rn=(0,l.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new tn(t,n,r,s),i=(0,H.r)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const sn=(0,l.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new en(t,n,r,!1,s),i=(0,H.r)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const an=(0,l.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return sn(e,0,1,t,n)}});const on=(0,l.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;(0,d.SA)(e);const a=(0,H.r)(e,r),i=new nn(t,n,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});const ln=(0,l.op)({randomUniformInt_:function(e,t,n,r){return on(e,t,n,"int32",r)}});function un(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return a.T2.runKernel(i.Q6t,{},s)}var cn=n(9477);const hn=(0,l.op)({reciprocal_:function(e){const t={x:(0,o.YT)(e,"x","reciprocal")};return a.T2.runKernel(i.huO,t)}});var dn=n(5251),pn=n(9721);const fn=(0,l.op)({reverse_:function(e,t){const n={x:(0,o.YT)(e,"x","reverse")},r={dims:t};return a.T2.runKernel(i.D7i,n,r)}});const mn=(0,l.op)({reverse1d_:function(e){const t=(0,o.YT)(e,"x","reverse");return d.vA(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),fn(t,0)}});const gn=(0,l.op)({reverse2d_:function(e,t){const n=(0,o.YT)(e,"x","reverse");return d.vA(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),fn(n,t)}});const yn=(0,l.op)({reverse3d_:function(e,t){const n=(0,o.YT)(e,"x","reverse");return d.vA(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),fn(n,t)}});const bn=(0,l.op)({reverse4d_:function(e,t){const n=(0,o.YT)(e,"x","reverse");return d.vA(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),fn(n,t)}});const vn=(0,l.op)({round_:function(e){const t={x:(0,o.YT)(e,"x","round")};return a.T2.runKernel(i.hVg,t)}});const xn=(0,l.op)({rsqrt_:function(e){const t={x:(0,o.YT)(e,"x","rsqrt","float32")};return a.T2.runKernel(i.TOR,t)}});const wn=(0,l.op)({selu_:function(e){const t={x:(0,o.YT)(e,"x","selu")};return a.T2.runKernel(i.u$b,t)}});const kn=(0,l.op)({separableConv2d_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const l=(0,o.YT)(e,"x","separableConv2d"),u=(0,o.YT)(t,"depthwiseFilter","separableConv2d"),c=(0,o.YT)(n,"pointwiseFilter","separableConv2d");let h=l,p=!1;if(3===l.rank&&(p=!0,h=(0,I.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");d.vA(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),d.vA(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),d.vA(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),d.vA(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),d.vA(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const f=u.shape[2],m=u.shape[3];d.vA(c.shape[2]===f*m,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${f*m}, but got ${c.shape[2]}.`));const g=fe(h,u,r,s,i,a),y=te(g,c,1,"valid",i);return p?(0,I.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});const Tn=async function(e,t){const n=(0,o.YT)(e,"x","setdiff1d"),r=(0,o.YT)(t,"y","setdiff1d");d.vA(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),d.vA(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),d.vA(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let l=0;for(let o=0;o<s.length;o++)i.has(s[o])||l++;const u=new Et.yl([l],n.dtype),c=new Et.yl([l],"int32");for(let o=0,h=0;o<s.length;o++)i.has(s[o])||(u.values[h]=s[o],c.values[h]=o,h++);return[u.toTensor(),c.toTensor()]};const Nn=(0,l.op)({sign_:function(e){const t={x:(0,o.YT)(e,"x","sign")};return a.T2.runKernel(i.YVe,t)}});const Sn=(0,l.op)({sin_:function(e){const t={x:(0,o.YT)(e,"x","sin","float32")};return a.T2.runKernel(i.hql,t)}});const In=(0,l.op)({sinh_:function(e){const t={x:(0,o.YT)(e,"x","sinh")};return a.T2.runKernel(i.J3C,t)}});const En=(0,l.op)({slice1d_:function(e,t,n){const r=(0,o.YT)(e,"x","slice1d");return d.vA(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),F(r,[t],[n])}});const $n=(0,l.op)({slice2d_:function(e,t,n){const r=(0,o.YT)(e,"x","slice2d");return d.vA(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),F(r,t,n)}});const Cn=(0,l.op)({slice3d_:function(e,t,n){const r=(0,o.YT)(e,"x","slice3d");return d.vA(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),F(r,t,n)}});const An=(0,l.op)({slice4d_:function(e,t,n){const r=(0,o.YT)(e,"x","slice4d");return d.vA(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),F(r,t,n)}});const Rn=(0,l.op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,o.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return a.T2.runKernel(i.rFG,r,s)}});const _n=(0,l.op)({fft_:function(e){(0,d.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return a.T2.runKernel(i.rGP,t)}});const Dn=(0,l.op)({ifft_:function(e){(0,d.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return a.T2.runKernel(i.OAQ,t)}});const Fn=(0,l.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=(0,I.t)(e,[n,t]);r=Dn(s)}else{const s=[n,2*(t-1)],a=(0,I.t)((0,cn.x)(e),[n,t]),i=(0,I.t)((0,Ye.n)(e),[n,t]),o=fn(F(a,[0,1],[n,t-2]),1),l=(0,_.l)(fn(F(i,[0,1],[n,t-2]),1),(0,_e.d)(-1)),u=A([a,o],1),c=A([i,l],1),h=(0,I.t)((0,X.f)(u,c),[s[0],s[1]]);r=Dn(h)}if(r=(0,cn.x)(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=(0,I.t)(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const Mn=(0,l.op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r={x:(0,o.YT)(e,"x","split")},s={numOrSizeSplits:t,axis:n};return a.T2.runKernel(i.Blb,r,s)}});const On=(0,l.op)({rfft_:function(e,t){(0,d.vA)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=F(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=A([e,St(r)],e.shape.length-1),n=t}else s=e;const a=(0,we.P)(s),i=(0,I.t)((0,X.f)(s,a),[r,n]),o=_n(i),l=Math.floor(n/2)+1,u=(0,cn.x)(o),c=(0,Ye.n)(o),h=Mn(u,[l,n-l],u.shape.length-1),p=Mn(c,[l,n-l],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,(0,I.t)((0,X.f)(h[0],p[0]),f)}});const Ln=(0,l.op)({squaredDifference_:function(e,t){let n=(0,o.YT)(e,"a","squaredDifference"),r=(0,o.YT)(t,"b","squaredDifference");[n,r]=(0,w.makeTypesMatch)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.T2.runKernel(i.Ddj,s,{})}});const zn=(0,l.op)({squeeze_:function(e,t){const n=(0,o.YT)(e,"x","squeeze","string_or_numeric");return(0,I.t)(n,(0,d.gx)(n.shape,t).newShape)}});const Pn=(0,l.op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,o.j1)(e,"tensors","stack","string_or_numeric");d.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&d.vA(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return a.T2.runKernel(i.mM$,r,s)}});var Bn=n(319);const Wn=(0,l.op)({stridedSlice_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,h=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const d={x:(0,o.YT)(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:r,beginMask:s,endMask:l,ellipsisMask:u,newAxisMask:c,shrinkAxisMask:h};return a.T2.runKernel(i.UcO,d,p)}});const Vn=(0,l.op)({tan_:function(e){const t={x:(0,o.YT)(e,"x","tan","float32")};return a.T2.runKernel(i.oFs,t)}});var Un=n(8032),Gn=n(9914);function jn(e,t){(0,d.HO)(e);const n=(0,o.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Gn.Q)(e,null,n,t)}function Hn(e,t,n){if((0,d.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,o.MZ)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Gn.Q)(e,t,r,n)}var qn=n(5395);function Kn(e,t,n){if((0,d.HO)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,o.MZ)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Gn.Q)(e,t,r,n)}function Yn(e,t,n){if((0,d.HO)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,o.MZ)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Gn.Q)(e,t,r,n)}function Xn(e,t,n){if((0,d.HO)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,o.MZ)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,Gn.Q)(e,t,r,n)}var Zn=n(4083);const Qn=(0,l.op)({tensorScatterUpdate_:function(e,t,n){const r=(0,o.YT)(e,"tensor","tensorScatterupdate"),s=(0,o.YT)(t,"indices","tensorScatterupdate","int32"),l=(0,o.YT)(n,"updates","tensorScatterupdate");if(Zn.validateInput(l,s,r.shape),r.dtype!==l.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${l.dtype}.`);const u={tensor:r,indices:s,updates:l};return a.T2.runKernel(i.X4r,u,{})}});const Jn=(0,l.op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=(0,o.YT)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const l={x:r},u={k:t,sorted:n},[c,h]=a.T2.runKernel(i.TBb,l,u);return{values:c,indices:h}}});const er=(0,l.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new en(t,n,r,!0,s),i=(0,H.r)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const tr=(0,l.op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,o.YT)(e,"x","unique","string_or_numeric");(0,d.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[l,u]=a.T2.runKernel(i.EwU,r,s);return{values:l,indices:u}}});const nr=(0,l.op)({unsortedSegmentSum_:function(e,t,n){const r=(0,o.YT)(e,"x","unsortedSegmentSum"),s=(0,o.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,d.vA)((0,d.E6)(n),(()=>"numSegments must be of dtype int"));const l={x:r,segmentIds:s},u={numSegments:n};return a.T2.runKernel(i.pPe,l,u)}});const rr=(0,l.op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,o.YT)(e,"x","unstack","string_or_numeric");d.vA(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return a.T2.runKernel(i.dXR,r,s)}});function sr(e,t){return bt(e,t,"right")}function ar(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return a.T2.makeVariable(e,t,n,r)}var ir=n(9286);const or=async function(e){const t=(0,o.YT)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,ir.Y)(t.shape,n);return e!==t&&t.dispose(),r};const lr=async function(e,t,n){const r=(0,o.YT)(e,"tensor","boolMask"),s=(0,o.YT)(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,l=r.shape;d.vA(i>0,(()=>"mask cannot be scalar")),d.O3(l.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let o=a;o<a+i;o++)u*=l[o];const c=l.slice(0,a).concat([u],l.slice(a+i)),h=(0,I.t)(r,c),p=(0,I.t)(s,[-1]),f=await or(p),m=zn(f,[1]),g=He(h,m,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),m.dispose(),h.dispose(),p.dispose(),f.dispose(),g};var ur=n(2154);const cr=(0,l.op)({movingAverage_:function(e,t,n,r){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const a=(0,o.YT)(e,"v","movingAverage"),i=(0,o.YT)(t,"x","movingAverage"),l=(0,o.YT)(n,"decay","movingAverage");(0,w.assertTypesMatch)(a,i),d.vA(d.r1(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=(0,_e.d)(1),c=(0,ct.j)(u,l);let p=(0,_.l)((0,ct.j)(i,a),c);if(s){d.vA(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,o.YT)(r,"step","movingAverage");p=(0,ye.y)(p,(0,ct.j)(u,(0,Re.n)(l,e)))}return(0,h.W)(a,p)}});const hr=(0,l.op)({scatterND_:function(e,t,n){(0,d.SA)(n);const r=(0,o.YT)(e,"indices","scatterND","int32"),s=(0,o.YT)(t,"updates","scatterND");Zn.validateInput(s,r,n);const l={indices:r,updates:s},u={shape:n};return a.T2.runKernel(i.pJc,l,u)}});const dr=(0,l.op)({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,d.SA)(n);const s=(0,o.YT)(e,"sparseIndices","sparseToDense","int32"),l=(0,o.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),u=(0,o.YT)(r,"defaultValue","sparseToDense",l.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,l,n,u);const c={sparseIndices:s,sparseValues:l,defaultValue:u},h={outputShape:n};return a.T2.runKernel(i.jgd,c,h)}});const pr=(0,l.op)({gatherND_:function(e,t){const n=(0,o.YT)(t,"indices","gatherND","int32"),r={params:(0,o.YT)(e,"x","gatherND","string_or_numeric"),indices:n};return a.T2.runKernel(i.O4G,r)}});const fr=(0,l.op)({dropout_:function(e,t,n,r){const s=(0,o.YT)(e,"x","dropout");if(d.vA("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),d.vA(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Et.qY?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(d.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,l=(0,ye.y)(Ge((0,h.W)(on(a,0,1,"float32",r),i)),i);return(0,_.l)(s,l)}});function mr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function gr(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return jn(s,"float32")}const yr=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=(0,o.YT)(e,"predictions","inTopK"),s=(0,o.YT)(t,"targets","inTopK");(0,d.vA)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,d.vA)(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),(0,d.O3)(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];(0,d.vA)(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),l=await s.data(),[u,c]=[i.length/a,a],h=(0,d.ce)("bool",u);for(let o=0;o<u;o++){const e=o*c,t=i.subarray(e,e+c),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),h[o]=0;for(let s=0;s<n;s++)if(r[s].index===l[o]){h[o]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),(0,Un.O)(h,s.shape,"bool")};const br=(0,l.op)({conv2DBackpropFilter_:function(e,t,n,r,s){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",l=arguments.length>6?arguments[6]:void 0,u=e;3===e.rank&&(u=(0,I.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,I.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),d.vA(4===u.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${u.shape}.`)),d.vA(4===c.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`)),d.vA(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const h="NHWC"===o?u.shape[3]:u.shape[1],p="NHWC"===o?c.shape[3]:c.shape[1];d.vA(h===n[2],(()=>`Error in conv2dDerFilter: depth of input ${h}) must match input depth in filter (${n[2]}.`)),d.vA(p===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`)),S.s_("conv2dDerFilter",s,l);const f={x:u,dy:c},m={strides:r,pad:s,dataFormat:o,dimRoundingMode:l,filterShape:n};return a.T2.runKernel(i.rFm,f,m)}});var vr=n(7905);const xr=(0,l.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:s,dataFormat:l="NHWC",dilations:u=[1,1],dimRoundingMode:c,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(f=f||"linear",!1===(0,vr.zE)(a.T2.state.gradientDepth,f)){d.vA("NHWC"===l,(()=>`Error in fused conv2d: got dataFormat of ${l} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let e=te(t,n,r,s,l,u,c);return null!=p&&(e=(0,h.W)(e,p)),(0,vr.f2)(e,f,m,g)}const y=(0,o.YT)(t,"x","conv2d","float32"),b=(0,o.YT)(n,"filter","conv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,I.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${v.rank}.`)),d.vA(4===b.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${b.rank}.`)),S.s_("fused conv2d",s,c);const k="NHWC"===l?v.shape[3]:v.shape[1];d.vA(b.shape[2]===k,(()=>`Error in conv2d: depth of input (${k}) must match input depth for filter ${b.shape[2]}.`)),d.vA(S.G0(r,u),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`));const T=S.uf(v.shape,b.shape,r,u,s,c);let N,E;if(null!=p&&(N=(0,o.YT)(p,"bias","fused conv2d"),[N]=(0,w.makeTypesMatch)(N,y),"NHWC"===l?be.assertAndGetBroadcastShape(T.outShape,N.shape):(d.vA(N.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${N.shape.length}.`)),d.vA(0===N.shape.length||N.shape[0]===T.outChannels||1===N.shape[0],(()=>`Error in fused conv2d: bias shape (${N.shape}) is not compatible with the number of output channels (${T.outChannels})`)))),null!=m){const e=m.shape;if(d.vA(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)d.vA(1===e[0]||e[0]===T.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${T.outChannels}).`));else if(3===e.length)try{be.assertAndGetBroadcastShape(e,T.outShape)}catch(R){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${T.outShape}).`;throw Error(t)}E=(0,o.YT)(m,"prelu weights","fused conv2d")}const $=(e,t)=>{d.vA("NHWC"===l,(()=>`Error in gradient of fused conv2D: got dataFormat of ${l} but only NHWC is currently supported.`));const[n,a,i,o]=t,c=(0,vr.XB)(e,i,f);d.vA(S.Dh(u),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${u}'`));const h=[re(a.shape,c,n,r,s),br(a,c,n.shape,r,s)];if(null!=o){const e=(0,vr.Do)(o,c);h.push(e)}return h},C={x:v,filter:b,bias:N,preluActivationWeights:E},A={strides:r,pad:s,dataFormat:l,dilations:u,dimRoundingMode:c,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,it._X)(((e,t,n)=>{let r=a.T2.runKernel(i.aAr,C,A);return n([t,e,r]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:$}}));return e(v,b)}{const e=(0,it._X)(((e,t,n,r)=>{let s=a.T2.runKernel(i.aAr,C,A);return r([t,e,s,n]),x&&(s=(0,I.t)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:$}}));return e(v,b,N)}}});const wr=(0,l.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=e;3===e.rank&&(u=(0,I.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,I.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:u,dy:c},d={strides:r,pad:s,dimRoundingMode:l,dilations:o,filterShape:n};return a.T2.runKernel(i.X$8,h,d)}});const kr=(0,l.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=t,c=!1;3===t.rank&&(c=!0,u=(0,I.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:u,filter:n},d={strides:r,pad:s,dimRoundingMode:l,dilations:o,inputShape:e},p=a.T2.runKernel(i.nVu,h,d);return c?(0,I.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Tr=(0,l.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:s,dataFormat:l="NHWC",dilations:u=[1,1],dimRoundingMode:c,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(!1===(0,vr.zE)(a.T2.state.gradientDepth,f)){let e=fe(t,n,r,s,l,u,c);return null!=p&&(e=(0,h.W)(e,p)),(0,vr.f2)(e,f,m,g)}const y=(0,o.YT)(t,"x","depthwiseConv2d","float32"),b=(0,o.YT)(n,"filter","depthwiseConv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,I.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${v.rank}.`)),d.vA(4===b.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${b.rank}.`)),d.vA(v.shape[3]===b.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${v.shape[3]}) must match the inChannels dimension in filter ${b.shape[2]}.`)),null==u&&(u=[1,1]),d.vA(S.G0(r,u),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`)),S.s_("fused depthwiseConv2d",s,c);const k=S.uf(v.shape,b.shape,r,u,s,c,!0);let T,N;null!=p&&(T=(0,o.YT)(p,"bias","fused conv2d"),[T]=(0,w.makeTypesMatch)(T,y),be.assertAndGetBroadcastShape(k.outShape,T.shape)),null!=m&&(N=(0,o.YT)(m,"prelu weights","fused depthwiseConv2d"));const E=(e,t)=>{d.vA(S.Dh(u),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${u}'`));const[n,a,i,o]=t,l=(0,vr.XB)(e,i,f),h=kr(a.shape,l,n,r,s,u,c),p=wr(a,l,n.shape,r,s,u,c);if(null!=o){return[h,p,(0,vr.Do)(T,l)]}return[h,p]},$={x:v,filter:b,bias:T,preluActivationWeights:N},C={strides:r,pad:s,dataFormat:l,dilations:u,dimRoundingMode:c,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,it._X)(((e,t,n)=>{let r=a.T2.runKernel(i.T7M,$,C);return n([t,e,r]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:E}}));return e(v,b)}{const e=(0,it._X)(((e,t,n,r)=>{let s=a.T2.runKernel(i.T7M,$,C);return r([t,e,s,n]),x&&(s=(0,I.t)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:E}}));return e(v,b,T)}}});const Nr=(0,l.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:s=!1,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:p=.2}=e;if(!1===(0,vr.zE)(a.T2.state.gradientDepth,u)){let e=(0,R.N)(t,n,r,s);return null!=l&&(e=(0,h.W)(e,l)),(0,vr.f2)(e,u,c,p)}let f=(0,o.YT)(t,"a","fused matMul"),m=(0,o.YT)(n,"b","fused matMul");[f,m]=(0,w.makeTypesMatch)(f,m);const g=r?f.shape[f.rank-2]:f.shape[f.rank-1],y=s?m.shape[m.rank-1]:m.shape[m.rank-2],b=r?f.shape[f.rank-1]:f.shape[f.rank-2],v=s?m.shape[m.rank-2]:m.shape[m.rank-1],x=f.shape.slice(0,-2),k=m.shape.slice(0,-2),T=d.Ze(x),N=d.Ze(k);d.vA(g===y,(()=>`Error in fused matMul: inner shapes (${g}) and (${y}) of Tensors with shapes ${f.shape} and ${m.shape} and transposeA=${r} and transposeB=${s} must match.`));const S=be.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([b,v]),E=r?(0,I.t)(f,[T,g,b]):(0,I.t)(f,[T,b,g]),$=s?(0,I.t)(m,[N,v,y]):(0,I.t)(m,[N,y,v]);let C,A;null!=l&&(C=(0,o.YT)(l,"bias","fused matMul"),[C]=(0,w.makeTypesMatch)(C,f),be.assertAndGetBroadcastShape(S,C.shape)),null!=c&&(A=(0,o.YT)(c,"prelu weights","fused matMul"));const _=(e,t)=>{const[n,a,i,o]=t,c=(0,vr.XB)((0,I.t)(e,i.shape),i,u);let h,d;if(r||s?!r&&s?(h=(0,R.N)(c,a,!1,!1),d=(0,R.N)(c,n,!0,!1)):r&&!s?(h=(0,R.N)(a,c,!1,!0),d=(0,R.N)(n,c,!1,!1)):(h=(0,R.N)(a,c,!0,!0),d=(0,R.N)(c,n,!0,!0)):(h=(0,R.N)(c,a,!1,!0),d=(0,R.N)(n,c,!0,!1)),null!=l){return[h,d,(0,vr.Do)(o,c)]}return[h,d]},D={a:E,b:$,bias:C,preluActivationWeights:A},F={transposeA:r,transposeB:s,activation:u,leakyreluAlpha:p};if(null==l){const e=(0,it._X)(((e,t,n)=>{const r=a.T2.runKernel(i.Dr,D,F);return n([e,t,r]),{value:(0,I.t)(r,S),gradFunc:_}}));return e(E,$)}{const e=(0,it._X)(((e,t,n,r)=>{const s=a.T2.runKernel(i.Dr,D,F);return r([e,t,s,n]),{value:(0,I.t)(s,S),gradFunc:_}}));return e(E,$,C)}}});const Sr=(0,l.op)({hammingWindow_:function(e){return gr(e,.54,.46)}});const Ir=(0,l.op)({hannWindow_:function(e){return gr(e,.5,.5)}});const Er=(0,l.op)({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=0;const i=[];for(;a+t<=e.size;)i.push(F(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=A([F(e,a,t-r),(0,K.G)([r],s)]);i.push(o),a+=n}return 0===i.length?Hn([],[0,t]):(0,I.t)(A(i),[i.length,t])}});const $r=(0,l.op)({stft_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ir;null==r&&(r=mr(t));const a=Er(e,t,n),i=(0,_.l)(a,s(t));return On(i,r)}});const Cr=(0,l.op)({cropAndResize_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const u=(0,o.YT)(e,"image","cropAndResize"),c=(0,o.YT)(t,"boxes","cropAndResize","float32"),h=(0,o.YT)(n,"boxInd","cropAndResize","int32"),p=c.shape[0];d.vA(4===u.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${u.rank}.`)),d.vA(2===c.rank&&4===c.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${c.shape}.`)),d.vA(1===h.rank&&h.shape[0]===p,(()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${c.shape}.`)),d.vA(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),d.vA(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),d.vA("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const f={image:u,boxes:c,boxInd:h},m={method:s,extrapolationValue:l,cropSize:r};return a.T2.runKernel(i.MRQ,f,m)}});const Ar=(0,l.op)({flipLeftRight_:function(e){const t=(0,o.YT)(e,"image","flipLeftRight","float32");d.vA(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return a.T2.runKernel(i.BxF,n,{})}});const Rr=(0,l.op)({grayscaleToRGB_:function(e){const t=(0,o.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];d.vA(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),d.vA(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Ve(t,s)}});const _r=(0,l.op)({rgbToGrayscale_:function(e){const t=(0,o.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];d.vA(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),d.vA(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=(0,N.w)(t,"float32"),i=jn([.2989,.587,.114]);let l;switch(t.rank){case 2:l=Ne("ij,j->i",a,i);break;case 3:l=Ne("ijk,k->ij",a,i);break;case 4:l=Ne("ijkl,l->ijk",a,i);break;case 5:l=Ne("ijklm,m->ijkl",a,i);break;case 6:l=Ne("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return l=Be(l,-1),(0,N.w)(l,s)}});const Dr=(0,l.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=(0,o.YT)(e,"image","rotateWithOffset","float32");d.vA(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const l={image:s},u={radians:t,fillValue:n,center:r};return a.T2.runKernel(i.BK4,l,u)}});function Fr(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),d.vA(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),d.vA(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),d.vA(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),d.vA(1===t.rank,(()=>"scores must be a 1D tensor")),d.vA(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),d.vA(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Mr=(0,l.op)({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const l=(0,o.YT)(e,"boxes","nonMaxSuppression","float32"),u=(0,o.YT)(t,"scores","nonMaxSuppression","float32"),c=Fr(l,u,n,r,s);n=c.maxOutputSize,r=c.iouThreshold,s=c.scoreThreshold;const h={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return a.T2.runKernel(i.SDM,{boxes:l,scores:u},h)}});var Or=n(6692);const Lr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const a=(0,o.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,o.YT)(t,"scores","nonMaxSuppressionAsync"),l=Fr(a,i,n,r,s);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),c=u[0],h=u[1],{selectedIndices:d}=(0,Or.c7)(c,h,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),jn(d,"int32")};const zr=(0,l.op)({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const u=(0,o.YT)(e,"boxes","nonMaxSuppression"),c=(0,o.YT)(t,"scores","nonMaxSuppression"),h=Fr(u,c,n,r,s,l);n=h.maxOutputSize,r=h.iouThreshold,s=h.scoreThreshold,l=h.softNmsSigma;const d={boxes:u,scores:c},p={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:l},f=a.T2.runKernel(i.e0f,d,p);return{selectedIndices:f[0],selectedScores:f[1]}}});const Pr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=(0,o.YT)(e,"boxes","nonMaxSuppressionAsync"),l=(0,o.YT)(t,"scores","nonMaxSuppressionAsync"),u=Fr(i,l,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const c=await Promise.all([i.data(),l.data()]),h=c[0],d=c[1],{selectedIndices:p,selectedScores:f}=(0,Or.ut)(h,d,n,r,s,a);return i!==e&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:jn(p,"int32"),selectedScores:jn(f)}};const Br=(0,l.op)({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,l=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const u=(0,o.YT)(e,"boxes","nonMaxSuppression"),c=(0,o.YT)(t,"scores","nonMaxSuppression"),h=Fr(u,c,n,r,s,null),d={boxes:u,scores:c},p={maxOutputSize:h.maxOutputSize,iouThreshold:h.iouThreshold,scoreThreshold:h.scoreThreshold,padToMaxOutputSize:l},f=a.T2.runKernel(i.Zl4,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}});const Wr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=(0,o.YT)(e,"boxes","nonMaxSuppressionAsync"),l=(0,o.YT)(t,"scores","nonMaxSuppressionAsync"),u=Fr(i,l,n,r,s,null),c=u.maxOutputSize,h=u.iouThreshold,d=u.scoreThreshold,[p,f]=await Promise.all([i.data(),l.data()]),{selectedIndices:m,validOutputs:g}=(0,Or.ZS)(p,f,c,h,d,a);return i!==e&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:jn(m,"int32"),validOutputs:(0,_e.d)(g,"int32")}};const Vr=(0,l.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=(0,o.YT)(e,"images","resizeBilinear");d.vA(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),d.vA(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),d.vA(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let l=s,u=!1;3===s.rank&&(u=!0,l=(0,I.t)(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,c={images:l},h={alignCorners:n,halfPixelCenters:r,size:t},p=a.T2.runKernel(i.hgw,c,h);return u?(0,I.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Ur=(0,l.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=(0,o.YT)(e,"images","resizeNearestNeighbor");d.vA(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),d.vA(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),d.vA("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),d.vA(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let l=s,u=!1;3===s.rank&&(u=!0,l=(0,I.t)(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,c={images:l},h={alignCorners:n,halfPixelCenters:r,size:t},p=a.T2.runKernel(i.jOE,c,h);return u?(0,I.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Gr=(0,l.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=(0,o.YT)(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,l,u,c,p=(0,_.l)(jn([r]),255);if(d.vA(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),d.vA(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),d.vA("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),d.vA("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,l,u]=Mn(s,[1,1,1],-1);const e=(0,_.l)(i,.2989),t=(0,_.l)(l,.587),n=(0,_.l)(u,.114);c=(0,h.W)((0,h.W)(e,t),n)}else c=e;if("otsu"===t){p=function(e,t){let n,r,s,a,i,o,l=jn([-1]),u=jn([0]),c=jn([0]);for(let d=0;d<e.size-1;d++){n=F(e,0,d+1),r=F(e,d+1),i=(0,ye.y)((0,Me.c)(n),t),o=(0,ye.y)((0,Me.c)(r),t);const p=(0,Me.c)((0,_.l)(n,un(0,n.size)));s=(0,ye.y)(p,(0,Me.c)(n));const f=(0,K.G)(r.shape,n.size),m=(0,h.W)(un(0,r.size),f),g=(0,_.l)(r,m);a=(0,ye.y)((0,Me.c)(g),(0,Me.c)(r));const y=(0,ct.j)(s,a),b=(0,ct.j)(s,a),v=(0,_.l)(i,o);c=(0,_.l)((0,_.l)(v,y),b);const x=qe(c,u);u=xe(x,c,u),l=xe(x,jn([d]),l)}return l}(V((0,N.w)(vn(c),"int32"),(0,Un.O)([]),256),a)}const f=n?tt(c,p):qe(c,p);return(0,N.w)((0,_.l)(f,255),"int32")}});const jr=(0,l.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,l=arguments.length>5?arguments[5]:void 0;const u=(0,o.YT)(e,"image","transform","float32"),c=(0,o.YT)(t,"transforms","transform","float32");d.vA(4===u.rank,(()=>`Error in transform: image must be rank 4,but got rank ${u.rank}.`)),d.vA(2===c.rank&&(c.shape[0]===u.shape[0]||1===c.shape[0])&&8===c.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d.vA(null==l||2===l.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${l}.`));const h={image:u,transforms:c},p={interpolation:n,fillMode:r,fillValue:s,outputShape:l};return a.T2.runKernel(i.dLy,h,p)}});const Hr=(0,l.op)({bandPart_:function(e,t,n){const r=(0,o.YT)(e,"a","bandPart");(0,d.vA)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let l,u;"number"===typeof t?((0,d.vA)(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,d.vA)(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),l=(0,o.YT)(t<0?a:t,"numLower","bandPart")):((0,d.vA)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),l=xe(et(t,0),a,Ct(t,a))),"number"===typeof n?((0,d.vA)(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),(0,d.vA)(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),u=(0,o.YT)(n<0?i:n,"numUpper","bandPart")):((0,d.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=xe(et(n,0),i,Ct(n,i)));const c=(0,I.t)(un(0,a,1,"int32"),[-1,1]),h=un(0,i,1,"int32"),p=(0,ct.j)(c,h),f=pt(tt(p,l),Ke(p,(0,ot.H)(u))),m=St([a,i],r.dtype);return(0,I.t)(Pn(rr((0,I.t)(r,[-1,a,i])).map((e=>xe(f,e,m)))),s)}});const qr=(0,l.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.vA)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.vA)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Mn(e,e.shape[0],0).map((e=>zn(e,[0])));(0,d.vA)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(a.T2.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=(0,_.l)((0,Me.c)((0,_.l)(n[t],e)),n[t]);e=(0,ct.j)(e,r)}return(0,ye.y)(e,Le(e,"euclidean"))})));return t?Pn(n,0):n}});var Kr=n(8046);function Yr(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return a.T2.tidy((()=>{(0,d.vA)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Ue(n),i=(0,C.o)(e);const o=Hn([[1]],[1,1]);let l=(0,C.o)(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=i,u=l,c=s;[l,i,s]=a.T2.tidy((()=>{const t=F(i,[e,e],[n-e,1]),a=Le(t),u=F(i,[e,e],[1,1]),c=xe(qe(u,0),Hn([[-1]]),Hn([[1]])),h=(0,ct.j)(u,(0,_.l)(c,a)),d=(0,ye.y)(t,h);l=1===d.shape[0]?(0,C.o)(o):A([o,F(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=(0,ot.H)((0,ye.y)((0,R.N)(c,h),a)),f=F(i,[e,0],[n-e,r]),m=(0,_.l)(p,l),g=(0,ur.m)(l);if(0===e)i=(0,ct.j)(f,(0,R.N)(m,(0,R.N)(g,f)));else{const t=(0,ct.j)(f,(0,R.N)(m,(0,R.N)(g,f)));i=A([F(i,[0,0],[e,r]),t],0)}const y=(0,ur.m)(m),b=F(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=(0,ct.j)(b,(0,R.N)((0,R.N)(b,l),y));else{const t=(0,ct.j)(b,(0,R.N)((0,R.N)(b,l),y));s=A([F(s,[0,0],[n,e]),t],1)}return[l,i,s]})),(0,Kr.AS)([t,u,c])}return!t&&n>r&&(s=F(s,[0,0],[n,r]),i=F(i,[0,0],[r,r])),[s,i]}))}const Xr=(0,l.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,d.vA)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Yr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=rr((0,I.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=Yr(e,t);s.push(n),a.push(r)}));return[(0,I.t)(Pn(s,0),e.shape),(0,I.t)(Pn(a,0),e.shape)]}}});var Zr=n(1667);const Qr=(0,l.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Zr.i.SUM_BY_NONZERO_WEIGHTS;const r=(0,o.YT)(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=(0,o.YT)(t,"weights","computeWeightedLoss"));const a=null==s?r:(0,_.l)(r,s);if(n===Zr.i.NONE)return a;if(n===Zr.i.SUM)return(0,Me.c)(a);if(n===Zr.i.MEAN){if(null==s)return Nt(a);{const e=r.size/s.size,t=(0,ye.y)((0,Me.c)(a),(0,Me.c)(s));return e>1?(0,ye.y)(t,(0,_e.d)(e)):t}}if(n===Zr.i.SUM_BY_NONZERO_WEIGHTS){if(null==s)return(0,ye.y)((0,Me.c)(a),(0,_e.d)(r.size));{const e=(0,_.l)(s,It(r.shape)),t=(0,N.w)((0,Me.c)(Mt(e,(0,_e.d)(0))),"float32");return(0,ye.y)((0,Me.c)(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const Jr=(0,l.op)({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zr.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,o.YT)(e,"labels","absoluteDifference"),i=(0,o.YT)(t,"predictions","absoluteDifference");let l=null;null!=n&&(l=(0,o.YT)(n,"weights","absoluteDifference")),(0,d.O3)(a.shape,i.shape,"Error in absoluteDifference: ");const u=(0,s.t)((0,ct.j)(a,i));return Qr(u,l,r)}});const es=(0,l.op)({cosineDistance_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,o.YT)(e,"labels","cosineDistance"),i=(0,o.YT)(t,"predictions","cosineDistance");let l=null;null!=r&&(l=(0,o.YT)(r,"weights","cosineDistance")),(0,d.O3)(a.shape,i.shape,"Error in cosineDistance: ");const u=(0,_e.d)(1),c=(0,ct.j)(u,(0,Me.c)((0,_.l)(a,i),n,!0));return Qr(c,l,s)}});const ts=(0,l.op)({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zr.i.SUM_BY_NONZERO_WEIGHTS,s=(0,o.YT)(e,"labels","hingeLoss");const a=(0,o.YT)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,o.YT)(n,"weights","hingeLoss")),(0,d.O3)(s.shape,a.shape,"Error in hingeLoss: ");const l=(0,_e.d)(1);s=(0,ct.j)((0,_.l)((0,_e.d)(2),s),l);const u=(0,dn.V)((0,ct.j)(l,(0,_.l)(s,a)));return Qr(u,i,r)}});const ns=(0,l.op)({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr.i.SUM_BY_NONZERO_WEIGHTS;const i=(0,o.YT)(e,"labels","huberLoss"),l=(0,o.YT)(t,"predictions","huberLoss");let u=null;null!=n&&(u=(0,o.YT)(n,"weights","huberLoss")),(0,d.O3)(i.shape,l.shape,"Error in huberLoss: ");const c=(0,_e.d)(r),p=(0,s.t)((0,ct.j)(l,i)),f=Ct(p,c),m=(0,ct.j)(p,f),g=(0,h.W)((0,_.l)((0,_e.d)(.5),(0,Fe.E)(f)),(0,_.l)(c,m));return Qr(g,u,a)}});const rs=(0,l.op)({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,o.YT)(e,"labels","logLoss"),i=(0,o.YT)(t,"predictions","logLoss");let l=null;null!=n&&(l=(0,o.YT)(n,"weights","logLoss")),(0,d.O3)(a.shape,i.shape,"Error in logLoss: ");const u=(0,_e.d)(1),c=(0,_e.d)(r),p=(0,ot.H)((0,_.l)(a,st((0,h.W)(i,c)))),f=(0,_.l)((0,ct.j)(u,a),st((0,h.W)((0,ct.j)(u,i),c))),m=(0,ct.j)(p,f);return Qr(m,l,s)}});const ss=(0,l.op)({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zr.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,o.YT)(e,"labels","meanSquaredError"),a=(0,o.YT)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,o.YT)(n,"weights","meanSquaredError")),(0,d.O3)(s.shape,a.shape,"Error in meanSquaredError: ");const l=Ln(s,a);return Qr(l,i,r)}});const as=(0,l.op)({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr.i.SUM_BY_NONZERO_WEIGHTS,i=(0,o.YT)(e,"multiClassLabels","sigmoidCrossEntropy");const l=(0,o.YT)(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=(0,o.YT)(n,"weights","sigmoidCrossEntropy")),(0,d.O3)(i.shape,l.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,_e.d)(r),t=(0,_e.d)(1),n=(0,_e.d)(.5);i=(0,h.W)((0,_.l)(i,(0,ct.j)(t,e)),(0,_.l)(n,e))}const c=function(e,t){const n=(0,o.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,o.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.O3)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=(0,dn.V)(r),i=(0,_.l)(r,n),l=at(Pe((0,ot.H)((0,s.t)(r))));return(0,h.W)((0,ct.j)(a,i),l)}(i,l);return Qr(c,u,a)}});const is=(0,l.op)({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr.i.SUM_BY_NONZERO_WEIGHTS,a=(0,o.YT)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,o.YT)(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=(0,o.YT)(n,"weights","softmaxCrossEntropy")),(0,d.O3)(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,_e.d)(r),t=(0,_e.d)(1),n=(0,_e.d)(a.shape[1]);a=(0,h.W)((0,_.l)(a,(0,ct.j)(t,e)),(0,ye.y)(e,n))}const u=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,it._X)(((e,t,r)=>{const s=dt(t,[n],!0),a=(0,ct.j)((0,N.w)(t,"float32"),s);r([e,a]);const i=(0,ot.H)((0,_.l)(a,e));return{value:(0,Me.c)(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=(0,$e.SM)(e.shape,[n]);return[(0,_.l)((0,I.t)(e,a),(0,ct.j)((0,N.w)(r,"float32"),Pe(s))),(0,_.l)((0,I.t)(e,a),(0,ct.j)(Pe(s),(0,N.w)(r,"float32")))]}}}));return r(e,t)}(a,i);return Qr(u,l,s)}});const os={fft:_n,ifft:Dn,rfft:On,irfft:Fn},ls={hammingWindow:Sr,hannWindow:Ir,frame:Er,stft:$r},us={flipLeftRight:Ar,grayscaleToRGB:Rr,resizeNearestNeighbor:Ur,resizeBilinear:Vr,rgbToGrayscale:_r,rotateWithOffset:Dr,cropAndResize:Cr,nonMaxSuppression:Mr,nonMaxSuppressionAsync:Lr,nonMaxSuppressionWithScore:zr,nonMaxSuppressionWithScoreAsync:Pr,nonMaxSuppressionPadded:Br,nonMaxSuppressionPaddedAsync:Wr,threshold:Gr,transform:jr},cs={bandPart:Hr,gramSchmidt:qr,qr:Xr},hs={absoluteDifference:Jr,computeWeightedLoss:Qr,cosineDistance:es,hingeLoss:ts,huberLoss:ns,logLoss:rs,meanSquaredError:ss,sigmoidCrossEntropy:as,softmaxCrossEntropy:is},ds={sparseFillEmptyRows:(0,l.op)({sparseFillEmptyRows_:function(e,t,n,r){const s=(0,o.YT)(e,"indices","sparseFillEmptyRows","int32"),l=(0,o.YT)(t,"values","sparseFillEmptyRows"),u=(0,o.YT)(n,"denseShape","sparseFillEmptyRows","int32"),c=(0,o.YT)(r,"defaultValue","sparseFillEmptyRows",l.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==l.rank)throw new Error(`Values should be Tensor1D but received shape ${l.shape}`);if(1!==u.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${u.shape}`);if(0!==c.rank)throw new Error(`Default value should be a scalar but received shape ${c.shape}`);const h={indices:s,values:l,denseShape:u,defaultValue:c},d=a.T2.runKernel(i.C8s,h);return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}}),sparseReshape:(0,l.op)({sparseReshape_:function(e,t,n){const r=(0,o.YT)(e,"inputIndices","sparseReshape","int32"),s=(0,o.YT)(t,"inputShape","sparseReshape","int32"),l=(0,o.YT)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==l.rank)throw new Error(`New shape should be Tensor1D but received shape ${l.shape}`);const u={inputIndices:r,inputShape:s,newShape:l},c=a.T2.runKernel(i.BoJ,u);return{outputIndices:c[0],outputShape:c[1]}}}),sparseSegmentMean:(0,l.op)({sparseSegmentMean_:function(e,t,n){const r=(0,o.YT)(e,"data","sparseSegmentMean"),s=(0,o.YT)(t,"indices","sparseSegmentMean","int32"),l=(0,o.YT)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==l.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${l.shape}`);const u={data:r,indices:s,segmentIds:l};return a.T2.runKernel(i.L6G,u)}}),sparseSegmentSum:(0,l.op)({sparseSegmentSum_:function(e,t,n){const r=(0,o.YT)(e,"data","sparseSegmentSum"),s=(0,o.YT)(t,"indices","sparseSegmentSum","int32"),l=(0,o.YT)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==l.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${l.shape}`);const u={data:r,indices:s,segmentIds:l};return a.T2.runKernel(i.DvZ,u)}})},ps={stringNGrams:(0,l.op)({stringNGrams_:function(e,t,n,r,s,l,u,c){const h=(0,o.YT)(e,"data","stringNGrams","string");if("string"!==h.dtype)throw new Error("Data must be of datatype string");if(1!==h.shape.length)throw new Error(`Data must be a vector, saw: ${h.shape}`);const d=(0,o.YT)(t,"dataSplits","stringNGrams");if("int32"!==d.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:r,leftPad:s,rightPad:l,padWidth:u,preserveShortSequences:c},f={data:h,dataSplits:d},m=a.T2.runKernel(i.YAb,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}}),stringSplit:(0,l.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=(0,o.YT)(e,"input","stringSplit","string"),s=(0,o.YT)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const l={skipEmpty:n},u={input:r,delimiter:s},c=a.T2.runKernel(i.iW0,u,l);return{indices:c[0],values:c[1],shape:c[2]}}}),stringToHashBucketFast:(0,l.op)({stringToHashBucketFast_:function(e,t){const n=(0,o.YT)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return a.T2.runKernel(i.$jE,s,r)}}),staticRegexReplace:(0,l.op)({staticRegexReplace_:function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=(0,o.YT)(e,"input","staticRegexReplace","string"),l={pattern:t,rewrite:n,replaceGlobal:r};return a.T2.runKernel(i.GZp,{x:s},l)}})}},7587:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(2164),s=n(9554),a=n(8804),i=n(4148);const o=(0,n(7892).op)({pow_:function(e,t){let n=(0,i.YT)(e,"base","pow"),o=(0,i.YT)(t,"exp","pow");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.pyJ,l)}})},9855:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({prelu_:function(e,t){const n={x:(0,a.YT)(e,"x","prelu"),alpha:(0,a.YT)(t,"alpha","prelu")};return r.T2.runKernel(s.Ncv,n)}})},6574:(e,t,n)=>{"use strict";function r(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,{y:()=>r})},9477:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({real_:function(e){const t={input:(0,a.YT)(e,"input","real")};return r.T2.runKernel(s.LRy,t)}})},5251:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({relu_:function(e){const t={x:(0,a.YT)(e,"x","relu")};return r.T2.runKernel(s.fUj,t)}})},9721:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({relu6_:function(e){const t={x:(0,a.YT)(e,"x","relu6")};return r.T2.runKernel(s.P_L,t)}})},5583:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({reshape_:function(e,t){const n={x:(0,a.YT)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.T2.runKernel(s.R23,n,i)}})},1997:(e,t,n)=>{"use strict";n.d(t,{d:()=>a});var r=n(8977),s=n(9914);function a(e,t){if(((0,r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.Q)(e,[],[],t)}},4083:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>i,validateInput:()=>a,validateUpdateShape:()=>s});var r=n(1426);function s(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let i=0;i<s;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==e[i+r])throw new Error(a+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${e[i+s]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}s(n,t,e)}function i(e,t,n){const s=t.shape.length,a=s>1?t.shape[s-1]:1,i=n.length;let o=1;for(let r=a;r<i;++r)o*=n[r];const l=a<1?1:a;return{sliceRank:a,numUpdates:(0,r.Ze)(t.shape)/l,sliceSize:o,strides:[...(0,r.Ur)(n.slice(0,a)),1],outputSize:(0,r.Ze)(n)}}},4213:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({sigmoid_:function(e){const t={x:(0,a.YT)(e,"x","sigmoid","float32")};return r.T2.runKernel(s.vI1,t)}})},191:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({sqrt_:function(e){const t={x:(0,a.YT)(e,"x","sqrt","float32")};return r.T2.runKernel(s.dFH,t)}})},7738:(e,t,n)=>{"use strict";n.d(t,{E:()=>a});var r=n(2164),s=n(4148);const a=(0,n(7892).op)({square_:function(e){const t=(0,s.YT)(e,"x","square");return r.T2.runKernel("Square",{x:t},{})}})},319:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,a.YT)(e,"x","step")},i={alpha:t};return r.T2.runKernel(s.pnw,n,i)}})},7951:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var r=n(2164),s=n(9554),a=n(8804),i=n(4148);const o=(0,n(7892).op)({sub_:function(e,t){let n=(0,i.YT)(e,"a","sub"),o=(0,i.YT)(t,"b","sub");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(s.PbM,l)}})},7382:(e,t,n)=>{"use strict";n.d(t,{c:()=>o});var r=n(2164),s=n(9554),a=n(4148),i=n(7794);const o=(0,n(7892).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=(0,a.YT)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.w)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return r.T2.runKernel(s.WuN,l,u)}})},8032:(e,t,n)=>{"use strict";n.d(t,{O:()=>a});var r=n(4148),s=n(9914);function a(e,t,n){const a=(0,r.MZ)(e,n);return(0,s.Q)(e,t,a,n)}},5395:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(4148),s=n(1426),a=n(9914);function i(e,t,n){if((0,s.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,r.MZ)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,a.Q)(e,t,i,n)}},9914:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(2164),s=n(8075),a=n(1426),i=n(8977);function o(e,t,n,o){if(null==o)o=(0,a.X$)(e);else if("complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,s.Nw)(e)||(0,s.Oj)(e)){if("float32"!==o&&"int32"!==o)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return r.T2.backend.createTensorFromGPUData(e,t||n,o)}if(!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.SA)(t);const e=(0,a.Ze)(t),r=(0,a.Ze)(n);(0,a.vA)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==(0,a.Ze)(t.slice(s));(0,a.vA)(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0),r.T2.makeTensor(e,t,o)}},2154:(e,t,n)=>{"use strict";n.d(t,{m:()=>p});var r=n(2164),s=n(8046),a=n(9554),i=n(4148),o=n(1426),l=n(6149),u=n(1047),c=n(1011),h=n(7892),d=n(9477);const p=(0,h.op)({transpose_:function(e,t,n){const h=(0,i.YT)(e,"x","transpose");if(null==t&&(t=h.shape.map(((e,t)=>t)).reverse()),o.vA(h.rank===t.length,(()=>`Error in transpose: rank of input ${h.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.vA(e>=0&&e<h.rank,(()=>"All entries in 'perm' must be between 0 and "+(h.rank-1)+` but got ${t}`))})),h.rank<=1)return h.clone();const p={x:h},f={perm:t};return"complex64"===h.dtype?(0,s.DZ)((()=>{let e=(0,d.x)(h),t=(0,u.n)(h);return e=r.T2.runKernel(a.wx0,{x:e},f),t=r.T2.runKernel(a.wx0,{x:t},f),n&&(t=(0,c.H)(t)),(0,l.f)(e,t)})):r.T2.runKernel(a.wx0,p,f)}})},3290:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(2164),s=n(9554),a=n(4148);const i=(0,n(7892).op)({zerosLike_:function(e){const t={x:(0,a.YT)(e,"x","zerosLike")};return r.T2.runKernel(s.xJ3,t)}})},5767:(e,t,n)=>{"use strict";function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:()=>r})},9494:(e,t,n)=>{"use strict";n.d(t,{qY:()=>b,yl:()=>h,rT:()=>x,tp:()=>v,B4:()=>y,Q5:()=>g,qP:()=>m});var r=n(7926),s=n(1426);function a(e,t,n,r){const a=(0,s.Ur)(t),o=function(e,t,n,r){const a=(0,s.Ze)(t),o=r[r.length-1],l=new Array(o).fill(0),c=t.length,h="complex64"===n?u(e):e;if(c>1)for(let s=0;s<a/o;s++){const e=s*o;for(let t=0;t<o;t++)l[t]=Math.max(l[t],i(h[e+t],0,n).length)}return l}(e,t,n,a),c=t.length,h=l(e,t,n,a,o),d=["Tensor"];return r&&(d.push(`  dtype: ${n}`),d.push(`  rank: ${c}`),d.push(`  shape: [${t}]`),d.push("  values:")),d.push(h.map((e=>"    "+e)).join("\n")),d.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,s.Kg)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,s.av)(r,t)}function o(e){return 0===e?"false":"true"}function l(e,t,n,r,s){let a=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const c="complex64"===n?2:1,h=t[0],d=t.length;if(0===d){if("complex64"===n){return[i(u(e)[0],0,n)]}return"bool"===n?[o(e[0])]:[e[0].toString()]}if(1===d){if(h>20){const t=3*c;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((h-3)*c,h*c));return"complex64"===n&&(r=u(r),a=u(a)),["["+r.map(((e,t)=>i(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>i(e,s[h-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?u(e):Array.from(e)).map(((e,t)=>i(e,s[t],n))).join(", ")+"]"]}const p=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(h>20){for(let t=0;t<3;t++){const r=t*m,a=r+m;g.push(...l(e.slice(r,a),p,n,f,s,!1))}g.push("...");for(let t=h-3;t<h;t++){const r=t*m,a=r+m;g.push(...l(e.slice(r,a),p,n,f,s,t===h-1))}}else for(let i=0;i<h;i++){const t=i*m,r=t+m;g.push(...l(e.slice(t,r),p,n,f,s,i===h-1))}const y=2===d?",":"";g[0]="["+(h>0?g[0]+y:"");for(let i=1;i<g.length-1;i++)g[i]=" "+g[i]+y;let b=",\n";for(let i=2;i<d;i++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(a?"":b),g}function u(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(8977);class h{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=s.Ze(e),null!=n){const e=n.length;s.vA(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.Ab(t,this.size),this.strides=(0,s.Ur)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),s.vA(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const a=this.locToIndex(n);this.values[a]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const a of t){if(a<0||a>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let s=t[t.length-1];for(let a=0;a<t.length-1;++a)s+=this.strides[a]*t[a];return this.values[s]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,p=null,f=null;function m(e){d=e}function g(e){p=e}function y(e){f=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=s.Ze(e),this.strides=(0,s.Ur)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,s.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,s.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=d().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),d().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=d().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await d().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return a(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),d().makeVariable(this,e,t,n)}}function v(){return(0,r.m)("Tensor",(()=>b))}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),v();class x extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!s.r1(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);d().disposeTensor(this),this.dataId=e.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},8804:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>o,getTensorsInContainer:()=>u,isTensorInList:()=>l,makeTypesMatch:()=>i});var r=n(9494),s=n(8075),a=n(1426);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,s.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.vA)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function l(e,t){return t.some((t=>t.id===e.id))}function u(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.qY)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!==typeof s)return;var s;const a=e;for(const r in a){const e=a[r];n.has(e)||(n.add(e),c(e,t,n))}}},4148:(e,t,n)=>{"use strict";n.d(t,{MZ:()=>u,YT:()=>d,j1:()=>p});var r=n(2164),s=n(5399),a=n(9494),i=n(8075),o=n(8977),l=n(1426);function u(e,t){let n=e;if((0,o.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,i.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,i.Nw)(e))return[e.buffer.size/(null==t?4:(0,l.jv)(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.isTypedArray)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,s._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.isTypedArray)(e))return void(0,l.vA)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,l.vA)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,l.vA)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)c(e[s],r,n.concat(s))}function h(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,a.tp)())return h(s,e.dtype,t,n),e;let i=(0,l.X$)(e);if("string"!==i&&["bool","int32","float32"].indexOf(s)>=0&&(i=s),h(s,i,t,n),null==e||!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const c=u(e,i);(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const d="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0);return r.T2.makeTensor(d,c,i)}function p(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>d(e,`${t}[${s}]`,n,r)))}},8075:(e,t,n)=>{"use strict";var r,s,a,i,o;n.d(t,{Nw:()=>d,Oj:()=>h,Tu:()=>u,ch:()=>c,rg:()=>r}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const l={float32:i,int32:s,bool:a,complex64:o};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function c(e){return u(e,"int32")}function h(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function d(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},8977:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>a.r1,arraysEqualWithNull:()=>a.e_,assert:()=>a.vA,assertNonNegativeIntegerDimensions:()=>a.SA,assertNonNull:()=>a.HO,assertShapesMatch:()=>a.O3,bytesFromStringArray:()=>a.SL,bytesPerElement:()=>a.jv,checkConversionForErrors:()=>a.nd,clamp:()=>a.qE,computeStrides:()=>a.Ur,convertBackendValuesAndArrayBuffer:()=>a.o2,createScalarValue:()=>x,createShuffledIndices:()=>a.P8,decodeString:()=>S,distSquared:()=>a.oO,encodeString:()=>N,fetch:()=>T,fingerPrint64:()=>v,flatten:()=>E,getArrayFromDType:()=>a.Ab,getTypedArrayFromDType:()=>a.ce,hasEncodingLoss:()=>a.BE,hexToLong:()=>l,indexToLoc:()=>a._k,inferDtype:()=>a.X$,inferFromImplicitShape:()=>a.XT,isBoolean:()=>a.Lm,isFunction:()=>a.Tn,isInt:()=>a.E6,isNumber:()=>a.Et,isPromise:()=>a.yL,isScalarShape:()=>a.Sf,isString:()=>a.Kg,isTypedArray:()=>I,isValidDtype:()=>a.xn,locToIndex:()=>a.sX,makeOnesTypedArray:()=>a.FZ,makeZerosNestedTypedArray:()=>a.c7,makeZerosTypedArray:()=>a.Ty,nearestDivisor:()=>a.lK,nearestLargerEven:()=>a.eV,now:()=>k,parseAxisParam:()=>a.Y6,randUniform:()=>a.so,repeatedTry:()=>a._q,rightPad:()=>a.av,shuffle:()=>a.k4,shuffleCombo:()=>a.a0,sizeFromShape:()=>a.Ze,sizeToSquarishShape:()=>a.gS,squeezeShape:()=>a.gx,sum:()=>a.cz,swap:()=>a.wg,tanh:()=>a.ym,toNestedArray:()=>a.yw,toTypedArray:()=>w});var r=n(5399),s=n(5767),a=n(1426),i=n(7353);const o=n.n(i)()||i;function l(e){return o.fromString(e,!0,16)}const u=l("c3a5c85c97cb3127"),c=l("b492b66fbe98f273"),h=l("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function f(e,t){return p(e,t,8)}function m(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:l("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function b(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=g(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(g(s,44)),[s.add(r),a.add(i)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,r)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=h.add(2*t),r=f(e,0).add(h),s=f(e,t-8);return y(g(s,37).mul(n).add(r),g(r,25).add(s).mul(n),n)}if(t>=4){const n=h.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return d(h.mul(n).xor(u.mul(r))).mul(h)}return h}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=h.add(2*t),r=f(e,0).mul(c),s=f(e,8),a=f(e,t-8).mul(n),i=f(e,t-16).mul(h);return y(g(r.add(s),43).add(g(a,30)).add(i),r.add(g(s.add(h),18)).add(a),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=h.add(2*t),r=f(e,0).mul(h),s=f(e,8),a=f(e,t-8).mul(n),i=f(e,t-16).mul(h),o=g(r.add(s),43).add(g(a,30)).add(i),l=y(o,r.add(g(s.add(h),18)).add(a),n),u=f(e,16).mul(n),c=f(e,24),d=o.add(f(e,t-32)).mul(n),p=l.add(f(e,t-24)).mul(n);return y(g(u.add(c),43).add(g(d,30)).add(p),u.add(g(c.add(r),18)).add(d),n)}(e,t);let r=n,s=n.mul(c).add(113),a=d(s.mul(h).add(113)).mul(h),i=[o.UZERO,o.UZERO],l=[o.UZERO,o.UZERO];r=r.mul(h).add(f(e,0));let p=0;const v=64*(t-1>>6),x=v+(t-1&63)-63;do{r=g(r.add(s).add(i[0]).add(f(e,p+8)),37).mul(c),s=g(s.add(i[1]).add(f(e,p+48)),42).mul(c),r=r.xor(l[1]),s=s.add(i[0]).add(f(e,p+40)),a=g(a.add(l[0]),33).mul(c),i=b(e,p,i[1].mul(c),r.add(l[0])),l=b(e,p+32,a.add(l[1]),s.add(f(e,p+16))),[a,r]=[r,a],p+=64}while(p!==v);const w=c.add(a.and(255).shl(1));return p=x,l[0]=l[0].add(t-1&63),i[0]=i[0].add(l[0]),l[0]=l[0].add(i[0]),r=g(r.add(s).add(i[0]).add(f(e,p+8)),37).mul(w),s=g(s.add(i[1]).add(f(e,p+48)),42).mul(w),r=r.xor(l[1].mul(9)),s=s.add(i[0].mul(9).add(f(e,p+40))),a=g(a.add(l[0]),33).mul(w),i=b(e,p,i[1].mul(w),r.add(l[0])),l=b(e,p+32,a.add(l[1]),s.add(f(e,p+16))),[a,r]=[r,a],y(y(i[0],l[0],w).add(d(s).mul(u)).add(a),y(i[1],l[1],w).add(r),w)}function x(e,t){return"string"===t?N(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=E(e)),(0,r._K)().getBool("DEBUG")&&a.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function k(){return(0,r._K)().platform.now()}function T(e,t){return(0,r._K)().platform.fetch(e,t)}function N(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,r._K)().platform.encode(e,t)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,r._K)().platform.decode(e,t)}function I(e){return null!=(0,r._K)().platform.isTypedArray?(0,r._K)().platform.isTypedArray(e):(0,s.Y)(e)}function E(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||a.yL(e)||null==e||I(e)&&n)t.push(e);else if(Array.isArray(e)||I(e))for(let r=0;r<e.length;++r)E(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)E(e[s],t,n)}return t}},1426:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function s(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2===0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function l(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function h(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function d(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";h(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){h(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const l=t(i);null!=n&&i>=n?a():null!=r?r(o,l):setTimeout(o,l)};o()}))}function N(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function S(e,t){const n=t.length;return h((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),h(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function I(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:S(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function E(e,t){return $(e,t)}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function C(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function _(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function F(e){return"string"===typeof e||e instanceof String}function M(e){return"boolean"===typeof e}function O(e){return"number"===typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":O(e)?"float32":F(e)?"string":M(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function B(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=W(e+t*o,i,n,r)}return s}function V(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function U(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function G(e,t){const n=j(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function j(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function q(e){e.forEach((t=>{h(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function Y(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function X(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{Ab:()=>$,BE:()=>R,E6:()=>b,Et:()=>O,FZ:()=>G,HO:()=>p,Kg:()=>F,Lm:()=>M,O3:()=>d,P8:()=>w,SA:()=>q,SL:()=>D,Sf:()=>m,Tn:()=>z,Ty:()=>j,Ur:()=>B,X$:()=>L,XT:()=>N,Y6:()=>S,Ze:()=>f,_k:()=>Y,_q:()=>T,a0:()=>s,av:()=>k,c7:()=>H,ce:()=>E,cz:()=>l,eV:()=>i,e_:()=>g,gS:()=>x,gx:()=>I,jv:()=>_,k4:()=>r,lK:()=>P,nd:()=>C,o2:()=>U,oO:()=>c,qE:()=>a,r1:()=>y,sX:()=>K,so:()=>u,vA:()=>h,wg:()=>o,xn:()=>A,yL:()=>X,ym:()=>v,yw:()=>V})},9815:(e,t,n)=>{var r=n(2308),s=n(1637),a=n(6399),i=n(8547),o=n(8681),l=n(4461),u=n(2809);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},2308:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},4461:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},1637:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},8681:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},8547:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},6399:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},2809:function(e,t,n){var r;!function(s,a,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),p=new f(r),v=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(b(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(v,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=p;try{o=n(3857)}catch(v){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)},7877:(e,t,n)=>{var r=n(7754),s=n(4911),a=n(9129),i=n(5937),o=n(6239),l=n(1999),u=n(1247);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},7754:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n=function(){var e=4022871197,t=function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},1999:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},4911:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},6239:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},5937:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},9129:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},1247:(e,t,n)=>{var r;!function(s,a){var i,o=this,l=256,u="random",c=a.pow(l,6),h=a.pow(2,52),d=2*h,p=255;function f(e,t,n){var r=[],p=b(y((t=1==t?{entropy:!0}:t||{}).entropy?[e,v(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),v(e)}catch(r){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,v(s)]}}():e,3),r),f=new m(r),x=function(){for(var e=f.g(6),t=c,n=0;e<h;)e=(e+n)*l,t*=l,n=f.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|f.g(4)},x.quick=function(){return f.g(4)/4294967296},x.double=x,b(v(f.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,f),e.state=function(){return g(f,{})}),n?(a[u]=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function m(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=p&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=p&s+1],n=n*l+i[p&(i[s]=i[a=p&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(y(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[p&s]=p&(n^=19*t[p&s])+r.charCodeAt(s++);return v(t)}function v(e){return String.fromCharCode.apply(0,e)}if(a["seed"+u]=f,b(a.random(),s),e.exports){e.exports=f;try{i=n(3053)}catch(x){}}else void 0===(r=function(){return f}.call(t,n,t,e))||(e.exports=r)}([],Math)},7353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(S){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return T;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));a=a.mul(d).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"===typeof e?o(e,t):"string"===typeof e?c(e,t):l(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var v=i(1,!0);n.UONE=v;var x=i(-1);n.NEG_ONE=x;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var T=l(0,-2147483648,!1);n.MIN_VALUE=T;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(T)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(T)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1===(1&this.low)},N.isEven=function(){return 0===(1&this.low)},N.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(T)?T:this.not().add(b)},N.neg=N.negate,N.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=s+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},N.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(T))return e.isOdd()?T:g;if(e.eq(T))return this.isOdd()?T:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=i*p)>>>16,y+=(b+=a*p)>>>16,b&=65535,y+=(b+=i*d)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*p+s*d+a*c+i*u,l((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;a=y}else{if(this.eq(T))return e.eq(b)||e.eq(x)?T:e.eq(T)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(T))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=b),a=a.add(d),s=s.sub(p)}return a},N.div=N.divide,N.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return l(~this.low,~this.high,this.unsigned)},N.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},2123:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(s){return!1}}()?Object.assign:function(e,s){for(var a,i,o=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var u in a=Object(arguments[l]))n.call(a,u)&&(o[u]=a[u]);if(t){i=t(a);for(var c=0;c<i.length;c++)r.call(a,i[c])&&(o[i[c]]=a[i[c]])}}return o}},2730:(e,t,n)=>{"use strict";var r=n(5043),s=n(2123),a=n(8853);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));function o(e,t,n,r,s,a,i,o,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var l=!1,u=null,c=!1,h=null,d={onError:function(e){l=!0,u=e}};function p(e,t,n,r,s,a,i,c,h){l=!1,u=null,o.apply(d,arguments)}var f=null,m=null,g=null;function y(e,t,n){var r=e.type||"unknown-event";e.currentTarget=g(n),function(e,t,n,r,s,a,o,d,f){if(p.apply(this,arguments),l){if(!l)throw Error(i(198));var m=u;l=!1,u=null,c||(c=!0,h=m)}}(r,t,void 0,e),e.currentTarget=null}var b=null,v={};function x(){if(b)for(var e in v){var t=v[e],n=b.indexOf(e);if(!(-1<n))throw Error(i(96,e));if(!k[n]){if(!t.extractEvents)throw Error(i(97,e));for(var r in k[n]=t,n=t.eventTypes){var s=void 0,a=n[r],o=t,l=r;if(T.hasOwnProperty(l))throw Error(i(99,l));T[l]=a;var u=a.phasedRegistrationNames;if(u){for(s in u)u.hasOwnProperty(s)&&w(u[s],o,l);s=!0}else a.registrationName?(w(a.registrationName,o,l),s=!0):s=!1;if(!s)throw Error(i(98,r,e))}}}}function w(e,t,n){if(N[e])throw Error(i(100,e));N[e]=t,S[e]=t.eventTypes[n].dependencies}var k=[],T={},N={},S={};function I(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!v.hasOwnProperty(t)||v[t]!==r){if(v[t])throw Error(i(102,t));v[t]=r,n=!0}}n&&x()}var E=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),$=null,C=null,A=null;function R(e){if(e=m(e)){if("function"!==typeof $)throw Error(i(280));var t=e.stateNode;t&&(t=f(t),$(e.stateNode,e.type,t))}}function _(e){C?A?A.push(e):A=[e]:C=e}function D(){if(C){var e=C,t=A;if(A=C=null,R(e),t)for(e=0;e<t.length;e++)R(t[e])}}function F(e,t){return e(t)}function M(e,t,n,r,s){return e(t,n,r,s)}function O(){}var L=F,z=!1,P=!1;function B(){null===C&&null===A||(O(),D())}function W(e,t,n){if(P)return e(t,n);P=!0;try{return L(e,t,n)}finally{P=!1,B()}}var V=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,U=Object.prototype.hasOwnProperty,G={},j={};function H(e,t,n,r,s,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=s,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){q[e]=new H(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];q[t]=new H(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){q[e]=new H(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){q[e]=new H(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){q[e]=new H(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){q[e]=new H(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){q[e]=new H(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){q[e]=new H(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){q[e]=new H(e,5,!1,e.toLowerCase(),null,!1)}));var K=/[\-:]([a-z])/g;function Y(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(K,Y);q[t]=new H(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(K,Y);q[t]=new H(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(K,Y);q[t]=new H(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){q[e]=new H(e,1,!1,e.toLowerCase(),null,!1)})),q.xlinkHref=new H("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){q[e]=new H(e,1,!1,e.toLowerCase(),null,!0)}));var X=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Z(e,t,n,r){var s=q.hasOwnProperty(t)?q[t]:null;(null!==s?0===s.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,s,r)&&(n=null),r||null===s?function(e){return!!U.call(j,e)||!U.call(G,e)&&(V.test(e)?j[e]=!0:(G[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):s.mustUseProperty?e[s.propertyName]=null===n?3!==s.type&&"":n:(t=s.attributeName,r=s.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(s=s.type)||4===s&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}X.hasOwnProperty("ReactCurrentDispatcher")||(X.ReactCurrentDispatcher={current:null}),X.hasOwnProperty("ReactCurrentBatchConfig")||(X.ReactCurrentBatchConfig={suspense:null});var Q=/^(.*)[\\\/]/,J="function"===typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,se=J?Symbol.for("react.profiler"):60114,ae=J?Symbol.for("react.provider"):60109,ie=J?Symbol.for("react.context"):60110,oe=J?Symbol.for("react.concurrent_mode"):60111,le=J?Symbol.for("react.forward_ref"):60112,ue=J?Symbol.for("react.suspense"):60113,ce=J?Symbol.for("react.suspense_list"):60120,he=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,fe="function"===typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=fe&&e[fe]||e["@@iterator"])?e:null}function ge(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case se:return"Profiler";case re:return"StrictMode";case ue:return"Suspense";case ce:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case ie:return"Context.Consumer";case ae:return"Context.Provider";case le:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case he:return ge(e.type);case pe:return ge(e.render);case de:if(e=1===e._status?e._result:null)return ge(e)}return null}function ye(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,s=e._debugSource,a=ge(e.type);n=null,r&&(n=ge(r.type)),r=a,a="",s?a=" (at "+s.fileName.replace(Q,"")+":"+s.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}function be(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function ve(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function xe(e){e._valueTracker||(e._valueTracker=function(e){var t=ve(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var s=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function we(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ve(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function ke(e,t){var n=t.checked;return s({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Te(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=be(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ne(e,t){null!=(t=t.checked)&&Z(e,"checked",t,!1)}function Se(e,t){Ne(e,t);var n=be(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ee(e,t.type,be(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ie(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ee(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function $e(e,t){return e=s({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Ce(e,t,n,r){if(e=e.options,t){t={};for(var s=0;s<n.length;s++)t["$"+n[s]]=!0;for(n=0;n<e.length;n++)s=t.hasOwnProperty("$"+e[n].value),e[n].selected!==s&&(e[n].selected=s),s&&r&&(e[n].defaultSelected=!0)}else{for(n=""+be(n),t=null,s=0;s<e.length;s++){if(e[s].value===n)return e[s].selected=!0,void(r&&(e[s].defaultSelected=!0));null!==t||e[s].disabled||(t=e[s])}null!==t&&(t.selected=!0)}}function Ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return s({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:be(n)}}function _e(e,t){var n=be(t.value),r=be(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function De(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Fe="http://www.w3.org/1999/xhtml",Me="http://www.w3.org/2000/svg";function Oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ze,Pe,Be=(Pe=function(e,t){if(e.namespaceURI!==Me||"innerHTML"in e)e.innerHTML=t;else{for((ze=ze||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ze.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return Pe(e,t)}))}:Pe);function We(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Ve(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ue={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Ge={},je={};function He(e){if(Ge[e])return Ge[e];if(!Ue[e])return e;var t,n=Ue[e];for(t in n)if(n.hasOwnProperty(t)&&t in je)return Ge[e]=n[t];return e}E&&(je=document.createElement("div").style,"AnimationEvent"in window||(delete Ue.animationend.animation,delete Ue.animationiteration.animation,delete Ue.animationstart.animation),"TransitionEvent"in window||delete Ue.transitionend.transition);var qe=He("animationend"),Ke=He("animationiteration"),Ye=He("animationstart"),Xe=He("transitionend"),Ze="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Qe=new("function"===typeof WeakMap?WeakMap:Map);function Je(e){var t=Qe.get(e);return void 0===t&&(t=new Map,Qe.set(e,t)),t}function et(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function tt(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function nt(e){if(et(e)!==e)throw Error(i(188))}function rt(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=et(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var s=n.return;if(null===s)break;var a=s.alternate;if(null===a){if(null!==(r=s.return)){n=r;continue}break}if(s.child===a.child){for(a=s.child;a;){if(a===n)return nt(s),e;if(a===r)return nt(s),t;a=a.sibling}throw Error(i(188))}if(n.return!==r.return)n=s,r=a;else{for(var o=!1,l=s.child;l;){if(l===n){o=!0,n=s,r=a;break}if(l===r){o=!0,r=s,n=a;break}l=l.sibling}if(!o){for(l=a.child;l;){if(l===n){o=!0,n=a,r=s;break}if(l===r){o=!0,r=a,n=s;break}l=l.sibling}if(!o)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function st(e,t){if(null==t)throw Error(i(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function at(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function ot(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)y(e,t[r],n[r]);else t&&y(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(it=st(it,e)),e=it,it=null,e){if(at(e,ot),it)throw Error(i(95));if(c)throw e=h,c=!1,h=null,e}}function ut(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!E)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"===typeof t[e]),t}var ht=[];function dt(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ht.length&&ht.push(e)}function pt(e,t,n,r){if(ht.length){var s=ht.pop();return s.topLevelType=e,s.eventSystemFlags=r,s.nativeEvent=t,s.targetInst=n,s}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function ft(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Dn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var s=ut(e.nativeEvent);r=e.topLevelType;var a=e.nativeEvent,i=e.eventSystemFlags;0===n&&(i|=64);for(var o=null,l=0;l<k.length;l++){var u=k[l];u&&(u=u.extractEvents(r,t,a,s,i))&&(o=st(o,u))}lt(o)}}function mt(e,t,n){if(!n.has(e)){switch(e){case"scroll":Yt(t,"scroll",!0);break;case"focus":case"blur":Yt(t,"focus",!0),Yt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&Yt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ze.indexOf(e)&&Kt(e,t)}n.set(e,null)}}var gt,yt,bt,vt=!1,xt=[],wt=null,kt=null,Tt=null,Nt=new Map,St=new Map,It=[],Et="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),$t="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Ct(e,t,n,r,s){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:s,container:r}}function At(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":kt=null;break;case"mouseover":case"mouseout":Tt=null;break;case"pointerover":case"pointerout":Nt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":St.delete(t.pointerId)}}function Rt(e,t,n,r,s,a){return null===e||e.nativeEvent!==a?(e=Ct(t,n,r,s,a),null!==t&&(null!==(t=Fn(t))&&yt(t)),e):(e.eventSystemFlags|=r,e)}function _t(e){var t=Dn(e.target);if(null!==t){var n=et(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=tt(n)))return e.blockedOn=t,void a.unstable_runWithPriority(e.priority,(function(){bt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Dt(e){if(null!==e.blockedOn)return!1;var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Fn(t);return null!==n&&yt(n),e.blockedOn=t,!1}return!0}function Ft(e,t,n){Dt(e)&&n.delete(t)}function Mt(){for(vt=!1;0<xt.length;){var e=xt[0];if(null!==e.blockedOn){null!==(e=Fn(e.blockedOn))&&gt(e);break}var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:xt.shift()}null!==wt&&Dt(wt)&&(wt=null),null!==kt&&Dt(kt)&&(kt=null),null!==Tt&&Dt(Tt)&&(Tt=null),Nt.forEach(Ft),St.forEach(Ft)}function Ot(e,t){e.blockedOn===t&&(e.blockedOn=null,vt||(vt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Mt)))}function Lt(e){function t(t){return Ot(t,e)}if(0<xt.length){Ot(xt[0],e);for(var n=1;n<xt.length;n++){var r=xt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&Ot(wt,e),null!==kt&&Ot(kt,e),null!==Tt&&Ot(Tt,e),Nt.forEach(t),St.forEach(t),n=0;n<It.length;n++)(r=It[n]).blockedOn===e&&(r.blockedOn=null);for(;0<It.length&&null===(n=It[0]).blockedOn;)_t(n),null===n.blockedOn&&It.shift()}var zt={},Pt=new Map,Bt=new Map,Wt=["abort","abort",qe,"animationEnd",Ke,"animationIteration",Ye,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Xe,"transitionEnd","waiting","waiting"];function Vt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],s=e[n+1],a="on"+(s[0].toUpperCase()+s.slice(1));a={phasedRegistrationNames:{bubbled:a,captured:a+"Capture"},dependencies:[r],eventPriority:t},Bt.set(r,t),Pt.set(r,a),zt[s]=a}}Vt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Vt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Vt(Wt,2);for(var Ut="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Gt=0;Gt<Ut.length;Gt++)Bt.set(Ut[Gt],0);var jt=a.unstable_UserBlockingPriority,Ht=a.unstable_runWithPriority,qt=!0;function Kt(e,t){Yt(t,e,!1)}function Yt(e,t,n){var r=Bt.get(t);switch(void 0===r?2:r){case 0:r=Xt.bind(null,t,1,e);break;case 1:r=Zt.bind(null,t,1,e);break;default:r=Qt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Xt(e,t,n,r){z||O();var s=Qt,a=z;z=!0;try{M(s,e,t,n,r)}finally{(z=a)||B()}}function Zt(e,t,n,r){Ht(jt,Qt.bind(null,e,t,n,r))}function Qt(e,t,n,r){if(qt)if(0<xt.length&&-1<Et.indexOf(e))e=Ct(null,e,t,n,r),xt.push(e);else{var s=Jt(e,t,n,r);if(null===s)At(e,r);else if(-1<Et.indexOf(e))e=Ct(s,e,t,n,r),xt.push(e);else if(!function(e,t,n,r,s){switch(t){case"focus":return wt=Rt(wt,e,t,n,r,s),!0;case"dragenter":return kt=Rt(kt,e,t,n,r,s),!0;case"mouseover":return Tt=Rt(Tt,e,t,n,r,s),!0;case"pointerover":var a=s.pointerId;return Nt.set(a,Rt(Nt.get(a)||null,e,t,n,r,s)),!0;case"gotpointercapture":return a=s.pointerId,St.set(a,Rt(St.get(a)||null,e,t,n,r,s)),!0}return!1}(s,e,t,n,r)){At(e,r),e=pt(e,r,null,t);try{W(ft,e)}finally{dt(e)}}}}function Jt(e,t,n,r){if(null!==(n=Dn(n=ut(r)))){var s=et(n);if(null===s)n=null;else{var a=s.tag;if(13===a){if(null!==(n=tt(s)))return n;n=null}else if(3===a){if(s.stateNode.hydrate)return 3===s.tag?s.stateNode.containerInfo:null;n=null}else s!==n&&(n=null)}}e=pt(e,r,n,t);try{W(ft,e)}finally{dt(e)}return null}var en={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},tn=["Webkit","ms","Moz","O"];function nn(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||en.hasOwnProperty(e)&&en[e]?(""+t).trim():t+"px"}function rn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),s=nn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,s):e[n]=s}}Object.keys(en).forEach((function(e){tn.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),en[t]=en[e]}))}));var sn=s({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(e,t){if(t){if(sn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln=Fe;function un(e,t){var n=Je(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)mt(t[r],e,n)}function cn(){}function hn(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function dn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pn(e,t){var n,r=dn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dn(r)}}function fn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function mn(){for(var e=window,t=hn();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=hn((e=t.contentWindow).document)}return t}function gn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var yn="$",bn="/$",vn="$?",xn="$!",wn=null,kn=null;function Tn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Nn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Sn="function"===typeof setTimeout?setTimeout:void 0,In="function"===typeof clearTimeout?clearTimeout:void 0;function En(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function $n(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if(n===yn||n===xn||n===vn){if(0===t)return e;t--}else n===bn&&t++}e=e.previousSibling}return null}var Cn=Math.random().toString(36).slice(2),An="__reactInternalInstance$"+Cn,Rn="__reactEventHandlers$"+Cn,_n="__reactContainere$"+Cn;function Dn(e){var t=e[An];if(t)return t;for(var n=e.parentNode;n;){if(t=n[_n]||n[An]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=$n(e);null!==e;){if(n=e[An])return n;e=$n(e)}return t}n=(e=n).parentNode}return null}function Fn(e){return!(e=e[An]||e[_n])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Mn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function On(e){return e[Rn]||null}function Ln(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function zn(e,t){var n=e.stateNode;if(!n)return null;var r=f(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(i(231,t,typeof n));return n}function Pn(e,t,n){(t=zn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=st(n._dispatchListeners,t),n._dispatchInstances=st(n._dispatchInstances,e))}function Bn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Ln(t);for(t=n.length;0<t--;)Pn(n[t],"captured",e);for(t=0;t<n.length;t++)Pn(n[t],"bubbled",e)}}function Wn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=zn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=st(n._dispatchListeners,t),n._dispatchInstances=st(n._dispatchInstances,e))}function Vn(e){e&&e.dispatchConfig.registrationName&&Wn(e._targetInst,null,e)}function Un(e){at(e,Bn)}var Gn=null,jn=null,Hn=null;function qn(){if(Hn)return Hn;var e,t,n=jn,r=n.length,s="value"in Gn?Gn.value:Gn.textContent,a=s.length;for(e=0;e<r&&n[e]===s[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===s[a-t];t++);return Hn=s.slice(e,1<t?1-t:void 0)}function Kn(){return!0}function Yn(){return!1}function Xn(e,t,n,r){for(var s in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(s)&&((t=e[s])?this[s]=t(n):"target"===s?this.target=r:this[s]=n[s]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Kn:Yn,this.isPropagationStopped=Yn,this}function Zn(e,t,n,r){if(this.eventPool.length){var s=this.eventPool.pop();return this.call(s,e,t,n,r),s}return new this(e,t,n,r)}function Qn(e){if(!(e instanceof this))throw Error(i(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Jn(e){e.eventPool=[],e.getPooled=Zn,e.release=Qn}s(Xn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Kn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Kn)},persist:function(){this.isPersistent=Kn},isPersistent:Yn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Yn,this._dispatchInstances=this._dispatchListeners=null}}),Xn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Xn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return s(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=s({},r.Interface,e),n.extend=r.extend,Jn(n),n},Jn(Xn);var er=Xn.extend({data:null}),tr=Xn.extend({data:null}),nr=[9,13,27,32],rr=E&&"CompositionEvent"in window,sr=null;E&&"documentMode"in document&&(sr=document.documentMode);var ar=E&&"TextEvent"in window&&!sr,ir=E&&(!rr||sr&&8<sr&&11>=sr),or=String.fromCharCode(32),lr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ur=!1;function cr(e,t){switch(e){case"keyup":return-1!==nr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function hr(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var dr=!1;var pr={eventTypes:lr,extractEvents:function(e,t,n,r){var s;if(rr)e:{switch(e){case"compositionstart":var a=lr.compositionStart;break e;case"compositionend":a=lr.compositionEnd;break e;case"compositionupdate":a=lr.compositionUpdate;break e}a=void 0}else dr?cr(e,n)&&(a=lr.compositionEnd):"keydown"===e&&229===n.keyCode&&(a=lr.compositionStart);return a?(ir&&"ko"!==n.locale&&(dr||a!==lr.compositionStart?a===lr.compositionEnd&&dr&&(s=qn()):(jn="value"in(Gn=r)?Gn.value:Gn.textContent,dr=!0)),a=er.getPooled(a,t,n,r),s?a.data=s:null!==(s=hr(n))&&(a.data=s),Un(a),s=a):s=null,(e=ar?function(e,t){switch(e){case"compositionend":return hr(t);case"keypress":return 32!==t.which?null:(ur=!0,or);case"textInput":return(e=t.data)===or&&ur?null:e;default:return null}}(e,n):function(e,t){if(dr)return"compositionend"===e||!rr&&cr(e,t)?(e=qn(),Hn=jn=Gn=null,dr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ir&&"ko"!==t.locale?null:t.data}}(e,n))?((t=tr.getPooled(lr.beforeInput,t,n,r)).data=e,Un(t)):t=null,null===s?t:null===t?s:[s,t]}},fr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function mr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!fr[e.type]:"textarea"===t}var gr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function yr(e,t,n){return(e=Xn.getPooled(gr.change,e,t,n)).type="change",_(n),Un(e),e}var br=null,vr=null;function xr(e){lt(e)}function wr(e){if(we(Mn(e)))return e}function kr(e,t){if("change"===e)return t}var Tr=!1;function Nr(){br&&(br.detachEvent("onpropertychange",Sr),vr=br=null)}function Sr(e){if("value"===e.propertyName&&wr(vr))if(e=yr(vr,e,ut(e)),z)lt(e);else{z=!0;try{F(xr,e)}finally{z=!1,B()}}}function Ir(e,t,n){"focus"===e?(Nr(),vr=n,(br=t).attachEvent("onpropertychange",Sr)):"blur"===e&&Nr()}function Er(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return wr(vr)}function $r(e,t){if("click"===e)return wr(t)}function Cr(e,t){if("input"===e||"change"===e)return wr(t)}E&&(Tr=ct("input")&&(!document.documentMode||9<document.documentMode));var Ar={eventTypes:gr,_isInputEventSupported:Tr,extractEvents:function(e,t,n,r){var s=t?Mn(t):window,a=s.nodeName&&s.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===s.type)var i=kr;else if(mr(s))if(Tr)i=Cr;else{i=Er;var o=Ir}else(a=s.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(i=$r);if(i&&(i=i(e,t)))return yr(i,n,r);o&&o(e,s,t),"blur"===e&&(e=s._wrapperState)&&e.controlled&&"number"===s.type&&Ee(s,"number",s.value)}},Rr=Xn.extend({view:null,detail:null}),_r={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Dr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=_r[e])&&!!t[e]}function Fr(){return Dr}var Mr=0,Or=0,Lr=!1,zr=!1,Pr=Rr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Fr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Mr;return Mr=e.screenX,Lr?"mousemove"===e.type?e.screenX-t:0:(Lr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Or;return Or=e.screenY,zr?"mousemove"===e.type?e.screenY-t:0:(zr=!0,0)}}),Br=Pr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Wr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Vr={eventTypes:Wr,extractEvents:function(e,t,n,r,s){var a="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(a&&0===(32&s)&&(n.relatedTarget||n.fromElement)||!i&&!a)return null;(a=r.window===r?r:(a=r.ownerDocument)?a.defaultView||a.parentWindow:window,i)?(i=t,null!==(t=(t=n.relatedTarget||n.toElement)?Dn(t):null)&&(t!==et(t)||5!==t.tag&&6!==t.tag)&&(t=null)):i=null;if(i===t)return null;if("mouseout"===e||"mouseover"===e)var o=Pr,l=Wr.mouseLeave,u=Wr.mouseEnter,c="mouse";else"pointerout"!==e&&"pointerover"!==e||(o=Br,l=Wr.pointerLeave,u=Wr.pointerEnter,c="pointer");if(e=null==i?a:Mn(i),a=null==t?a:Mn(t),(l=o.getPooled(l,i,n,r)).type=c+"leave",l.target=e,l.relatedTarget=a,(n=o.getPooled(u,t,n,r)).type=c+"enter",n.target=a,n.relatedTarget=e,c=t,(r=i)&&c)e:{for(u=c,i=0,e=o=r;e;e=Ln(e))i++;for(e=0,t=u;t;t=Ln(t))e++;for(;0<i-e;)o=Ln(o),i--;for(;0<e-i;)u=Ln(u),e--;for(;i--;){if(o===u||o===u.alternate)break e;o=Ln(o),u=Ln(u)}o=null}else o=null;for(u=o,o=[];r&&r!==u&&(null===(i=r.alternate)||i!==u);)o.push(r),r=Ln(r);for(r=[];c&&c!==u&&(null===(i=c.alternate)||i!==u);)r.push(c),c=Ln(c);for(c=0;c<o.length;c++)Wn(o[c],"bubbled",l);for(c=r.length;0<c--;)Wn(r[c],"captured",n);return 0===(64&s)?[l]:[l,n]}};var Ur="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},Gr=Object.prototype.hasOwnProperty;function jr(e,t){if(Ur(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Gr.call(t,n[r])||!Ur(e[n[r]],t[n[r]]))return!1;return!0}var Hr=E&&"documentMode"in document&&11>=document.documentMode,qr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Kr=null,Yr=null,Xr=null,Zr=!1;function Qr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Zr||null==Kr||Kr!==hn(n)?null:("selectionStart"in(n=Kr)&&gn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Xr&&jr(Xr,n)?null:(Xr=n,(e=Xn.getPooled(qr.select,Yr,e,t)).type="select",e.target=Kr,Un(e),e))}var Jr={eventTypes:qr,extractEvents:function(e,t,n,r,s,a){if(!(a=!(s=a||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{s=Je(s),a=S.onSelect;for(var i=0;i<a.length;i++)if(!s.has(a[i])){s=!1;break e}s=!0}a=!s}if(a)return null;switch(s=t?Mn(t):window,e){case"focus":(mr(s)||"true"===s.contentEditable)&&(Kr=s,Yr=t,Xr=null);break;case"blur":Xr=Yr=Kr=null;break;case"mousedown":Zr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Zr=!1,Qr(n,r);case"selectionchange":if(Hr)break;case"keydown":case"keyup":return Qr(n,r)}return null}},es=Xn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),ts=Xn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ns=Rr.extend({relatedTarget:null});function rs(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var ss={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},as={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},is=Rr.extend({key:function(e){if(e.key){var t=ss[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rs(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?as[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Fr,charCode:function(e){return"keypress"===e.type?rs(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rs(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),os=Pr.extend({dataTransfer:null}),ls=Rr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Fr}),us=Xn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),cs=Pr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),hs={eventTypes:zt,extractEvents:function(e,t,n,r){var s=Pt.get(e);if(!s)return null;switch(e){case"keypress":if(0===rs(n))return null;case"keydown":case"keyup":e=is;break;case"blur":case"focus":e=ns;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Pr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=os;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ls;break;case qe:case Ke:case Ye:e=es;break;case Xe:e=us;break;case"scroll":e=Rr;break;case"wheel":e=cs;break;case"copy":case"cut":case"paste":e=ts;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Br;break;default:e=Xn}return Un(t=e.getPooled(s,t,n,r)),t}};if(b)throw Error(i(101));b=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x(),f=On,m=Fn,g=Mn,I({SimpleEventPlugin:hs,EnterLeaveEventPlugin:Vr,ChangeEventPlugin:Ar,SelectEventPlugin:Jr,BeforeInputEventPlugin:pr});var ds=[],ps=-1;function fs(e){0>ps||(e.current=ds[ps],ds[ps]=null,ps--)}function ms(e,t){ps++,ds[ps]=e.current,e.current=t}var gs={},ys={current:gs},bs={current:!1},vs=gs;function xs(e,t){var n=e.type.contextTypes;if(!n)return gs;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var s,a={};for(s in n)a[s]=t[s];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function ws(e){return null!==(e=e.childContextTypes)&&void 0!==e}function ks(){fs(bs),fs(ys)}function Ts(e,t,n){if(ys.current!==gs)throw Error(i(168));ms(ys,t),ms(bs,n)}function Ns(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(i(108,ge(t)||"Unknown",a));return s({},n,{},r)}function Ss(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||gs,vs=ys.current,ms(ys,e),ms(bs,bs.current),!0}function Is(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=Ns(e,t,vs),r.__reactInternalMemoizedMergedChildContext=e,fs(bs),fs(ys),ms(ys,e)):fs(bs),ms(bs,n)}var Es=a.unstable_runWithPriority,$s=a.unstable_scheduleCallback,Cs=a.unstable_cancelCallback,As=a.unstable_requestPaint,Rs=a.unstable_now,_s=a.unstable_getCurrentPriorityLevel,Ds=a.unstable_ImmediatePriority,Fs=a.unstable_UserBlockingPriority,Ms=a.unstable_NormalPriority,Os=a.unstable_LowPriority,Ls=a.unstable_IdlePriority,zs={},Ps=a.unstable_shouldYield,Bs=void 0!==As?As:function(){},Ws=null,Vs=null,Us=!1,Gs=Rs(),js=1e4>Gs?Rs:function(){return Rs()-Gs};function Hs(){switch(_s()){case Ds:return 99;case Fs:return 98;case Ms:return 97;case Os:return 96;case Ls:return 95;default:throw Error(i(332))}}function qs(e){switch(e){case 99:return Ds;case 98:return Fs;case 97:return Ms;case 96:return Os;case 95:return Ls;default:throw Error(i(332))}}function Ks(e,t){return e=qs(e),Es(e,t)}function Ys(e,t,n){return e=qs(e),$s(e,t,n)}function Xs(e){return null===Ws?(Ws=[e],Vs=$s(Ds,Qs)):Ws.push(e),zs}function Zs(){if(null!==Vs){var e=Vs;Vs=null,Cs(e)}Qs()}function Qs(){if(!Us&&null!==Ws){Us=!0;var e=0;try{var t=Ws;Ks(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ws=null}catch(n){throw null!==Ws&&(Ws=Ws.slice(e+1)),$s(Ds,Zs),n}finally{Us=!1}}}function Js(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function ea(e,t){if(e&&e.defaultProps)for(var n in t=s({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ta={current:null},na=null,ra=null,sa=null;function aa(){sa=ra=na=null}function ia(e){var t=ta.current;fs(ta),e.type._context._currentValue=t}function oa(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function la(e,t){na=e,sa=ra=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Mi=!0),e.firstContext=null)}function ua(e,t){if(sa!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(sa=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ra){if(null===na)throw Error(i(308));ra=t,na.dependencies={expirationTime:0,firstContext:t,responders:null}}else ra=ra.next=t;return e._currentValue}var ca=!1;function ha(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function da(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function pa(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function fa(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ma(e,t){var n=e.alternate;null!==n&&da(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function ga(e,t,n,r){var a=e.updateQueue;ca=!1;var i=a.baseQueue,o=a.shared.pending;if(null!==o){if(null!==i){var l=i.next;i.next=o.next,o.next=l}i=o,a.shared.pending=null,null!==(l=e.alternate)&&(null!==(l=l.updateQueue)&&(l.baseQueue=o))}if(null!==i){l=i.next;var u=a.baseState,c=0,h=null,d=null,p=null;if(null!==l)for(var f=l;;){if((o=f.expirationTime)<r){var m={expirationTime:f.expirationTime,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null};null===p?(d=p=m,h=u):p=p.next=m,o>c&&(c=o)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null}),kl(o,f.suspenseConfig);e:{var g=e,y=f;switch(o=t,m=n,y.tag){case 1:if("function"===typeof(g=y.payload)){u=g.call(m,u,o);break e}u=g;break e;case 3:g.effectTag=-4097&g.effectTag|64;case 0:if(null===(o="function"===typeof(g=y.payload)?g.call(m,u,o):g)||void 0===o)break e;u=s({},u,o);break e;case 2:ca=!0}}null!==f.callback&&(e.effectTag|=32,null===(o=a.effects)?a.effects=[f]:o.push(f))}if(null===(f=f.next)||f===l){if(null===(o=a.shared.pending))break;f=i.next=o.next,o.next=l,a.baseQueue=i=o,a.shared.pending=null}}null===p?h=u:p.next=d,a.baseState=h,a.baseQueue=p,Tl(c),e.expirationTime=c,e.memoizedState=u}}function ya(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],s=r.callback;if(null!==s){if(r.callback=null,r=s,s=n,"function"!==typeof r)throw Error(i(191,r));r.call(s)}}}var ba=X.ReactCurrentBatchConfig,va=(new r.Component).refs;function xa(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:s({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var wa={isMounted:function(e){return!!(e=e._reactInternalFiber)&&et(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=ul(),s=ba.suspense;(s=pa(r=cl(r,e,s),s)).payload=t,void 0!==n&&null!==n&&(s.callback=n),fa(e,s),hl(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=ul(),s=ba.suspense;(s=pa(r=cl(r,e,s),s)).tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),fa(e,s),hl(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=ul(),r=ba.suspense;(r=pa(n=cl(n,e,r),r)).tag=2,void 0!==t&&null!==t&&(r.callback=t),fa(e,r),hl(e,n)}};function ka(e,t,n,r,s,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!jr(n,r)||!jr(s,a))}function Ta(e,t,n){var r=!1,s=gs,a=t.contextType;return"object"===typeof a&&null!==a?a=ua(a):(s=ws(t)?vs:ys.current,a=(r=null!==(r=t.contextTypes)&&void 0!==r)?xs(e,s):gs),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=wa,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=a),t}function Na(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&wa.enqueueReplaceState(t,t.state,null)}function Sa(e,t,n,r){var s=e.stateNode;s.props=n,s.state=e.memoizedState,s.refs=va,ha(e);var a=t.contextType;"object"===typeof a&&null!==a?s.context=ua(a):(a=ws(t)?vs:ys.current,s.context=xs(e,a)),ga(e,n,s,r),s.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(xa(e,t,a,n),s.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof s.getSnapshotBeforeUpdate||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||(t=s.state,"function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount(),t!==s.state&&wa.enqueueReplaceState(s,s.state,null),ga(e,n,s,r),s.state=e.memoizedState),"function"===typeof s.componentDidMount&&(e.effectTag|=4)}var Ia=Array.isArray;function Ea(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var s=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===s?t.ref:(t=function(e){var t=r.refs;t===va&&(t=r.refs={}),null===e?delete t[s]:t[s]=e},t._stringRef=s,t)}if("string"!==typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function $a(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ca(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function s(e,t){return(e=Ul(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function o(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Hl(n,e.mode,r)).return=e,t):((t=s(t,n)).return=e,t)}function u(e,t,n,r){return null!==t&&t.elementType===n.type?((r=s(t,n.props)).ref=Ea(e,t,n),r.return=e,r):((r=Gl(n.type,n.key,n.props,null,e.mode,r)).ref=Ea(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=ql(n,e.mode,r)).return=e,t):((t=s(t,n.children||[])).return=e,t)}function h(e,t,n,r,a){return null===t||7!==t.tag?((t=jl(n,e.mode,r,a)).return=e,t):((t=s(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t||"number"===typeof t)return(t=Hl(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Gl(t.type,t.key,t.props,null,e.mode,n)).ref=Ea(e,null,t),n.return=e,n;case te:return(t=ql(t,e.mode,n)).return=e,t}if(Ia(t)||me(t))return(t=jl(t,e.mode,n,null)).return=e,t;$a(e,t)}return null}function p(e,t,n,r){var s=null!==t?t.key:null;if("string"===typeof n||"number"===typeof n)return null!==s?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===s?n.type===ne?h(e,t,n.props.children,r,s):u(e,t,n,r):null;case te:return n.key===s?c(e,t,n,r):null}if(Ia(n)||me(n))return null!==s?null:h(e,t,n,r,null);$a(e,n)}return null}function f(e,t,n,r,s){if("string"===typeof r||"number"===typeof r)return l(t,e=e.get(n)||null,""+r,s);if("object"===typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?h(t,e,r.props.children,s,r.key):u(t,e,r,s);case te:return c(t,e=e.get(null===r.key?n:r.key)||null,r,s)}if(Ia(r)||me(r))return h(t,e=e.get(n)||null,r,s,null);$a(t,r)}return null}function m(s,i,o,l){for(var u=null,c=null,h=i,m=i=0,g=null;null!==h&&m<o.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=p(s,h,o[m],l);if(null===y){null===h&&(h=g);break}e&&h&&null===y.alternate&&t(s,h),i=a(y,i,m),null===c?u=y:c.sibling=y,c=y,h=g}if(m===o.length)return n(s,h),u;if(null===h){for(;m<o.length;m++)null!==(h=d(s,o[m],l))&&(i=a(h,i,m),null===c?u=h:c.sibling=h,c=h);return u}for(h=r(s,h);m<o.length;m++)null!==(g=f(h,s,m,o[m],l))&&(e&&null!==g.alternate&&h.delete(null===g.key?m:g.key),i=a(g,i,m),null===c?u=g:c.sibling=g,c=g);return e&&h.forEach((function(e){return t(s,e)})),u}function g(s,o,l,u){var c=me(l);if("function"!==typeof c)throw Error(i(150));if(null==(l=c.call(l)))throw Error(i(151));for(var h=c=null,m=o,g=o=0,y=null,b=l.next();null!==m&&!b.done;g++,b=l.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=p(s,m,b.value,u);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(s,m),o=a(v,o,g),null===h?c=v:h.sibling=v,h=v,m=y}if(b.done)return n(s,m),c;if(null===m){for(;!b.done;g++,b=l.next())null!==(b=d(s,b.value,u))&&(o=a(b,o,g),null===h?c=b:h.sibling=b,h=b);return c}for(m=r(s,m);!b.done;g++,b=l.next())null!==(b=f(m,s,g,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),o=a(b,o,g),null===h?c=b:h.sibling=b,h=b);return e&&m.forEach((function(e){return t(s,e)})),c}return function(e,r,a,l){var u="object"===typeof a&&null!==a&&a.type===ne&&null===a.key;u&&(a=a.props.children);var c="object"===typeof a&&null!==a;if(c)switch(a.$$typeof){case ee:e:{for(c=a.key,u=r;null!==u;){if(u.key===c){if(7===u.tag){if(a.type===ne){n(e,u.sibling),(r=s(u,a.props.children)).return=e,e=r;break e}}else if(u.elementType===a.type){n(e,u.sibling),(r=s(u,a.props)).ref=Ea(e,u,a),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}a.type===ne?((r=jl(a.props.children,e.mode,l,a.key)).return=e,e=r):((l=Gl(a.type,a.key,a.props,null,e.mode,l)).ref=Ea(e,r,a),l.return=e,e=l)}return o(e);case te:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=s(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=ql(a,e.mode,l)).return=e,e=r}return o(e)}if("string"===typeof a||"number"===typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=s(r,a)).return=e,e=r):(n(e,r),(r=Hl(a,e.mode,l)).return=e,e=r),o(e);if(Ia(a))return m(e,r,a,l);if(me(a))return g(e,r,a,l);if(c&&$a(e,a),"undefined"===typeof a&&!u)switch(e.tag){case 1:case 0:throw e=e.type,Error(i(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Aa=Ca(!0),Ra=Ca(!1),_a={},Da={current:_a},Fa={current:_a},Ma={current:_a};function Oa(e){if(e===_a)throw Error(i(174));return e}function La(e,t){switch(ms(Ma,t),ms(Fa,e),ms(Da,_a),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Le(null,"");break;default:t=Le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}fs(Da),ms(Da,t)}function za(){fs(Da),fs(Fa),fs(Ma)}function Pa(e){Oa(Ma.current);var t=Oa(Da.current),n=Le(t,e.type);t!==n&&(ms(Fa,e),ms(Da,n))}function Ba(e){Fa.current===e&&(fs(Da),fs(Fa))}var Wa={current:0};function Va(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===vn||n.data===xn))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ua(e,t){return{responder:e,props:t}}var Ga=X.ReactCurrentDispatcher,ja=X.ReactCurrentBatchConfig,Ha=0,qa=null,Ka=null,Ya=null,Xa=!1;function Za(){throw Error(i(321))}function Qa(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Ur(e[n],t[n]))return!1;return!0}function Ja(e,t,n,r,s,a){if(Ha=a,qa=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Ga.current=null===e||null===e.memoizedState?ki:Ti,e=n(r,s),t.expirationTime===Ha){a=0;do{if(t.expirationTime=0,!(25>a))throw Error(i(301));a+=1,Ya=Ka=null,t.updateQueue=null,Ga.current=Ni,e=n(r,s)}while(t.expirationTime===Ha)}if(Ga.current=wi,t=null!==Ka&&null!==Ka.next,Ha=0,Ya=Ka=qa=null,Xa=!1,t)throw Error(i(300));return e}function ei(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ya?qa.memoizedState=Ya=e:Ya=Ya.next=e,Ya}function ti(){if(null===Ka){var e=qa.alternate;e=null!==e?e.memoizedState:null}else e=Ka.next;var t=null===Ya?qa.memoizedState:Ya.next;if(null!==t)Ya=t,Ka=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Ka=e).memoizedState,baseState:Ka.baseState,baseQueue:Ka.baseQueue,queue:Ka.queue,next:null},null===Ya?qa.memoizedState=Ya=e:Ya=Ya.next=e}return Ya}function ni(e,t){return"function"===typeof t?t(e):t}function ri(e){var t=ti(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Ka,s=r.baseQueue,a=n.pending;if(null!==a){if(null!==s){var o=s.next;s.next=a.next,a.next=o}r.baseQueue=s=a,n.pending=null}if(null!==s){s=s.next,r=r.baseState;var l=o=a=null,u=s;do{var c=u.expirationTime;if(c<Ha){var h={expirationTime:u.expirationTime,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===l?(o=l=h,a=r):l=l.next=h,c>qa.expirationTime&&(qa.expirationTime=c,Tl(c))}else null!==l&&(l=l.next={expirationTime:1073741823,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),kl(c,u.suspenseConfig),r=u.eagerReducer===e?u.eagerState:e(r,u.action);u=u.next}while(null!==u&&u!==s);null===l?a=r:l.next=o,Ur(r,t.memoizedState)||(Mi=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=l,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function si(e){var t=ti(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,s=n.pending,a=t.memoizedState;if(null!==s){n.pending=null;var o=s=s.next;do{a=e(a,o.action),o=o.next}while(o!==s);Ur(a,t.memoizedState)||(Mi=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function ai(e){var t=ei();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ni,lastRenderedState:e}).dispatch=xi.bind(null,qa,e),[t.memoizedState,e]}function ii(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=qa.updateQueue)?(t={lastEffect:null},qa.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function oi(){return ti().memoizedState}function li(e,t,n,r){var s=ei();qa.effectTag|=e,s.memoizedState=ii(1|t,n,void 0,void 0===r?null:r)}function ui(e,t,n,r){var s=ti();r=void 0===r?null:r;var a=void 0;if(null!==Ka){var i=Ka.memoizedState;if(a=i.destroy,null!==r&&Qa(r,i.deps))return void ii(t,n,a,r)}qa.effectTag|=e,s.memoizedState=ii(1|t,n,a,r)}function ci(e,t){return li(516,4,e,t)}function hi(e,t){return ui(516,4,e,t)}function di(e,t){return ui(4,2,e,t)}function pi(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function fi(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,ui(4,2,pi.bind(null,t,e),n)}function mi(){}function gi(e,t){return ei().memoizedState=[e,void 0===t?null:t],e}function yi(e,t){var n=ti();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Qa(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function bi(e,t){var n=ti();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Qa(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function vi(e,t,n){var r=Hs();Ks(98>r?98:r,(function(){e(!0)})),Ks(97<r?97:r,(function(){var r=ja.suspense;ja.suspense=void 0===t?null:t;try{e(!1),n()}finally{ja.suspense=r}}))}function xi(e,t,n){var r=ul(),s=ba.suspense;s={expirationTime:r=cl(r,e,s),suspenseConfig:s,action:n,eagerReducer:null,eagerState:null,next:null};var a=t.pending;if(null===a?s.next=s:(s.next=a.next,a.next=s),t.pending=s,a=e.alternate,e===qa||null!==a&&a===qa)Xa=!0,s.expirationTime=Ha,qa.expirationTime=Ha;else{if(0===e.expirationTime&&(null===a||0===a.expirationTime)&&null!==(a=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=a(i,n);if(s.eagerReducer=a,s.eagerState=o,Ur(o,i))return}catch(l){}hl(e,r)}}var wi={readContext:ua,useCallback:Za,useContext:Za,useEffect:Za,useImperativeHandle:Za,useLayoutEffect:Za,useMemo:Za,useReducer:Za,useRef:Za,useState:Za,useDebugValue:Za,useResponder:Za,useDeferredValue:Za,useTransition:Za},ki={readContext:ua,useCallback:gi,useContext:ua,useEffect:ci,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,li(4,2,pi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return li(4,2,e,t)},useMemo:function(e,t){var n=ei();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ei();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=xi.bind(null,qa,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},ei().memoizedState=e},useState:ai,useDebugValue:mi,useResponder:Ua,useDeferredValue:function(e,t){var n=ai(e),r=n[0],s=n[1];return ci((function(){var n=ja.suspense;ja.suspense=void 0===t?null:t;try{s(e)}finally{ja.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ai(!1),n=t[0];return t=t[1],[gi(vi.bind(null,t,e),[t,e]),n]}},Ti={readContext:ua,useCallback:yi,useContext:ua,useEffect:hi,useImperativeHandle:fi,useLayoutEffect:di,useMemo:bi,useReducer:ri,useRef:oi,useState:function(){return ri(ni)},useDebugValue:mi,useResponder:Ua,useDeferredValue:function(e,t){var n=ri(ni),r=n[0],s=n[1];return hi((function(){var n=ja.suspense;ja.suspense=void 0===t?null:t;try{s(e)}finally{ja.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ri(ni),n=t[0];return t=t[1],[yi(vi.bind(null,t,e),[t,e]),n]}},Ni={readContext:ua,useCallback:yi,useContext:ua,useEffect:hi,useImperativeHandle:fi,useLayoutEffect:di,useMemo:bi,useReducer:si,useRef:oi,useState:function(){return si(ni)},useDebugValue:mi,useResponder:Ua,useDeferredValue:function(e,t){var n=si(ni),r=n[0],s=n[1];return hi((function(){var n=ja.suspense;ja.suspense=void 0===t?null:t;try{s(e)}finally{ja.suspense=n}}),[e,t]),r},useTransition:function(e){var t=si(ni),n=t[0];return t=t[1],[yi(vi.bind(null,t,e),[t,e]),n]}},Si=null,Ii=null,Ei=!1;function $i(e,t){var n=Wl(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ci(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Ai(e){if(Ei){var t=Ii;if(t){var n=t;if(!Ci(e,t)){if(!(t=En(n.nextSibling))||!Ci(e,t))return e.effectTag=-1025&e.effectTag|2,Ei=!1,void(Si=e);$i(Si,n)}Si=e,Ii=En(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Ei=!1,Si=e}}function Ri(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Si=e}function _i(e){if(e!==Si)return!1;if(!Ei)return Ri(e),Ei=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Nn(t,e.memoizedProps))for(t=Ii;t;)$i(e,t),t=En(t.nextSibling);if(Ri(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if(n===bn){if(0===t){Ii=En(e.nextSibling);break e}t--}else n!==yn&&n!==xn&&n!==vn||t++}e=e.nextSibling}Ii=null}}else Ii=Si?En(e.stateNode.nextSibling):null;return!0}function Di(){Ii=Si=null,Ei=!1}var Fi=X.ReactCurrentOwner,Mi=!1;function Oi(e,t,n,r){t.child=null===e?Ra(t,null,n,r):Aa(t,e.child,n,r)}function Li(e,t,n,r,s){n=n.render;var a=t.ref;return la(t,s),r=Ja(e,t,n,r,a,s),null===e||Mi?(t.effectTag|=1,Oi(e,t,r,s),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=s&&(e.expirationTime=0),eo(e,t,s))}function zi(e,t,n,r,s,a){if(null===e){var i=n.type;return"function"!==typeof i||Vl(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Gl(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Pi(e,t,i,r,s,a))}return i=e.child,s<a&&(s=i.memoizedProps,(n=null!==(n=n.compare)?n:jr)(s,r)&&e.ref===t.ref)?eo(e,t,a):(t.effectTag|=1,(e=Ul(i,r)).ref=t.ref,e.return=t,t.child=e)}function Pi(e,t,n,r,s,a){return null!==e&&jr(e.memoizedProps,r)&&e.ref===t.ref&&(Mi=!1,s<a)?(t.expirationTime=e.expirationTime,eo(e,t,a)):Wi(e,t,n,r,a)}function Bi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Wi(e,t,n,r,s){var a=ws(n)?vs:ys.current;return a=xs(t,a),la(t,s),n=Ja(e,t,n,r,a,s),null===e||Mi?(t.effectTag|=1,Oi(e,t,n,s),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=s&&(e.expirationTime=0),eo(e,t,s))}function Vi(e,t,n,r,s){if(ws(n)){var a=!0;Ss(t)}else a=!1;if(la(t,s),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Ta(t,n,r),Sa(t,n,r,s),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var l=i.context,u=n.contextType;"object"===typeof u&&null!==u?u=ua(u):u=xs(t,u=ws(n)?vs:ys.current);var c=n.getDerivedStateFromProps,h="function"===typeof c||"function"===typeof i.getSnapshotBeforeUpdate;h||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==r||l!==u)&&Na(t,i,r,u),ca=!1;var d=t.memoizedState;i.state=d,ga(t,r,i,s),l=t.memoizedState,o!==r||d!==l||bs.current||ca?("function"===typeof c&&(xa(t,n,c,r),l=t.memoizedState),(o=ca||ka(t,n,o,r,d,l,u))?(h||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.effectTag|=4)):("function"===typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=u,r=o):("function"===typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,da(e,t),o=t.memoizedProps,i.props=t.type===t.elementType?o:ea(t.type,o),l=i.context,"object"===typeof(u=n.contextType)&&null!==u?u=ua(u):u=xs(t,u=ws(n)?vs:ys.current),(h="function"===typeof(c=n.getDerivedStateFromProps)||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==r||l!==u)&&Na(t,i,r,u),ca=!1,l=t.memoizedState,i.state=l,ga(t,r,i,s),d=t.memoizedState,o!==r||l!==d||bs.current||ca?("function"===typeof c&&(xa(t,n,c,r),d=t.memoizedState),(c=ca||ka(t,n,o,r,l,d,u))?(h||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,u),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,u)),"function"===typeof i.componentDidUpdate&&(t.effectTag|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),i.props=r,i.state=d,i.context=u,r=c):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return Ui(e,t,n,r,a,s)}function Ui(e,t,n,r,s,a){Bi(e,t);var i=0!==(64&t.effectTag);if(!r&&!i)return s&&Is(t,n,!1),eo(e,t,a);r=t.stateNode,Fi.current=t;var o=i&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=Aa(t,e.child,null,a),t.child=Aa(t,null,o,a)):Oi(e,t,o,a),t.memoizedState=r.state,s&&Is(t,n,!0),t.child}function Gi(e){var t=e.stateNode;t.pendingContext?Ts(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ts(0,t.context,!1),La(e,t.containerInfo)}var ji,Hi,qi,Ki,Yi={dehydrated:null,retryTime:0};function Xi(e,t,n){var r,s=t.mode,a=t.pendingProps,i=Wa.current,o=!1;if((r=0!==(64&t.effectTag))||(r=0!==(2&i)&&(null===e||null!==e.memoizedState)),r?(o=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(i|=1),ms(Wa,1&i),null===e){if(void 0!==a.fallback&&Ai(t),o){if(o=a.fallback,(a=jl(null,s,0,null)).return=t,0===(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=jl(o,s,n,null)).return=t,a.sibling=n,t.memoizedState=Yi,t.child=a,n}return s=a.children,t.memoizedState=null,t.child=Ra(t,null,s,n)}if(null!==e.memoizedState){if(s=(e=e.child).sibling,o){if(a=a.fallback,(n=Ul(e,e.pendingProps)).return=t,0===(2&t.mode)&&(o=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=o;null!==o;)o.return=n,o=o.sibling;return(s=Ul(s,a)).return=t,n.sibling=s,n.childExpirationTime=0,t.memoizedState=Yi,t.child=n,s}return n=Aa(t,e.child,a.children,n),t.memoizedState=null,t.child=n}if(e=e.child,o){if(o=a.fallback,(a=jl(null,s,0,null)).return=t,a.child=e,null!==e&&(e.return=a),0===(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=jl(o,s,n,null)).return=t,a.sibling=n,n.effectTag|=2,a.childExpirationTime=0,t.memoizedState=Yi,t.child=a,n}return t.memoizedState=null,t.child=Aa(t,e,a.children,n)}function Zi(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),oa(e.return,t)}function Qi(e,t,n,r,s,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:s,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailExpiration=0,i.tailMode=s,i.lastEffect=a)}function Ji(e,t,n){var r=t.pendingProps,s=r.revealOrder,a=r.tail;if(Oi(e,t,r.children,n),0!==(2&(r=Wa.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!==(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Zi(e,n);else if(19===e.tag)Zi(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ms(Wa,r),0===(2&t.mode))t.memoizedState=null;else switch(s){case"forwards":for(n=t.child,s=null;null!==n;)null!==(e=n.alternate)&&null===Va(e)&&(s=n),n=n.sibling;null===(n=s)?(s=t.child,t.child=null):(s=n.sibling,n.sibling=null),Qi(t,!1,s,n,a,t.lastEffect);break;case"backwards":for(n=null,s=t.child,t.child=null;null!==s;){if(null!==(e=s.alternate)&&null===Va(e)){t.child=s;break}e=s.sibling,s.sibling=n,n=s,s=e}Qi(t,!0,n,null,a,t.lastEffect);break;case"together":Qi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function eo(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&Tl(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Ul(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ul(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function to(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function no(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return ws(t.type)&&ks(),null;case 3:return za(),fs(bs),fs(ys),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!_i(t)||(t.effectTag|=4),Hi(t),null;case 5:Ba(t),n=Oa(Ma.current);var a=t.type;if(null!==e&&null!=t.stateNode)qi(e,t,a,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=Oa(Da.current),_i(t)){r=t.stateNode,a=t.type;var o=t.memoizedProps;switch(r[An]=t,r[Rn]=o,a){case"iframe":case"object":case"embed":Kt("load",r);break;case"video":case"audio":for(e=0;e<Ze.length;e++)Kt(Ze[e],r);break;case"source":Kt("error",r);break;case"img":case"image":case"link":Kt("error",r),Kt("load",r);break;case"form":Kt("reset",r),Kt("submit",r);break;case"details":Kt("toggle",r);break;case"input":Te(r,o),Kt("invalid",r),un(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Kt("invalid",r),un(n,"onChange");break;case"textarea":Re(r,o),Kt("invalid",r),un(n,"onChange")}for(var l in an(a,o),e=null,o)if(o.hasOwnProperty(l)){var u=o[l];"children"===l?"string"===typeof u?r.textContent!==u&&(e=["children",u]):"number"===typeof u&&r.textContent!==""+u&&(e=["children",""+u]):N.hasOwnProperty(l)&&null!=u&&un(n,l)}switch(a){case"input":xe(r),Ie(r,o,!0);break;case"textarea":xe(r),De(r);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(l=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Oe(a)),e===ln?"script"===a?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=l.createElement(a,{is:r.is}):(e=l.createElement(a),"select"===a&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,a),e[An]=t,e[Rn]=r,ji(e,t,!1,!1),t.stateNode=e,l=on(a,r),a){case"iframe":case"object":case"embed":Kt("load",e),u=r;break;case"video":case"audio":for(u=0;u<Ze.length;u++)Kt(Ze[u],e);u=r;break;case"source":Kt("error",e),u=r;break;case"img":case"image":case"link":Kt("error",e),Kt("load",e),u=r;break;case"form":Kt("reset",e),Kt("submit",e),u=r;break;case"details":Kt("toggle",e),u=r;break;case"input":Te(e,r),u=ke(e,r),Kt("invalid",e),un(n,"onChange");break;case"option":u=$e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},u=s({},r,{value:void 0}),Kt("invalid",e),un(n,"onChange");break;case"textarea":Re(e,r),u=Ae(e,r),Kt("invalid",e),un(n,"onChange");break;default:u=r}an(a,u);var c=u;for(o in c)if(c.hasOwnProperty(o)){var h=c[o];"style"===o?rn(e,h):"dangerouslySetInnerHTML"===o?null!=(h=h?h.__html:void 0)&&Be(e,h):"children"===o?"string"===typeof h?("textarea"!==a||""!==h)&&We(e,h):"number"===typeof h&&We(e,""+h):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(N.hasOwnProperty(o)?null!=h&&un(n,o):null!=h&&Z(e,o,h,l))}switch(a){case"input":xe(e),Ie(e,r,!1);break;case"textarea":xe(e),De(e);break;case"option":null!=r.value&&e.setAttribute("value",""+be(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Ce(e,!!r.multiple,n,!1):null!=r.defaultValue&&Ce(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof u.onClick&&(e.onclick=cn)}Tn(a,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Ki(e,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(i(166));n=Oa(Ma.current),Oa(Da.current),_i(t)?(n=t.stateNode,r=t.memoizedProps,n[An]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[An]=t,t.stateNode=n)}return null;case 13:return fs(Wa),r=t.memoizedState,0!==(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&_i(t):(r=null!==(a=e.memoizedState),n||null===a||null!==(a=e.child.sibling)&&(null!==(o=t.firstEffect)?(t.firstEffect=a,a.nextEffect=o):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),n&&!r&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&Wa.current)?Uo===Do&&(Uo=Oo):(Uo!==Do&&Uo!==Oo||(Uo=Lo),0!==Ko&&null!==Bo&&(Xl(Bo,Vo),Zl(Bo,Ko)))),(n||r)&&(t.effectTag|=4),null);case 4:return za(),Hi(t),null;case 10:return ia(t),null;case 19:if(fs(Wa),null===(r=t.memoizedState))return null;if(a=0!==(64&t.effectTag),null===(o=r.rendering)){if(a)to(r,!1);else if(Uo!==Do||null!==e&&0!==(64&e.effectTag))for(o=t.child;null!==o;){if(null!==(e=Va(o))){for(t.effectTag|=64,to(r,!1),null!==(a=e.updateQueue)&&(t.updateQueue=a,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)o=n,(a=r).effectTag&=2,a.nextEffect=null,a.firstEffect=null,a.lastEffect=null,null===(e=a.alternate)?(a.childExpirationTime=0,a.expirationTime=o,a.child=null,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null):(a.childExpirationTime=e.childExpirationTime,a.expirationTime=e.expirationTime,a.child=e.child,a.memoizedProps=e.memoizedProps,a.memoizedState=e.memoizedState,a.updateQueue=e.updateQueue,o=e.dependencies,a.dependencies=null===o?null:{expirationTime:o.expirationTime,firstContext:o.firstContext,responders:o.responders}),r=r.sibling;return ms(Wa,1&Wa.current|2),t.child}o=o.sibling}}else{if(!a)if(null!==(e=Va(o))){if(t.effectTag|=64,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),to(r,!0),null===r.tail&&"hidden"===r.tailMode&&!o.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*js()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,a=!0,to(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(o.sibling=t.child,t.child=o):(null!==(n=r.last)?n.sibling=o:t.child=o,r.last=o)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=js()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=js(),n.sibling=null,t=Wa.current,ms(Wa,a?1&t|2:1&t),n):null}throw Error(i(156,t.tag))}function ro(e){switch(e.tag){case 1:ws(e.type)&&ks();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(za(),fs(bs),fs(ys),0!==(64&(t=e.effectTag)))throw Error(i(285));return e.effectTag=-4097&t|64,e;case 5:return Ba(e),null;case 13:return fs(Wa),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return fs(Wa),null;case 4:return za(),null;case 10:return ia(e),null;default:return null}}function so(e,t){return{value:e,source:t,stack:ye(t)}}ji=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Hi=function(){},qi=function(e,t,n,r,a){var i=e.memoizedProps;if(i!==r){var o,l,u=t.stateNode;switch(Oa(Da.current),e=null,n){case"input":i=ke(u,i),r=ke(u,r),e=[];break;case"option":i=$e(u,i),r=$e(u,r),e=[];break;case"select":i=s({},i,{value:void 0}),r=s({},r,{value:void 0}),e=[];break;case"textarea":i=Ae(u,i),r=Ae(u,r),e=[];break;default:"function"!==typeof i.onClick&&"function"===typeof r.onClick&&(u.onclick=cn)}for(o in an(n,r),n=null,i)if(!r.hasOwnProperty(o)&&i.hasOwnProperty(o)&&null!=i[o])if("style"===o)for(l in u=i[o])u.hasOwnProperty(l)&&(n||(n={}),n[l]="");else"dangerouslySetInnerHTML"!==o&&"children"!==o&&"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(N.hasOwnProperty(o)?e||(e=[]):(e=e||[]).push(o,null));for(o in r){var c=r[o];if(u=null!=i?i[o]:void 0,r.hasOwnProperty(o)&&c!==u&&(null!=c||null!=u))if("style"===o)if(u){for(l in u)!u.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in c)c.hasOwnProperty(l)&&u[l]!==c[l]&&(n||(n={}),n[l]=c[l])}else n||(e||(e=[]),e.push(o,n)),n=c;else"dangerouslySetInnerHTML"===o?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(e=e||[]).push(o,c)):"children"===o?u===c||"string"!==typeof c&&"number"!==typeof c||(e=e||[]).push(o,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&(N.hasOwnProperty(o)?(null!=c&&un(a,o),e||u===c||(e=[])):(e=e||[]).push(o,c))}n&&(e=e||[]).push("style",n),a=e,(t.updateQueue=a)&&(t.effectTag|=4)}},Ki=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var ao="function"===typeof WeakSet?WeakSet:Set;function io(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ye(n)),null!==n&&ge(n.type),t=t.value,null!==e&&1===e.tag&&ge(e.type);try{console.error(t)}catch(s){setTimeout((function(){throw s}))}}function oo(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(n){Ml(e,n)}else t.current=null}function lo(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 3:case 5:case 6:case 4:case 17:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ea(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return}throw Error(i(163))}function uo(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function co(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ho(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void co(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:ea(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&ya(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}ya(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&Tn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Lt(n)))))}throw Error(i(163))}function po(e,t,n){switch("function"===typeof Pl&&Pl(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Ks(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var s=t;try{n()}catch(a){Ml(s,a)}}e=e.next}while(e!==r)}))}break;case 1:oo(t),"function"===typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(n){Ml(e,n)}}(t,n);break;case 5:oo(t);break;case 4:vo(e,t,n)}}function fo(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&fo(t)}function mo(e){return 5===e.tag||3===e.tag||4===e.tag}function go(e){e:{for(var t=e.return;null!==t;){if(mo(t)){var n=t;break e}t=t.return}throw Error(i(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.effectTag&&(We(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||mo(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?yo(e,n,t):bo(e,n,t)}function yo(e,t,n){var r=e.tag,s=5===r||6===r;if(s)e=s?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=cn));else if(4!==r&&null!==(e=e.child))for(yo(e,t,n),e=e.sibling;null!==e;)yo(e,t,n),e=e.sibling}function bo(e,t,n){var r=e.tag,s=5===r||6===r;if(s)e=s?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(bo(e,t,n),e=e.sibling;null!==e;)bo(e,t,n),e=e.sibling}function vo(e,t,n){for(var r,s,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(i(160));switch(r=o.stateNode,o.tag){case 5:s=!1;break e;case 3:case 4:r=r.containerInfo,s=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var l=e,u=a,c=n,h=u;;)if(po(l,h,c),null!==h.child&&4!==h.tag)h.child.return=h,h=h.child;else{if(h===u)break e;for(;null===h.sibling;){if(null===h.return||h.return===u)break e;h=h.return}h.sibling.return=h.return,h=h.sibling}s?(l=r,u=a.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):r.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){r=a.stateNode.containerInfo,s=!0,a.child.return=a,a=a.child;continue}}else if(po(e,a,n),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function xo(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void uo(3,t);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,s=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[Rn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ne(n,r),on(e,s),t=on(e,r),s=0;s<a.length;s+=2){var o=a[s],l=a[s+1];"style"===o?rn(n,l):"dangerouslySetInnerHTML"===o?Be(n,l):"children"===o?We(n,l):Z(n,o,l,t)}switch(e){case"input":Se(n,r);break;case"textarea":_e(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Ce(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Ce(n,!!r.multiple,r.defaultValue,!0):Ce(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Lt(t.containerInfo)));case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Xo=js()),null!==n)e:for(e=n;;){if(5===e.tag)a=e.stateNode,r?"function"===typeof(a=a.style).setProperty?a.setProperty("display","none","important"):a.display="none":(a=e.stateNode,s=void 0!==(s=e.memoizedProps.style)&&null!==s&&s.hasOwnProperty("display")?s.display:null,a.style.display=nn("display",s));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(a=e.child.sibling).return=e,e=a;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void wo(t);case 19:return void wo(t)}throw Error(i(163))}function wo(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ao),t.forEach((function(t){var r=Ll.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var ko="function"===typeof WeakMap?WeakMap:Map;function To(e,t,n){(n=pa(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Jo||(Jo=!0,el=r),io(e,t)},n}function No(e,t,n){(n=pa(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var s=t.value;n.payload=function(){return io(e,t),r(s)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(n.callback=function(){"function"!==typeof r&&(null===tl?tl=new Set([this]):tl.add(this),io(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var So,Io=Math.ceil,Eo=X.ReactCurrentDispatcher,$o=X.ReactCurrentOwner,Co=0,Ao=8,Ro=16,_o=32,Do=0,Fo=1,Mo=2,Oo=3,Lo=4,zo=5,Po=Co,Bo=null,Wo=null,Vo=0,Uo=Do,Go=null,jo=1073741823,Ho=1073741823,qo=null,Ko=0,Yo=!1,Xo=0,Zo=500,Qo=null,Jo=!1,el=null,tl=null,nl=!1,rl=null,sl=90,al=null,il=0,ol=null,ll=0;function ul(){return(Po&(Ro|_o))!==Co?1073741821-(js()/10|0):0!==ll?ll:ll=1073741821-(js()/10|0)}function cl(e,t,n){if(0===(2&(t=t.mode)))return 1073741823;var r=Hs();if(0===(4&t))return 99===r?1073741823:1073741822;if((Po&Ro)!==Co)return Vo;if(null!==n)e=Js(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Js(e,150,100);break;case 97:case 96:e=Js(e,5e3,250);break;case 95:e=2;break;default:throw Error(i(326))}return null!==Bo&&e===Vo&&--e,e}function hl(e,t){if(50<il)throw il=0,ol=null,Error(i(185));if(null!==(e=dl(e,t))){var n=Hs();1073741823===t?(Po&Ao)!==Co&&(Po&(Ro|_o))===Co?gl(e):(fl(e),Po===Co&&Zs()):fl(e),(4&Po)===Co||98!==n&&99!==n||(null===al?al=new Map([[e,t]]):(void 0===(n=al.get(e))||n>t)&&al.set(e,t))}}function dl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,s=null;if(null===r&&3===e.tag)s=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){s=r.stateNode;break}r=r.return}return null!==s&&(Bo===s&&(Tl(t),Uo===Lo&&Xl(s,Vo)),Zl(s,t)),s}function pl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Yl(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function fl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Xs(gl.bind(null,e));else{var t=pl(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=ul();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var s=e.callbackPriority;if(e.callbackExpirationTime===t&&s>=r)return;n!==zs&&Cs(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Xs(gl.bind(null,e)):Ys(r,ml.bind(null,e),{timeout:10*(1073741821-t)-js()}),e.callbackNode=t}}}function ml(e,t){if(ll=0,t)return Ql(e,t=ul()),fl(e),null;var n=pl(e);if(0!==n){if(t=e.callbackNode,(Po&(Ro|_o))!==Co)throw Error(i(327));if(_l(),e===Bo&&n===Vo||vl(e,n),null!==Wo){var r=Po;Po|=Ro;for(var s=wl();;)try{Sl();break}catch(l){xl(e,l)}if(aa(),Po=r,Eo.current=s,Uo===Fo)throw t=Go,vl(e,n),Xl(e,n),fl(e),t;if(null===Wo)switch(s=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Uo,Bo=null,r){case Do:case Fo:throw Error(i(345));case Mo:Ql(e,2<n?2:n);break;case Oo:if(Xl(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=$l(s)),1073741823===jo&&10<(s=Xo+Zo-js())){if(Yo){var a=e.lastPingedTime;if(0===a||a>=n){e.lastPingedTime=n,vl(e,n);break}}if(0!==(a=pl(e))&&a!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=Sn(Cl.bind(null,e),s);break}Cl(e);break;case Lo:if(Xl(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=$l(s)),Yo&&(0===(s=e.lastPingedTime)||s>=n)){e.lastPingedTime=n,vl(e,n);break}if(0!==(s=pl(e))&&s!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Ho?r=10*(1073741821-Ho)-js():1073741823===jo?r=0:(r=10*(1073741821-jo)-5e3,0>(r=(s=js())-r)&&(r=0),(n=10*(1073741821-n)-s)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Io(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=Sn(Cl.bind(null,e),r);break}Cl(e);break;case zo:if(1073741823!==jo&&null!==qo){a=jo;var o=qo;if(0>=(r=0|o.busyMinDurationMs)?r=0:(s=0|o.busyDelayMs,r=(a=js()-(10*(1073741821-a)-(0|o.timeoutMs||5e3)))<=s?0:s+r-a),10<r){Xl(e,n),e.timeoutHandle=Sn(Cl.bind(null,e),r);break}}Cl(e);break;default:throw Error(i(329))}if(fl(e),e.callbackNode===t)return ml.bind(null,e)}}return null}function gl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,(Po&(Ro|_o))!==Co)throw Error(i(327));if(_l(),e===Bo&&t===Vo||vl(e,t),null!==Wo){var n=Po;Po|=Ro;for(var r=wl();;)try{Nl();break}catch(s){xl(e,s)}if(aa(),Po=n,Eo.current=r,Uo===Fo)throw n=Go,vl(e,t),Xl(e,t),fl(e),n;if(null!==Wo)throw Error(i(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Bo=null,Cl(e),fl(e)}return null}function yl(e,t){var n=Po;Po|=1;try{return e(t)}finally{(Po=n)===Co&&Zs()}}function bl(e,t){var n=Po;Po&=-2,Po|=Ao;try{return e(t)}finally{(Po=n)===Co&&Zs()}}function vl(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,In(n)),null!==Wo)for(n=Wo.return;null!==n;){var r=n;switch(r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&ks();break;case 3:za(),fs(bs),fs(ys);break;case 5:Ba(r);break;case 4:za();break;case 13:case 19:fs(Wa);break;case 10:ia(r)}n=n.return}Bo=e,Wo=Ul(e.current,null),Vo=t,Uo=Do,Go=null,Ho=jo=1073741823,qo=null,Ko=0,Yo=!1}function xl(e,t){for(;;){try{if(aa(),Ga.current=wi,Xa)for(var n=qa.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Ha=0,Ya=Ka=qa=null,Xa=!1,null===Wo||null===Wo.return)return Uo=Fo,Go=t,Wo=null;e:{var s=e,a=Wo.return,i=Wo,o=t;if(t=Vo,i.effectTag|=2048,i.firstEffect=i.lastEffect=null,null!==o&&"object"===typeof o&&"function"===typeof o.then){var l=o;if(0===(2&i.mode)){var u=i.alternate;u?(i.updateQueue=u.updateQueue,i.memoizedState=u.memoizedState,i.expirationTime=u.expirationTime):(i.updateQueue=null,i.memoizedState=null)}var c=0!==(1&Wa.current),h=a;do{var d;if(d=13===h.tag){var p=h.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var f=h.memoizedProps;d=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!c)}}if(d){var m=h.updateQueue;if(null===m){var g=new Set;g.add(l),h.updateQueue=g}else m.add(l);if(0===(2&h.mode)){if(h.effectTag|=64,i.effectTag&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var y=pa(1073741823,null);y.tag=2,fa(i,y)}i.expirationTime=1073741823;break e}o=void 0,i=t;var b=s.pingCache;if(null===b?(b=s.pingCache=new ko,o=new Set,b.set(l,o)):void 0===(o=b.get(l))&&(o=new Set,b.set(l,o)),!o.has(i)){o.add(i);var v=Ol.bind(null,s,l,i);l.then(v,v)}h.effectTag|=4096,h.expirationTime=t;break e}h=h.return}while(null!==h);o=Error((ge(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ye(i))}Uo!==zo&&(Uo=Mo),o=so(o,i),h=a;do{switch(h.tag){case 3:l=o,h.effectTag|=4096,h.expirationTime=t,ma(h,To(h,l,t));break e;case 1:l=o;var x=h.type,w=h.stateNode;if(0===(64&h.effectTag)&&("function"===typeof x.getDerivedStateFromError||null!==w&&"function"===typeof w.componentDidCatch&&(null===tl||!tl.has(w)))){h.effectTag|=4096,h.expirationTime=t,ma(h,No(h,l,t));break e}}h=h.return}while(null!==h)}Wo=El(Wo)}catch(k){t=k;continue}break}}function wl(){var e=Eo.current;return Eo.current=wi,null===e?wi:e}function kl(e,t){e<jo&&2<e&&(jo=e),null!==t&&e<Ho&&2<e&&(Ho=e,qo=t)}function Tl(e){e>Ko&&(Ko=e)}function Nl(){for(;null!==Wo;)Wo=Il(Wo)}function Sl(){for(;null!==Wo&&!Ps();)Wo=Il(Wo)}function Il(e){var t=So(e.alternate,e,Vo);return e.memoizedProps=e.pendingProps,null===t&&(t=El(e)),$o.current=null,t}function El(e){Wo=e;do{var t=Wo.alternate;if(e=Wo.return,0===(2048&Wo.effectTag)){if(t=no(t,Wo,Vo),1===Vo||1!==Wo.childExpirationTime){for(var n=0,r=Wo.child;null!==r;){var s=r.expirationTime,a=r.childExpirationTime;s>n&&(n=s),a>n&&(n=a),r=r.sibling}Wo.childExpirationTime=n}if(null!==t)return t;null!==e&&0===(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Wo.firstEffect),null!==Wo.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Wo.firstEffect),e.lastEffect=Wo.lastEffect),1<Wo.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Wo:e.firstEffect=Wo,e.lastEffect=Wo))}else{if(null!==(t=ro(Wo)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Wo.sibling))return t;Wo=e}while(null!==Wo);return Uo===Do&&(Uo=zo),null}function $l(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function Cl(e){var t=Hs();return Ks(99,Al.bind(null,e,t)),null}function Al(e,t){do{_l()}while(null!==rl);if((Po&(Ro|_o))!==Co)throw Error(i(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(i(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var s=$l(n);if(e.firstPendingTime=s,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Bo&&(Wo=Bo=null,Vo=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,s=n.firstEffect):s=n:s=n.firstEffect,null!==s){var a=Po;Po|=_o,$o.current=null,wn=qt;var o=mn();if(gn(o)){if("selectionStart"in o)var l={start:o.selectionStart,end:o.selectionEnd};else e:{var u=(l=(l=o.ownerDocument)&&l.defaultView||window).getSelection&&l.getSelection();if(u&&0!==u.rangeCount){l=u.anchorNode;var c=u.anchorOffset,h=u.focusNode;u=u.focusOffset;try{l.nodeType,h.nodeType}catch(I){l=null;break e}var d=0,p=-1,f=-1,m=0,g=0,y=o,b=null;t:for(;;){for(var v;y!==l||0!==c&&3!==y.nodeType||(p=d+c),y!==h||0!==u&&3!==y.nodeType||(f=d+u),3===y.nodeType&&(d+=y.nodeValue.length),null!==(v=y.firstChild);)b=y,y=v;for(;;){if(y===o)break t;if(b===l&&++m===c&&(p=d),b===h&&++g===u&&(f=d),null!==(v=y.nextSibling))break;b=(y=b).parentNode}y=v}l=-1===p||-1===f?null:{start:p,end:f}}else l=null}l=l||{start:0,end:0}}else l=null;kn={activeElementDetached:null,focusedElem:o,selectionRange:l},qt=!1,Qo=s;do{try{Rl()}catch(I){if(null===Qo)throw Error(i(330));Ml(Qo,I),Qo=Qo.nextEffect}}while(null!==Qo);Qo=s;do{try{for(o=e,l=t;null!==Qo;){var x=Qo.effectTag;if(16&x&&We(Qo.stateNode,""),128&x){var w=Qo.alternate;if(null!==w){var k=w.ref;null!==k&&("function"===typeof k?k(null):k.current=null)}}switch(1038&x){case 2:go(Qo),Qo.effectTag&=-3;break;case 6:go(Qo),Qo.effectTag&=-3,xo(Qo.alternate,Qo);break;case 1024:Qo.effectTag&=-1025;break;case 1028:Qo.effectTag&=-1025,xo(Qo.alternate,Qo);break;case 4:xo(Qo.alternate,Qo);break;case 8:vo(o,c=Qo,l),fo(c)}Qo=Qo.nextEffect}}catch(I){if(null===Qo)throw Error(i(330));Ml(Qo,I),Qo=Qo.nextEffect}}while(null!==Qo);if(k=kn,w=mn(),x=k.focusedElem,l=k.selectionRange,w!==x&&x&&x.ownerDocument&&fn(x.ownerDocument.documentElement,x)){null!==l&&gn(x)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in x?(x.selectionStart=w,x.selectionEnd=Math.min(k,x.value.length)):(k=(w=x.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),c=x.textContent.length,o=Math.min(l.start,c),l=void 0===l.end?o:Math.min(l.end,c),!k.extend&&o>l&&(c=l,l=o,o=c),c=pn(x,o),h=pn(x,l),c&&h&&(1!==k.rangeCount||k.anchorNode!==c.node||k.anchorOffset!==c.offset||k.focusNode!==h.node||k.focusOffset!==h.offset)&&((w=w.createRange()).setStart(c.node,c.offset),k.removeAllRanges(),o>l?(k.addRange(w),k.extend(h.node,h.offset)):(w.setEnd(h.node,h.offset),k.addRange(w))))),w=[];for(k=x;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"===typeof x.focus&&x.focus(),x=0;x<w.length;x++)(k=w[x]).element.scrollLeft=k.left,k.element.scrollTop=k.top}qt=!!wn,kn=wn=null,e.current=n,Qo=s;do{try{for(x=e;null!==Qo;){var T=Qo.effectTag;if(36&T&&ho(x,Qo.alternate,Qo),128&T){w=void 0;var N=Qo.ref;if(null!==N){var S=Qo.stateNode;Qo.tag,w=S,"function"===typeof N?N(w):N.current=w}}Qo=Qo.nextEffect}}catch(I){if(null===Qo)throw Error(i(330));Ml(Qo,I),Qo=Qo.nextEffect}}while(null!==Qo);Qo=null,Bs(),Po=a}else e.current=n;if(nl)nl=!1,rl=e,sl=t;else for(Qo=s;null!==Qo;)t=Qo.nextEffect,Qo.nextEffect=null,Qo=t;if(0===(t=e.firstPendingTime)&&(tl=null),1073741823===t?e===ol?il++:(il=0,ol=e):il=0,"function"===typeof zl&&zl(n.stateNode,r),fl(e),Jo)throw Jo=!1,e=el,el=null,e;return(Po&Ao)!==Co||Zs(),null}function Rl(){for(;null!==Qo;){var e=Qo.effectTag;0!==(256&e)&&lo(Qo.alternate,Qo),0===(512&e)||nl||(nl=!0,Ys(97,(function(){return _l(),null}))),Qo=Qo.nextEffect}}function _l(){if(90!==sl){var e=97<sl?97:sl;return sl=90,Ks(e,Dl)}}function Dl(){if(null===rl)return!1;var e=rl;if(rl=null,(Po&(Ro|_o))!==Co)throw Error(i(331));var t=Po;for(Po|=_o,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!==(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:uo(5,n),co(5,n)}}catch(r){if(null===e)throw Error(i(330));Ml(e,r)}n=e.nextEffect,e.nextEffect=null,e=n}return Po=t,Zs(),!0}function Fl(e,t,n){fa(e,t=To(e,t=so(n,t),1073741823)),null!==(e=dl(e,1073741823))&&fl(e)}function Ml(e,t){if(3===e.tag)Fl(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Fl(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===tl||!tl.has(r))){fa(n,e=No(n,e=so(t,e),1073741823)),null!==(n=dl(n,1073741823))&&fl(n);break}}n=n.return}}function Ol(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Bo===e&&Vo===n?Uo===Lo||Uo===Oo&&1073741823===jo&&js()-Xo<Zo?vl(e,Vo):Yo=!0:Yl(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,fl(e)))}function Ll(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=cl(t=ul(),e,null)),null!==(e=dl(e,t))&&fl(e)}So=function(e,t,n){var r=t.expirationTime;if(null!==e){var s=t.pendingProps;if(e.memoizedProps!==s||bs.current)Mi=!0;else{if(r<n){switch(Mi=!1,t.tag){case 3:Gi(t),Di();break;case 5:if(Pa(t),4&t.mode&&1!==n&&s.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:ws(t.type)&&Ss(t);break;case 4:La(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,s=t.type._context,ms(ta,s._currentValue),s._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Xi(e,t,n):(ms(Wa,1&Wa.current),null!==(t=eo(e,t,n))?t.sibling:null);ms(Wa,1&Wa.current);break;case 19:if(r=t.childExpirationTime>=n,0!==(64&e.effectTag)){if(r)return Ji(e,t,n);t.effectTag|=64}if(null!==(s=t.memoizedState)&&(s.rendering=null,s.tail=null),ms(Wa,Wa.current),!r)return null}return eo(e,t,n)}Mi=!1}}else Mi=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,s=xs(t,ys.current),la(t,n),s=Ja(null,t,r,e,s,n),t.effectTag|=1,"object"===typeof s&&null!==s&&"function"===typeof s.render&&void 0===s.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ws(r)){var a=!0;Ss(t)}else a=!1;t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,ha(t);var o=r.getDerivedStateFromProps;"function"===typeof o&&xa(t,r,o,e),s.updater=wa,t.stateNode=s,s._reactInternalFiber=t,Sa(t,r,e,n),t=Ui(null,t,r,!0,a,n)}else t.tag=0,Oi(null,t,s,n),t=t.child;return t;case 16:e:{if(s=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(s),1!==s._status)throw s._result;switch(s=s._result,t.type=s,a=t.tag=function(e){if("function"===typeof e)return Vl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===le)return 11;if(e===he)return 14}return 2}(s),e=ea(s,e),a){case 0:t=Wi(null,t,s,e,n);break e;case 1:t=Vi(null,t,s,e,n);break e;case 11:t=Li(null,t,s,e,n);break e;case 14:t=zi(null,t,s,ea(s.type,e),r,n);break e}throw Error(i(306,s,""))}return t;case 0:return r=t.type,s=t.pendingProps,Wi(e,t,r,s=t.elementType===r?s:ea(r,s),n);case 1:return r=t.type,s=t.pendingProps,Vi(e,t,r,s=t.elementType===r?s:ea(r,s),n);case 3:if(Gi(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,s=null!==(s=t.memoizedState)?s.element:null,da(e,t),ga(t,r,null,n),(r=t.memoizedState.element)===s)Di(),t=eo(e,t,n);else{if((s=t.stateNode.hydrate)&&(Ii=En(t.stateNode.containerInfo.firstChild),Si=t,s=Ei=!0),s)for(n=Ra(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Oi(e,t,r,n),Di();t=t.child}return t;case 5:return Pa(t),null===e&&Ai(t),r=t.type,s=t.pendingProps,a=null!==e?e.memoizedProps:null,o=s.children,Nn(r,s)?o=null:null!==a&&Nn(r,a)&&(t.effectTag|=16),Bi(e,t),4&t.mode&&1!==n&&s.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Oi(e,t,o,n),t=t.child),t;case 6:return null===e&&Ai(t),null;case 13:return Xi(e,t,n);case 4:return La(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Aa(t,null,r,n):Oi(e,t,r,n),t.child;case 11:return r=t.type,s=t.pendingProps,Li(e,t,r,s=t.elementType===r?s:ea(r,s),n);case 7:return Oi(e,t,t.pendingProps,n),t.child;case 8:case 12:return Oi(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,s=t.pendingProps,o=t.memoizedProps,a=s.value;var l=t.type._context;if(ms(ta,l._currentValue),l._currentValue=a,null!==o)if(l=o.value,0===(a=Ur(l,a)?0:0|("function"===typeof r._calculateChangedBits?r._calculateChangedBits(l,a):1073741823))){if(o.children===s.children&&!bs.current){t=eo(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var u=l.dependencies;if(null!==u){o=l.child;for(var c=u.firstContext;null!==c;){if(c.context===r&&0!==(c.observedBits&a)){1===l.tag&&((c=pa(n,null)).tag=2,fa(l,c)),l.expirationTime<n&&(l.expirationTime=n),null!==(c=l.alternate)&&c.expirationTime<n&&(c.expirationTime=n),oa(l.return,n),u.expirationTime<n&&(u.expirationTime=n);break}c=c.next}}else o=10===l.tag&&l.type===t.type?null:l.child;if(null!==o)o.return=l;else for(o=l;null!==o;){if(o===t){o=null;break}if(null!==(l=o.sibling)){l.return=o.return,o=l;break}o=o.return}l=o}Oi(e,t,s.children,n),t=t.child}return t;case 9:return s=t.type,r=(a=t.pendingProps).children,la(t,n),r=r(s=ua(s,a.unstable_observedBits)),t.effectTag|=1,Oi(e,t,r,n),t.child;case 14:return a=ea(s=t.type,t.pendingProps),zi(e,t,s,a=ea(s.type,a),r,n);case 15:return Pi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,s=t.pendingProps,s=t.elementType===r?s:ea(r,s),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,ws(r)?(e=!0,Ss(t)):e=!1,la(t,n),Ta(t,r,s),Sa(t,r,s,n),Ui(null,t,r,!0,e,n);case 19:return Ji(e,t,n)}throw Error(i(156,t.tag))};var zl=null,Pl=null;function Bl(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Wl(e,t,n,r){return new Bl(e,t,n,r)}function Vl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ul(e,t){var n=e.alternate;return null===n?((n=Wl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Gl(e,t,n,r,s,a){var o=2;if(r=e,"function"===typeof e)Vl(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case ne:return jl(n.children,s,a,t);case oe:o=8,s|=7;break;case re:o=8,s|=1;break;case se:return(e=Wl(12,n,t,8|s)).elementType=se,e.type=se,e.expirationTime=a,e;case ue:return(e=Wl(13,n,t,s)).type=ue,e.elementType=ue,e.expirationTime=a,e;case ce:return(e=Wl(19,n,t,s)).elementType=ce,e.expirationTime=a,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case ae:o=10;break e;case ie:o=9;break e;case le:o=11;break e;case he:o=14;break e;case de:o=16,r=null;break e;case pe:o=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Wl(o,n,t,s)).elementType=e,t.type=r,t.expirationTime=a,t}function jl(e,t,n,r){return(e=Wl(7,e,r,t)).expirationTime=n,e}function Hl(e,t,n){return(e=Wl(6,e,null,t)).expirationTime=n,e}function ql(e,t,n){return(t=Wl(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Kl(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Yl(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Xl(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Zl(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Ql(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Jl(e,t,n,r){var s=t.current,a=ul(),o=ba.suspense;a=cl(a,s,o);e:if(n){t:{if(et(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(i(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(ws(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(i(171))}if(1===n.tag){var u=n.type;if(ws(u)){n=Ns(n,u,l);break e}}n=l}else n=gs;return null===t.context?t.context=n:t.pendingContext=n,(t=pa(a,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),fa(s,t),hl(s,a),a}function eu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function tu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function nu(e,t){tu(e,t),(e=e.alternate)&&tu(e,t)}function ru(e,t,n){var r=new Kl(e,t,n=null!=n&&!0===n.hydrate),s=Wl(3,null,null,2===t?7:1===t?3:0);r.current=s,s.stateNode=r,ha(s),e[_n]=r.current,n&&0!==t&&function(e,t){var n=Je(t);Et.forEach((function(e){mt(e,t,n)})),$t.forEach((function(e){mt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function su(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function au(e,t,n,r,s){var a=n._reactRootContainer;if(a){var i=a._internalRoot;if("function"===typeof s){var o=s;s=function(){var e=eu(i);o.call(e)}}Jl(t,i,e,s)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new ru(e,0,t?{hydrate:!0}:void 0)}(n,r),i=a._internalRoot,"function"===typeof s){var l=s;s=function(){var e=eu(i);l.call(e)}}bl((function(){Jl(t,i,e,s)}))}return eu(i)}function iu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!su(t))throw Error(i(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}ru.prototype.render=function(e){Jl(e,this._internalRoot,null,null)},ru.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Jl(null,e,null,(function(){t[_n]=null}))},gt=function(e){if(13===e.tag){var t=Js(ul(),150,100);hl(e,t),nu(e,t)}},yt=function(e){13===e.tag&&(hl(e,3),nu(e,3))},bt=function(e){if(13===e.tag){var t=ul();hl(e,t=cl(t,e,null)),nu(e,t)}},$=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var s=On(r);if(!s)throw Error(i(90));we(r),Se(r,s)}}}break;case"textarea":_e(e,n);break;case"select":null!=(t=n.value)&&Ce(e,!!n.multiple,t,!1)}},F=yl,M=function(e,t,n,r,s){var a=Po;Po|=4;try{return Ks(98,e.bind(null,t,n,r,s))}finally{(Po=a)===Co&&Zs()}},O=function(){(Po&(1|Ro|_o))===Co&&(function(){if(null!==al){var e=al;al=null,e.forEach((function(e,t){Ql(t,e),fl(t)})),Zs()}}(),_l())},L=function(e,t){var n=Po;Po|=2;try{return e(t)}finally{(Po=n)===Co&&Zs()}};var ou={Events:[Fn,Mn,On,I,T,Un,function(e){at(e,Vn)},_,D,Qt,lt,_l,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);zl=function(e){try{t.onCommitFiberRoot(n,e,void 0,64===(64&e.current.effectTag))}catch(r){}},Pl=function(e){try{t.onCommitFiberUnmount(n,e)}catch(r){}}}catch(r){}})(s({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:X.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:Dn,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ou,t.createPortal=iu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=rt(t))?null:e.stateNode},t.flushSync=function(e,t){if((Po&(Ro|_o))!==Co)throw Error(i(187));var n=Po;Po|=1;try{return Ks(99,e.bind(null,t))}finally{Po=n,Zs()}},t.hydrate=function(e,t,n){if(!su(t))throw Error(i(200));return au(null,e,t,!0,n)},t.render=function(e,t,n){if(!su(t))throw Error(i(200));return au(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!su(e))throw Error(i(40));return!!e._reactRootContainer&&(bl((function(){au(null,null,e,!1,(function(){e._reactRootContainer=null,e[_n]=null}))})),!0)},t.unstable_batchedUpdates=yl,t.unstable_createPortal=function(e,t){return iu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!su(n))throw Error(i(200));if(null==e||void 0===e._reactInternalFiber)throw Error(i(38));return au(e,t,n,!1,r)},t.version="16.14.0"},7950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(2730)},7029:function(e,t,n){var r;r=function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(e,t,n){"use strict";n.r(t);var r=n("react"),s=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},e(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),a=function(){return a=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},a.apply(this,arguments)},i=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};function o(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!==typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){var t=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return t?new Promise((function(n,r){t.call(navigator,e,n,r)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var l=function(e){function t(t){var n=e.call(this,t)||this;return n.canvas=null,n.ctx=null,n.unmounted=!1,n.state={hasUserMedia:!1},n}return s(t,e),t.prototype.componentDidMount=function(){var e=this.state,t=this.props;o()?e.hasUserMedia||this.requestUserMedia():t.onUserMediaError("getUserMedia not supported")},t.prototype.componentDidUpdate=function(e){var t=this.props;if(o()){var n=JSON.stringify(e.audioConstraints)!==JSON.stringify(t.audioConstraints),r=JSON.stringify(e.videoConstraints)!==JSON.stringify(t.videoConstraints),s=e.minScreenshotWidth!==t.minScreenshotWidth,a=e.minScreenshotHeight!==t.minScreenshotHeight;(r||s||a)&&(this.canvas=null,this.ctx=null),(n||r)&&(this.stopAndCleanup(),this.requestUserMedia())}else t.onUserMediaError("getUserMedia not supported")},t.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},t.stopMediaStream=function(e){e&&(e.getVideoTracks&&e.getAudioTracks?(e.getVideoTracks().map((function(t){e.removeTrack(t),t.stop()})),e.getAudioTracks().map((function(t){e.removeTrack(t),t.stop()}))):e.stop())},t.prototype.stopAndCleanup=function(){var e=this.state;e.hasUserMedia&&(t.stopMediaStream(this.stream),e.src&&window.URL.revokeObjectURL(e.src))},t.prototype.getScreenshot=function(e){var t=this.state,n=this.props;if(!t.hasUserMedia)return null;var r=this.getCanvas(e);return r&&r.toDataURL(n.screenshotFormat,n.screenshotQuality)},t.prototype.getCanvas=function(e){var t=this.state,n=this.props;if(!this.video)return null;if(!t.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var r=this.video.videoWidth,s=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var a=r/s;s=(r=n.minScreenshotWidth||this.video.clientWidth)/a,n.minScreenshotHeight&&s<n.minScreenshotHeight&&(r=(s=n.minScreenshotHeight)*a)}this.canvas=document.createElement("canvas"),this.canvas.width=(null===e||void 0===e?void 0:e.width)||r,this.canvas.height=(null===e||void 0===e?void 0:e.height)||s,this.ctx=this.canvas.getContext("2d")}var i=this.ctx,o=this.canvas;return i&&o&&(n.mirrored&&(i.translate(o.width,0),i.scale(-1,1)),i.imageSmoothingEnabled=n.imageSmoothing,i.drawImage(this.video,0,0,(null===e||void 0===e?void 0:e.width)||o.width,(null===e||void 0===e?void 0:e.height)||o.height),n.mirrored&&(i.scale(-1,1),i.translate(-o.width,0))),o},t.prototype.requestUserMedia=function(){var e=this,n=this.props,r=function(r,s){var a={video:"undefined"===typeof s||s};n.audio&&(a.audio="undefined"===typeof r||r),navigator.mediaDevices.getUserMedia(a).then((function(n){e.unmounted?t.stopMediaStream(n):e.handleUserMedia(null,n)})).catch((function(t){e.handleUserMedia(t)}))};if("mediaDevices"in navigator)r(n.audioConstraints,n.videoConstraints);else{var s=function(e){return{optional:[{sourceId:e}]}},a=function(e){var t=e.deviceId;return"string"===typeof t?t:Array.isArray(t)&&t.length>0?t[0]:"object"===typeof t&&t.ideal?t.ideal:null};MediaStreamTrack.getSources((function(e){var t=null,i=null;e.forEach((function(e){"audio"===e.kind?t=e.id:"video"===e.kind&&(i=e.id)}));var o=a(n.audioConstraints);o&&(t=o);var l=a(n.videoConstraints);l&&(i=l),r(s(t),s(i))}))}},t.prototype.handleUserMedia=function(e,t){var n=this.props;if(e||!t)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(e);this.stream=t;try{this.video&&(this.video.srcObject=t),this.setState({hasUserMedia:!0})}catch(r){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(t)})}n.onUserMedia(t)},t.prototype.render=function(){var e=this,t=this.state,n=this.props,s=n.audio,o=(n.forceScreenshotSourceSize,n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),l=n.style,u=void 0===l?{}:l,c=i(n,["audio","forceScreenshotSourceSize","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style"]),h=o?a(a({},u),{transform:(u.transform||"")+" scaleX(-1)"}):u;return r.createElement("video",a({autoPlay:!0,src:t.src,muted:s,playsInline:!0,ref:function(t){e.video=t},style:h},c))},t.defaultProps={audio:!0,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},t}(r.Component);t.default=l},react:function(t,n){t.exports=e}}).default},e.exports=r(n(5043))},1153:(e,t,n)=>{"use strict";var r=n(5043),s=60103;if("function"===typeof Symbol&&Symbol.for){var a=Symbol.for;s=a("react.element"),a("react.fragment")}var i=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o=Object.prototype.hasOwnProperty,l={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var r,a={},u=null,c=null;for(r in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)o.call(t,r)&&!l.hasOwnProperty(r)&&(a[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===a[r]&&(a[r]=t[r]);return{$$typeof:s,type:e,key:u,ref:c,props:a,_owner:i.current}}t.jsx=u,t.jsxs=u},4202:(e,t,n)=>{"use strict";var r=n(2123),s="function"===typeof Symbol&&Symbol.for,a=s?Symbol.for("react.element"):60103,i=s?Symbol.for("react.portal"):60106,o=s?Symbol.for("react.fragment"):60107,l=s?Symbol.for("react.strict_mode"):60108,u=s?Symbol.for("react.profiler"):60114,c=s?Symbol.for("react.provider"):60109,h=s?Symbol.for("react.context"):60110,d=s?Symbol.for("react.forward_ref"):60112,p=s?Symbol.for("react.suspense"):60113,f=s?Symbol.for("react.memo"):60115,m=s?Symbol.for("react.lazy"):60116,g="function"===typeof Symbol&&Symbol.iterator;function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v={};function x(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||b}function w(){}function k(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(y(85));this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=x.prototype;var T=k.prototype=new w;T.constructor=k,r(T,x.prototype),T.isPureReactComponent=!0;var N={current:null},S=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,n){var r,s={},i=null,o=null;if(null!=t)for(r in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)S.call(t,r)&&!I.hasOwnProperty(r)&&(s[r]=t[r]);var l=arguments.length-2;if(1===l)s.children=n;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];s.children=u}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===s[r]&&(s[r]=l[r]);return{$$typeof:a,type:e,key:i,ref:o,props:s,_owner:N.current}}function $(e){return"object"===typeof e&&null!==e&&e.$$typeof===a}var C=/\/+/g,A=[];function R(e,t,n,r){if(A.length){var s=A.pop();return s.result=e,s.keyPrefix=t,s.func=n,s.context=r,s.count=0,s}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function _(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>A.length&&A.push(e)}function D(e,t,n,r){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var o=!1;if(null===e)o=!0;else switch(s){case"string":case"number":o=!0;break;case"object":switch(e.$$typeof){case a:case i:o=!0}}if(o)return n(r,e,""===t?"."+M(e,0):t),1;if(o=0,t=""===t?".":t+":",Array.isArray(e))for(var l=0;l<e.length;l++){var u=t+M(s=e[l],l);o+=D(s,u,n,r)}else if(null===e||"object"!==typeof e?u=null:u="function"===typeof(u=g&&e[g]||e["@@iterator"])?u:null,"function"===typeof u)for(e=u.call(e),l=0;!(s=e.next()).done;)o+=D(s=s.value,u=t+M(s,l++),n,r);else if("object"===s)throw n=""+e,Error(y(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return o}function F(e,t,n){return null==e?0:D(e,"",t,n)}function M(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function O(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,s=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?z(e,r,n,(function(e){return e})):null!=e&&($(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,s+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(C,"$&/")+"/")+n)),r.push(e))}function z(e,t,n,r,s){var a="";null!=n&&(a=(""+n).replace(C,"$&/")+"/"),F(e,L,t=R(t,a,r,s)),_(t)}var P={current:null};function B(){var e=P.current;if(null===e)throw Error(y(321));return e}var W={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:N,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return z(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;F(e,O,t=R(null,null,t,n)),_(t)},count:function(e){return F(e,(function(){return null}),null)},toArray:function(e){var t=[];return z(e,t,null,(function(e){return e})),t},only:function(e){if(!$(e))throw Error(y(143));return e}},t.Component=x,t.Fragment=o,t.Profiler=u,t.PureComponent=k,t.StrictMode=l,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W,t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error(y(267,e));var s=r({},e.props),i=e.key,o=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,l=N.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)S.call(t,c)&&!I.hasOwnProperty(c)&&(s[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)s.children=n;else if(1<c){u=Array(c);for(var h=0;h<c;h++)u[h]=arguments[h+2];s.children=u}return{$$typeof:a,type:e.type,key:i,ref:o,props:s,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:h,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=$,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:f,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return B().useCallback(e,t)},t.useContext=function(e,t){return B().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return B().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return B().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return B().useLayoutEffect(e,t)},t.useMemo=function(e,t){return B().useMemo(e,t)},t.useReducer=function(e,t,n){return B().useReducer(e,t,n)},t.useRef=function(e){return B().useRef(e)},t.useState=function(e){return B().useState(e)},t.version="16.14.0"},5043:(e,t,n)=>{"use strict";e.exports=n(4202)},579:(e,t,n)=>{"use strict";e.exports=n(1153)},7234:(e,t)=>{"use strict";var n,r,s,a,i;if("undefined"===typeof window||"function"!==typeof MessageChannel){var o=null,l=null,u=function(){if(null!==o)try{var e=t.unstable_now();o(!0,e),o=null}catch(n){throw setTimeout(u,0),n}},c=Date.now();t.unstable_now=function(){return Date.now()-c},n=function(e){null!==o?setTimeout(n,0,e):(o=e,setTimeout(u,0))},r=function(e,t){l=setTimeout(e,t)},s=function(){clearTimeout(l)},a=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var h=window.performance,d=window.Date,p=window.setTimeout,f=window.clearTimeout;if("undefined"!==typeof console){var m=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!==typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===typeof h&&"function"===typeof h.now)t.unstable_now=function(){return h.now()};else{var g=d.now();t.unstable_now=function(){return d.now()-g}}var y=!1,b=null,v=-1,x=5,w=0;a=function(){return t.unstable_now()>=w},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):x=0<e?Math.floor(1e3/e):5};var k=new MessageChannel,T=k.port2;k.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();w=e+x;try{b(!0,e)?T.postMessage(null):(y=!1,b=null)}catch(n){throw T.postMessage(null),n}}else y=!1},n=function(e){b=e,y||(y=!0,T.postMessage(null))},r=function(e,n){v=p((function(){e(t.unstable_now())}),n)},s=function(){f(v),v=-1}}function N(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,s=e[r];if(!(void 0!==s&&0<E(s,t)))break e;e[r]=t,e[n]=s,n=r}}function S(e){return void 0===(e=e[0])?null:e}function I(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,s=e.length;r<s;){var a=2*(r+1)-1,i=e[a],o=a+1,l=e[o];if(void 0!==i&&0>E(i,n))void 0!==l&&0>E(l,i)?(e[r]=l,e[o]=n,r=o):(e[r]=i,e[a]=n,r=a);else{if(!(void 0!==l&&0>E(l,n)))break e;e[r]=l,e[o]=n,r=o}}}return t}return null}function E(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var $=[],C=[],A=1,R=null,_=3,D=!1,F=!1,M=!1;function O(e){for(var t=S(C);null!==t;){if(null===t.callback)I(C);else{if(!(t.startTime<=e))break;I(C),t.sortIndex=t.expirationTime,N($,t)}t=S(C)}}function L(e){if(M=!1,O(e),!F)if(null!==S($))F=!0,n(z);else{var t=S(C);null!==t&&r(L,t.startTime-e)}}function z(e,n){F=!1,M&&(M=!1,s()),D=!0;var i=_;try{for(O(n),R=S($);null!==R&&(!(R.expirationTime>n)||e&&!a());){var o=R.callback;if(null!==o){R.callback=null,_=R.priorityLevel;var l=o(R.expirationTime<=n);n=t.unstable_now(),"function"===typeof l?R.callback=l:R===S($)&&I($),O(n)}else I($);R=S($)}if(null!==R)var u=!0;else{var c=S(C);null!==c&&r(L,c.startTime-n),u=!1}return u}finally{R=null,_=i,D=!1}}function P(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){F||D||(F=!0,n(z))},t.unstable_getCurrentPriorityLevel=function(){return _},t.unstable_getFirstCallbackNode=function(){return S($)},t.unstable_next=function(e){switch(_){case 1:case 2:case 3:var t=3;break;default:t=_}var n=_;_=t;try{return e()}finally{_=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=_;_=e;try{return t()}finally{_=n}},t.unstable_scheduleCallback=function(e,a,i){var o=t.unstable_now();if("object"===typeof i&&null!==i){var l=i.delay;l="number"===typeof l&&0<l?o+l:o,i="number"===typeof i.timeout?i.timeout:P(e)}else i=P(e),l=o;return e={id:A++,callback:a,priorityLevel:e,startTime:l,expirationTime:i=l+i,sortIndex:-1},l>o?(e.sortIndex=l,N(C,e),null===S($)&&e===S(C)&&(M?s():M=!0,r(L,l-o))):(e.sortIndex=i,N($,e),F||D||(F=!0,n(z))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();O(e);var n=S($);return n!==R&&null!==R&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<R.expirationTime||a()},t.unstable_wrapCallback=function(e){var t=_;return function(){var n=_;_=t;try{return e.apply(this,arguments)}finally{_=n}}}},8853:(e,t,n)=>{"use strict";e.exports=n(7234)},5817:()=>{},8590:()=>{},3857:()=>{},7078:()=>{},6905:()=>{},4637:()=>{},279:()=>{},3053:()=>{}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>Ps,computeFlatOffset:()=>Qs,computeOutShape:()=>Ws,getNormalizedAxes:()=>js,isSliceContinous:()=>Zs,maskToAxes:()=>Bs,parseSliceParams:()=>Js,sliceInfo:()=>ea,startForAxis:()=>Ys,startIndicesWithElidedDims:()=>Hs,stopForAxis:()=>Xs,stopIndicesWithElidedDims:()=>qs,stridesForAxis:()=>Ks,stridesWithElidedDims:()=>Vs});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>uu,computeOutShape:()=>lu,segOpComputeOptimalWindowSize:()=>ou});var r={};n.r(r),n.d(r,{ERF_A1:()=>jl,ERF_A2:()=>Hl,ERF_A3:()=>ql,ERF_A4:()=>Kl,ERF_A5:()=>Yl,ERF_P:()=>Gl,PARALLELIZE_THRESHOLD:()=>Al,SELU_SCALE:()=>Ul,SELU_SCALEALPHA:()=>Vl,applyActivation:()=>Fo,assertAndGetBroadcastShape:()=>ni,assertAxesAreInnerMostDims:()=>Ri,assertParamsConsistent:()=>$l,assignToTypedArray:()=>ru,axesAreInnerMostDims:()=>Ei,calculateShapes:()=>Wl,castTensor:()=>cu,combineLocations:()=>$i,complexWithEvenIndex:()=>eu,complexWithOddIndex:()=>tu,computeConv2DInfo:()=>ka,computeConv3DInfo:()=>Ta,computeDefaultPad:()=>Na,computeDilation2DInfo:()=>va,computeOptimalWindowSize:()=>Rl,computeOutAndReduceShapes:()=>Ci,computeOutShape:()=>Cl,computePool2DInfo:()=>xa,computePool3DInfo:()=>wa,convertConv2DDataFormat:()=>Ra,eitherStridesOrDilationsAreOne:()=>Aa,expandShapeToKeepDim:()=>Ai,exponent:()=>au,exponents:()=>su,fromStringArrayToUint8:()=>pu,fromUint8ToStringArray:()=>du,getAxesPermutation:()=>_i,getBroadcastDims:()=>ei,getComplexWithIndex:()=>nu,getFusedBiasGradient:()=>Do,getFusedDyActivation:()=>_o,getImageCenter:()=>_l,getInnerMostAxes:()=>Fi,getPermuted:()=>Fl,getReductionAxes:()=>ti,getReshaped:()=>Dl,getReshapedPermuted:()=>Ml,getSliceBeginCoords:()=>Ol,getSliceSize:()=>Ll,getUndoAxesPermutation:()=>Di,log:()=>Zl,mergeRealAndImagArrays:()=>Ql,prepareAndValidate:()=>zl,prepareSplitSize:()=>iu,reshapeTensor:()=>hu,segment_util:()=>t,shouldFuse:()=>Mo,slice_util:()=>e,splitRealAndImagArrays:()=>Jl,tupleValuesAreOne:()=>Ca,upcastType:()=>Sr,validateInput:()=>Bl,validateUpdateShape:()=>Pl,warn:()=>Xl});var s={};n.r(s),n.d(s,{mx:()=>Zb,XI:()=>Uv,Nk:()=>Gv,YG:()=>qv,hH:()=>Jv,sG:()=>Px,uM:()=>Gx,vS:()=>hw,GG:()=>xw,rq:()=>kw,WR:()=>Mw,GE:()=>Ww,px:()=>Uw,jC:()=>sk,He:()=>ok,hE:()=>vk,BF:()=>qx,Dk:()=>Ck,_B:()=>Xk,qy:()=>Qk,Zy:()=>cT,dH:()=>iv,HS:()=>Pv,eW:()=>VT,dl:()=>ew,Dw:()=>qT,xT:()=>YT,_X:()=>pv,wz:()=>ZT});var a=n(5043),i=n(7950);class o{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class l{decComplexRef(e){}time(e){return u("time")}read(e){return u("read")}readSync(e){return u("readSync")}numDataIds(){return u("numDataIds")}disposeData(e){return u("disposeData")}write(e,t,n){return u("write")}move(e,t,n,r){return u("move")}memory(){return u("memory")}floatPrecision(){return u("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return u("batchMatMul")}fusedBatchMatMul(e){let{a:t,b:n,transposeA:r,transposeB:s,bias:a,activation:i,preluActivationWeights:o}=e;return u("fusedBatchMatMul")}slice(e,t,n){return u("slice")}stridedSlice(e,t,n,r){return u("stridedSlice")}unstack(e,t){return u("unstack")}reverse(e,t){return u("reverse")}concat(e,t){return u("concat")}neg(e){return u("neg")}add(e,t){return u("add")}addN(e){return u("addN")}subtract(e,t){return u("subtract")}multiply(e,t){return u("multiply")}realDivide(e,t){return u("realDivide")}floorDiv(e,t){return u("floorDiv")}sum(e,t){return u("sum")}prod(e,t){return u("prod")}unsortedSegmentSum(e,t,n){return u("unsortedSegmentSum")}argMin(e,t){return u("argMin")}argMax(e,t){return u("argMax")}equal(e,t){return u("equal")}notEqual(e,t){return u("notEqual")}less(e,t){return u("less")}lessEqual(e,t){return u("lessEqual")}greater(e,t){return u("greater")}greaterEqual(e,t){return u("greaterEqual")}logicalNot(e){return u("logicalNot")}logicalAnd(e,t){return u("logicalAnd")}logicalOr(e,t){return u("logicalOr")}where(e){return u("where")}select(e,t,n){return u("select")}topk(e,t,n){return u("topk")}min(e,t){return u("min")}minimum(e,t){return u("minimum")}mod(e,t){return u("mod")}max(e,t){return u("max")}maximum(e,t){return u("maximum")}all(e,t){return u("all")}any(e,t){return u("any")}squaredDifference(e,t){return u("squaredDifference")}ceil(e){return u("ceil")}floor(e){return u("floor")}round(e){return u("round")}sign(e){return u("sign")}isNaN(e){return u("isNaN")}isInf(e){return u("isInf")}isFinite(e){return u("isFinite")}pow(e,t){return u("pow")}exp(e){return u("exp")}expm1(e){return u("expm1")}softmax(e,t){return u("softmax")}log(e){return u("log")}log1p(e){return u("log1p")}sqrt(e){return u("sqrt")}rsqrt(e){return u("rsqrt")}square(e){return u("square")}reciprocal(e){return u("reciprocal")}relu(e){return u("relu")}relu6(e){return u("relu6")}prelu(e,t){return u("prelu")}elu(e){return u("elu")}eluDer(e,t){return u("eluDer")}selu(e){return u("selu")}int(e){return u("int")}clip(e,t,n){return u("clip")}abs(e){return u("abs")}complexAbs(e){return u("complexAbs")}sigmoid(e){return u("sigmoid")}softplus(e){return u("softplus")}sin(e){return u("sin")}cos(e){return u("cos")}tan(e){return u("tan")}asin(e){return u("asin")}acos(e){return u("acos")}atan(e){return u("atan")}atan2(e,t){return u("atan2")}sinh(e){return u("sinh")}cosh(e){return u("cosh")}tanh(e){return u("tanh")}asinh(e){return u("asinh")}acosh(e){return u("acosh")}atanh(e){return u("atanh")}erf(e){return u("erf")}step(e,t){return u("step")}fusedConv2d(e){let{input:t,filter:n,convInfo:r,bias:s,activation:a,preluActivationWeights:i}=e;return u("fusedConv2d")}conv2d(e,t,n){return u("conv2d")}conv2dDerInput(e,t,n){return u("conv2dDerInput")}conv2dDerFilter(e,t,n){return u("conv2dDerFilter")}fusedDepthwiseConv2D(e){let{input:t,filter:n,convInfo:r,bias:s,activation:a,preluActivationWeights:i}=e;return u("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return u("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return u("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return u("depthwiseConv2DDerFilter")}conv3d(e,t,n){return u("conv3d")}conv3dDerInput(e,t,n){return u("conv3dDerInput")}conv3dDerFilter(e,t,n){return u("conv3dDerFilter")}maxPool(e,t){return u("maxPool")}maxPoolBackprop(e,t,n,r){return u("maxPoolBackprop")}avgPool(e,t){return u("avgPool")}avgPoolBackprop(e,t,n){return u("avgPoolBackprop")}avgPool3d(e,t){return u("avgPool3d")}avgPool3dBackprop(e,t,n){return u("avgPool3dBackprop")}maxPool3d(e,t){return u("maxPool3d")}maxPool3dBackprop(e,t,n,r){return u("maxPool3dBackprop")}reshape(e,t){return u("reshape")}cast(e,t){return u("cast")}tile(e,t){return u("tile")}pad(e,t,n){return u("pad")}transpose(e,t){return u("transpose")}gather(e,t,n){return u("gather")}gatherND(e,t){return u("gatherND")}scatterND(e,t,n){return u("scatterND")}batchToSpaceND(e,t,n){return u("batchToSpaceND")}spaceToBatchND(e,t,n){return u("spaceToBatchND")}resizeBilinear(e,t,n,r,s){return u("resizeBilinear")}resizeBilinearBackprop(e,t,n){return u("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r,s){return u("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return u("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,s,a){return u("batchNorm")}localResponseNormalization4D(e,t,n,r,s){return u("localResponseNormalization4D")}LRNGrad(e,t,n,r,s,a,i){return u("LRNGrad")}multinomial(e,t,n,r){return u("multinomial")}oneHot(e,t,n,r){return u("oneHot")}cumsum(e,t,n,r){return u("cumsum")}nonMaxSuppression(e,t,n,r,s){return u("nonMaxSuppression")}fft(e){return u("fft")}ifft(e){return u("ifft")}complex(e,t){return u("complex")}real(e){return u("real")}imag(e){return u("imag")}cropAndResize(e,t,n,r,s,a){return u("cropAndResize")}depthToSpace(e,t,n){return u("depthToSpace")}split(e,t,n){return u("split")}sparseToDense(e,t,n,r){return u("sparseToDense")}diag(e){return u("diag")}fill(e,t,n){return u("fill")}onesLike(e){return u("onesLike")}zerosLike(e){return u("zerosLike")}linspace(e,t,n){return u("linspace")}dispose(){return u("dispose")}}function u(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function c(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function h(e,t,n){return Math.max(e,Math.min(t,n))}function d(e){return e%2===0?e:e+1}function p(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function f(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";p(b(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function m(e){p(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function g(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),Array.isArray(e)||C(e)&&!n)for(let r=0;r<e.length;++r)g(e[r],t,n);else t.push(e);return t}function y(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function v(e){return e%1===0}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0;return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function T(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function N(e,t){const n=t.length;return p((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),p(e.every((e=>v(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function S(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:N(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function I(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function $(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function C(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function A(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function R(e){return"string"===typeof e||e instanceof String}function _(e){return"number"===typeof e}function D(e){return Array.isArray(e)?D(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":_(e)?"float32":R(e)?"string":"boolean"===typeof e?"bool":"float32"}function F(e){return!!(e&&e.constructor&&e.call&&e.apply)}function M(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function O(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function L(e,t,n){const r=new Array;if(1===t.length){const s=t[0];for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],a=t.slice(1),i=a.reduce(((e,t)=>e*t));for(let t=0;t<s;t++)r[t]=L(e+t*i,a,n)}return r}function z(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return L(0,e,t)}function P(e,t){const n=B(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function B(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function W(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return z(e,new Float32Array(n));if("int32"===t)return z(e,new Int32Array(n));if("bool"===t)return z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function V(e){e.forEach((t=>{p(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function U(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function G(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function j(e){return e&&e.then&&"function"===typeof e.then}const H="tfjsflags";class q{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(j(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),s=1;s<n;s++)r[s-1]=arguments[s];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,r[0],r[1]),r.join("=")})),t}(this.global.location.search);if(H in e){e[H].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function K(){return X}let Y,X=null;function Z(){if(null==Y){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}Y=e}return Y}function Q(e,t){const n=function(){const e=Z();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const J="Abs",ee="Acos",te="Acosh",ne="Add",re="AddN",se="All",ae="Any",ie="ArgMax",oe="ArgMin",le="Asin",ue="Asinh",ce="Atan",he="Atanh",de="Atan2",pe="AvgPool",fe="AvgPoolGrad",me="AvgPool3D",ge="AvgPool3DGrad",ye="BatchMatMul",be="BatchToSpaceND",ve="Bincount",xe="Cast",we="Ceil",ke="ClipByValue",Te="Complex",Ne="ComplexAbs",Se="Concat",Ie="Conv2D",Ee="Conv2DBackpropFilter",$e="Conv2DBackpropInput",Ce="Conv3D",Ae="Conv3DBackpropFilterV2",Re="Conv3DBackpropInputV2",_e="Cos",De="Cosh",Fe="Cumsum",Me="CropAndResize",Oe="DenseBincount",Le="DepthToSpace",ze="DepthwiseConv2dNative",Pe="DepthwiseConv2dNativeBackpropFilter",Be="DepthwiseConv2dNativeBackpropInput",We="Diag",Ve="Dilation2D",Ue="Dilation2DBackpropInput",Ge="Dilation2DBackpropFilter",je="RealDiv",He="Elu",qe="EluGrad",Ke="Erf",Ye="Equal",Xe="Exp",Ze="ExpandDims",Qe="Expm1",Je="FFT",et="Fill",tt="FlipLeftRight",nt="Floor",rt="FloorDiv",st="FusedBatchNorm",at="GatherV2",it="GatherNd",ot="Greater",lt="GreaterEqual",ut="Identity",ct="IFFT",ht="Imag",dt="IsFinite",pt="IsInf",ft="IsNan",mt="LeakyRelu",gt="Less",yt="LessEqual",bt="LinSpace",vt="Log",xt="Log1p",wt="LogicalAnd",kt="LogicalNot",Tt="LogicalOr",Nt="LRN",St="LRNGrad",It="Max",Et="Maximum",$t="MaxPool",Ct="MaxPoolGrad",At="MaxPool3D",Rt="MaxPool3DGrad",_t="MaxPoolWithArgmax",Dt="Mean",Ft="Min",Mt="Minimum",Ot="MirrorPad",Lt="Mod",zt="Multinomial",Pt="Multiply",Bt="Neg",Wt="NotEqual",Vt="NonMaxSuppressionV3",Ut="NonMaxSuppressionV4",Gt="NonMaxSuppressionV5",jt="OnesLike",Ht="OneHot",qt="Pack",Kt="PadV2",Yt="Pow",Xt="Prelu",Zt="Prod",Qt="Range",Jt="Real",en="Reciprocal",tn="Relu",nn="Reshape",rn="ResizeNearestNeighbor",sn="ResizeNearestNeighborGrad",an="ResizeBilinear",on="ResizeBilinearGrad",ln="Relu6",un="Reverse",cn="Round",hn="Rsqrt",dn="ScatterNd",pn="Select",fn="Selu",mn="Slice",gn="Sin",yn="Sinh",bn="Sign",vn="Sigmoid",xn="Softplus",wn="Sqrt",kn="Sum",Tn="SpaceToBatchND",Nn="SplitV",Sn="Softmax",In="SquaredDifference",En="Square",$n="Sub",Cn="SparseToDense",An="StridedSlice",Rn="Tan",_n="Tanh",Dn="Tile",Fn="TopK",Mn="Transpose",On="Unique",Ln="Unpack",zn="UnsortedSegmentSum",Pn="ZerosLike",Bn="Step",Wn="FromPixels",Vn="RotateWithOffset",Un="_FusedMatMul",Gn="FusedConv2D",jn="FusedDepthwiseConv2D",Hn=Q("kernelRegistry",(()=>new Map)),qn=Q("gradRegistry",(()=>new Map));function Kn(e,t){const n=Jn(e,t);return Hn.get(n)}function Yn(e){return qn.get(e)}function Xn(e){const t=Hn.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Zn(e){const{kernelName:t,backendName:n}=e,r=Jn(t,n);Hn.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Hn.set(r,e)}function Qn(e){const{kernelName:t}=e;qn.has(t)&&K().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),qn.set(t,e)}function Jn(e,t){return`${t}_${e}`}class er{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new nr)}profileKernel(e,t,n){let r;const s=this.backendTimer.time((()=>{r=n()}));if(K().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then((n=>{tr(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function tr(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class nr{logKernelProfile(e,t,n,r,s,a){const i="number"===typeof r?w(`${r}ms`,9):r.error,o=w(e,25),l=t.rank,u=t.size,c=w(t.shape.toString(),14);let h="";for(const d in s){const e=s[d];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function rr(e,t,n,r){const s=O(t),a=function(e,t,n,r){const s=y(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?or(e):e;if(o>1)for(let u=0;u<s/a;u++){const e=u*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],sr(l[e+t],0,n).length)}return i}(e,t,n,s),i=t.length,o=ir(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function sr(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:R(e)?`'${e}'`:"bool"===n?ar(e):parseFloat(e.toFixed(7)).toString(),w(r,t)}function ar(e){return 0===e?"false":"true"}function ir(e,t,n,r,s){let a=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[sr(or(e)[0],0,n)]}return"bool"===n?[ar(e[0])]:[e[0].toString()]}if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=or(r),a=or(a)),["["+r.map(((e,t)=>sr(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>sr(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?or(e):Array.from(e)).map(((e,t)=>sr(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...ir(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...ir(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let m=0;m<o;m++){const t=m*h,r=t+h;d.push(...ir(e.slice(t,r),u,n,c,s,m===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function or(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function lr(e,t){return"string"===t?hr(e):ur([e],t)}function ur(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=g(e)),K().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function cr(){return K().platform.now()}function hr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",K().platform.encode(e,t)}function dr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",K().platform.decode(e,t)}class pr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=y(e),null!=n){const e=n.length;p(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||E(t,this.size),this.strides=O(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),p(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const a of t){if(a<0||a>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let s=t[t.length-1];for(let a=0;a<t.length-1;++a)s+=this.strides[a]*t[a];return this.values[s]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return fr().makeTensor(this.values,this.shape,this.dtype)}}let fr=null,mr=null,gr=null;class yr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=y(e),this.strides=O(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return mr.buffer(this.shape,this.dtype,e)}bufferSync(){return mr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return z(this.shape,e)}arraySync(){return z(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=fr().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>dr(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=fr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>dr(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await fr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(fr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return mr.print(this,e)}clone(){return this.throwIfDisposed(),mr.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return rr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),mr.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),fr().makeVariable(this,e,t,n)}}Object.defineProperty(yr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class br extends yr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!b(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);fr().disposeTensor(this),this.dataId=e.dataId,fr().incRef(this,null)}dispose(){fr().disposeVariable(this),this.isDisposedInternal=!0}}var vr,xr,wr,kr,Tr;Object.defineProperty(br,Symbol.hasInstance,{value:e=>e instanceof yr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(vr||(vr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(xr||(xr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(wr||(wr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(kr||(kr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Tr||(Tr={}));const Nr={float32:kr,int32:xr,bool:wr,complex64:Tr};function Sr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Nr[e][t]}function Ir(e){return Sr(e,"int32")}function Er(e,t){if(e.dtype===t.dtype)return[e,t];const n=Sr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function $r(e,t){return t.some((t=>t.id===e.id))}function Cr(e){const t=[];return Ar(e,t,new Set),t}function Ar(e,t,n){if(null==e)return;if(e instanceof yr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!==typeof r)return;var r;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),Ar(e,t,n))}}class Rr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class _r{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Rr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new er(this.backendInstance),!0}setupRegisteredKernels(){Xn(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Xn(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof l||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return _r.nextTensorId++}nextVariableId(){return _r.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return Fr.runKernelFunc((n=>n.cast(e,t)),n,null,xe,r)}})),[],{}),t}runKernel(e,t,n,r,s){return this.runKernelFunc(null,t,null,e,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,s,a,i){let o,l=[];const u=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const p=Kn(r,this.backendName);let f,m;if(null!=p)d=()=>{const e=this.backend.numDataIds();f=p.kernelFunc({inputs:t,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const o=n.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(u){let e=this.getTensorsForGradient(r,t,o);if(null==e){null==i&&(i=[]);const t=o.filter(((e,t)=>i[t]));e=(a||[]).slice().concat(t)}l=this.saveTensorsForBackwardMode(e)}return o};else{if(null==e)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const t=e=>{u&&(l=e.map((e=>this.keep(this.clone(e)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>e(this.backend,t)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,t,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=d()})),u&&this.addTapeNode(r,t,o,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:o.map((e=>e.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Yn(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(p(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&R(e[0])&&(s=e.map((e=>hr(e))));const a=r.write(s,t,n),i=new yr(t,n,a,this.nextTensorId());if(this.incRef(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new yr(t,n=n||"float32",e,this.nextTensorId());return this.incRef(s,r),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new br(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*A(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof br||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Yn(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=B(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Cr(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(p(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));p(s instanceof yr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(s[t.id]&&i[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=P(y(e),"float32");return Fr.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!b(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Mr);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){var t=this;return p(F(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];let a;p(r.every((e=>e instanceof yr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const i={};return r.forEach(((e,t)=>{i[t]=e})),t.runKernelFunc(((t,n)=>(a=e(...r,n),p(a.value instanceof yr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),p(F(a.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),a.value)),i,((e,t)=>{const n=a.gradFunc(e,t),s=Array.isArray(n)?n:[n];p(s.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),p(s.every((e=>e instanceof yr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=cr(),n=await this.backend.time(e);return n.wallMs=cr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Rr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Dr(){const e=Z();if(null==e._tfengine){const t=new q(e);e._tfengine=new _r(t)}var t;return t=e._tfengine.ENV,X=t,fr=()=>e._tfengine,e._tfengine}_r.nextTensorId=0,_r.nextVariableId=0;const Fr=Dr();function Mr(e,t){const n={a:e,b:t};return Fr.runKernel(ne,n)}function Or(){if("undefined"!==typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Lr(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const zr=K();function Pr(e,t){let n=e;if(C(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||C(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&K().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Br(e,r,[]),r}function Br(e,t,n){if(n=n||[],!Array.isArray(e)&&!C(e))return void p(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));p(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),p(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)Br(e[s],r,n.concat(s))}function Wr(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Vr(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof yr)return Wr(r,e.dtype,t,n),e;let s=D(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Wr(r,s,t,n),null==e||!C(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Pr(e,s);C(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?ur(e,s):g(e,[],!0);return Fr.makeTensor(i,a,s)}function Ur(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Vr(e,`${t}[${s}]`,n,r)))}zr.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),zr.registerFlag("IS_BROWSER",(()=>Lr())),zr.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),zr.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),zr.registerFlag("PROD",(()=>!1)),zr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>zr.getBool("DEBUG"))),zr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),zr.registerFlag("IS_TEST",(()=>!1)),zr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));function Gr(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=function(){Fr.startScope(n);try{const e=r(...arguments);return j(e)&&console.error("Cannot return a Promise inside of tidy."),Fr.endScope(e),e}catch(e){throw Fr.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const jr=Gr({complex_:function(e,t){const n=Vr(e,"real","complex"),r=Vr(t,"imag","complex");f(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Fr.runKernel(Te,s)}});function Hr(e,t,n,r){if(null==r&&(r=D(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!C(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){V(t);const e=y(t),r=y(n);p(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==y(t.slice(s));p(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return C(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ur(e,r):g(e,[],!0),Fr.makeTensor(e,t,r)}function qr(e,t,n){return Hr(e,t,Pr(e,n),n)}async function Kr(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=4,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Yr(await Promise.all(r)),specs:n}}function Yr(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Xr="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Zr(e){return Xr?Buffer.byteLength(e):new Blob([e]).size}function Qr(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Jr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Zr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Zr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class es{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==es.instance&&(es.instance=new es),es.instance}static registerSaveRouter(e){es.getInstance().saveRouters.push(e)}static registerLoadRouter(e){es.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return es.getHandlers(e,"save")}static getLoadHandlers(e,t){return es.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?es.getInstance().loadRouters:es.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const ts="tensorflowjs",ns="models_store",rs="model_info_store";function ss(){if(!K().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function as(e){const t=e.result;t.createObjectStore(ns,{keyPath:"modelPath"}),t.createObjectStore(rs,{keyPath:"modelPath"})}class is{constructor(e){if(this.indexedDB=ss(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(ts,1);r.onupgradeneeded=()=>as(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(ns,"readonly"),r=t.objectStore(ns).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Jr(t),a=s.transaction(rs,"readwrite");let i=a.objectStore(rs);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(ns,"readwrite");const o=l.objectStore(ns).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(rs);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}is.URL_SCHEME="indexeddb://";const os=e=>{return K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(is.URL_SCHEME)?(t=e.slice(is.URL_SCHEME.length),new is(t)):null;var t};es.registerSaveRouter(os),es.registerLoadRouter(os);class ls{constructor(){this.indexedDB=ss()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(ts,1);n.onupgradeneeded=()=>as(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(rs,"readonly"),a=s.objectStore(rs).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(is.URL_SCHEME)?t.slice(is.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(ts,1);r.onupgradeneeded=()=>as(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(rs,"readwrite"),i=a.objectStore(rs),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(ns,"readwrite");const r=l.objectStore(ns).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const us="/",cs="tensorflowjs_models",hs="info",ds="model_topology",ps="weight_specs",fs="weight_data",ms="model_metadata";function gs(e){return{info:[cs,e,hs].join(us),topology:[cs,e,ds].join(us),weightSpecs:[cs,e,ps].join(us),weightData:[cs,e,fs].join(us),modelMetadata:[cs,e,ms].join(us)}}function ys(e){const t=e.split(us);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(us)}class bs{constructor(e){if(!K().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=gs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Jr(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(Xr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Xr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(a),t}}bs.URL_SCHEME="localstorage://";const vs=e=>{return K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(bs.URL_SCHEME)?(t=e.slice(bs.URL_SCHEME.length),new bs(t)):null;var t};es.registerSaveRouter(vs),es.registerLoadRouter(vs);class xs{constructor(){p(K().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),p("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=cs+us,n=us+hs;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[ys(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=gs(e=(t=e).startsWith(bs.URL_SCHEME)?t.slice(bs.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const ws="://";class ks{constructor(){this.managers={}}static getInstance(){return null==ks.instance&&(ks.instance=new ks),ks.instance}static registerManager(e,t){p(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ws)&&(e=e.slice(0,e.indexOf(ws))),p(e.length>0,(()=>"scheme must not be an empty string."));const n=ks.getInstance();p(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Ts{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(K().get("IS_BROWSER")){K().setPlatform("browser",new Ts);try{ks.registerManager(bs.URL_SCHEME,new xs)}catch(__){}try{ks.registerManager(is.URL_SCHEME,new ls)}catch(__){}}const Ns=()=>n(7078);let Ss;class Is{constructor(){this.util=n(6905),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=K().global.fetch?K().global.fetch(e,t):(null==Ss&&(Ss=Ns()),Ss(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}function Es(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",V(e),new pr(e,t,n)}K().get("IS_NODE")&&K().setPlatform("node",new Is);const $s=Gr({cast_:function(e,t){const n=Vr(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Fr.runKernel(xe,r,s)}});const Cs=Gr({clone_:function(e){const t={x:Vr(e,"x","clone","string_or_numeric")};return Fr.runKernel(ut,t)}});Dr();mr={buffer:Es,cast:$s,clone:Cs,print:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}};function As(e){return new Promise((e=>setTimeout(e))).then(e)}class Rs{constructor(e){if(!K().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Rs.URL_SCHEME)&&(e=e.slice(Rs.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await As((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await As((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Jr(e)}}}}Rs.URL_SCHEME="downloads://";function _s(e,t,n,r){!function(e){p(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){p(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),p(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),p(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Ds(e,t){null==t&&(t={});const n=null==t.fetchFunc?K().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await _s(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await _s(s,t.onProgress,.5,1)}es.registerSaveRouter((e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Rs.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Rs(e)}(e.slice(Rs.URL_SCHEME.length)):null));class Fs{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(p("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=K().platform.fetch,p(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&p(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Jr(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(p){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=[];for(const l of e)a.push(...l.weights);const i=[],o=[];for(const l of e)for(const e of l.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));return[a,Qr(await Ds(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ms(e){return null!=e.match(Fs.URL_SCHEME_REGEX)}Fs.URL_SCHEME_REGEX=/^https?:\/\//;const Os=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ms(e))):Ms(e),n)return Ls(e,t)}return null};function Ls(e,t){return new Fs(e,t)}es.registerSaveRouter(Os),es.registerLoadRouter(Os);let zs;Gr({fromPixels_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Kn(Wn,Fr.backendName)){const n={pixels:e},r={numChannels:t};return Fr.runKernel(Wn,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i?c=e.getContext("2d").getImageData(0,0,l,u).data:r||n?c=e.data:(a||s||o)&&(null==zs&&(zs=document.createElement("canvas").getContext("2d")),zs.canvas.width=l,zs.canvas.height=u,zs.drawImage(e,0,0,l,u),c=zs.getImageData(0,0,l,u).data),4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(m(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Pr(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Hr(e,t,r,n)}(h,[u,l,t],"int32")}});function Ps(e,t,n){const r=e.shape.length;p(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),p(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)p(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Bs(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ws(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Vs(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Us(e,t,n){return n<=e?n:n-(t-1)}function Gs(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function js(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Hs(i,l,u,r,e),h=qs(o,l,u,s,e),d=Vs(a,l,u,e)}else for(let p=0;p<u;p++)c[p]=Ys(i,r,a,e,p,l),h[p]=Xs(o,s,a,e,p,l),d[p]=Ks(a,p,l);return{begin:c,end:h,strides:d}}function Hs(e,t,n,r,s){const a=[...s],i=Gs(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const s=Us(t,n,o);let i=r[s];e&1<<s&&(i=0),a[o]=i}return a}function qs(e,t,n,r,s){const a=[...s],i=Gs(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{const s=Us(t,n,o);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),a[o]=i}for(let o=0;o<a.length;o++){const e=s[o];a[o]<0&&(a[o]+=e),a[o]=h(0,a[o],s[o])}return a}function Ks(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Ys(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=h(0,i,l-1),i}function Xs(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?h(0,i,l):h(-1,i,l-1),i}function Zs(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Qs(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Js(e,t,n){let r;const s=e.shape.length;let a;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{p(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(p(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function ea(e,t,n,r,s,a,i,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=Bs(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=Bs(o),m=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:y,strides:b}=js(m,d,p,u,c,h,s,a,i);u=g,c=y,h=b;const v=Bs(l);v.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const x=Ws(u,c,h),w=x.filter(((e,t)=>-1===v.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:x,newShape:m,outShape:w}}class ta{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class na{constructor(){this.classNameMap={}}static getMap(){return null==na.instance&&(na.instance=new na),na.instance}static register(e){na.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ra(e){p(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),p("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),p(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),na.register(e)}function sa(e){K().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function aa(){return Fr}function ia(){return Fr.memory()}function oa(e,t){return Fr.tidy(e,t)}function la(e){Cr(e).forEach((e=>e.dispose()))}function ua(e){return Fr.keep(e)}function ca(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Fr.registerBackend(e,t,n)}function ha(e){return Fr.customGrad(e)}function da(e,t){if((C(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&C(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Hr(e,[],[],t)}gr=sa;class pa extends ta{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return la(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){p(F(e),(()=>"The f passed in variableGrads(f) must be a function")),p(null==t||Array.isArray(t)&&t.every((e=>e instanceof br)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Fr.registeredVariables)t.push(Fr.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),p(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=Fr.gradients(e,t,null,!0);p(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),p(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&la(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:da(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(pa,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const fa=Gr({abs_:function(e){const t=Vr(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Fr.runKernel(Ne,e)}{const e={x:t};return Fr.runKernel(J,e)}}});const ma=Gr({add_:function(e,t){let n=Vr(e,"a","add"),r=Vr(t,"b","add");[n,r]=Er(n,r);const s={a:n,b:r};return Fr.runKernel(ne,s)}});const ga=Gr({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:Vr(e,"x","all","bool")},s={axis:t,keepDims:n};return Fr.runKernel(se,r,s)}});const ya=Gr({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:Vr(e,"x","any","bool")},s={axis:t,keepDims:n};return Fr.runKernel(ae,r,s)}});const ba=Gr({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Vr(e,"x","argMax")},r={axis:t};return Fr.runKernel(ie,n,r)}});function va(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5?arguments[5]:void 0;return ka(e,[...t,e[3]],n,a,r,null,null,Ra(s))}function xa(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[o,l]=Sa(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return ka(e,u,n,r,s,a,!1,i)}function wa(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[o,l,u]=Ia(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Ta(e,c,n,r,s,!1,h,a)}function ka(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=Sa(n),[y,b]=Sa(r),v=Ea(d,y),x=Ea(p,b),{padInfo:w,outHeight:k,outWidth:T}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Na(e,t,n));const a=e[0],i=e[1],o=$a((a-t+2*r)/n+1,s),l=$a((i-t+2*r)/n+1,s);return[o,l]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=$a((t-a+d+p)/r+1,o),h=$a((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,v,x,a,o),N=i?f*h:f;let S;return"channelsFirst"===o?S=[l,N,k,T]:"channelsLast"===o&&(S=[l,k,T,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:T,outChannels:N,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Ta(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[y,b,v]=Ia(n),[x,w,k]=Ia(r),T=Ea(p,x),N=Ea(f,w),S=Ea(m,k),{padInfo:I,outDepth:E,outHeight:$,outWidth:C}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=Na(e,t,r));const i=e[0],o=e[1],l=e[2],u=$a((i-t+2*s)/r+1,a),c=$a((o-t+2*s)/r+1,a),h=$a((l-t+2*s)/r+1,a);return[u,c,h,n]}([t,n,r,1],o,1,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),v=c-b,x=Math.floor(m/2);h={top:b,bottom:v,left:x,right:m-x,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,v,T,N,S,o),A=a?g*d:g;let R;return"channelsFirst"===i?R=[l,A,E,$,C]:"channelsLast"===i&&(R=[l,E,$,C,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:E,outHeight:$,outWidth:C,outChannels:A,padInfo:I,strideDepth:y,strideHeight:b,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:T,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:x,dilationHeight:w,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function Na(e,t,n){const r=Ea(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}function Sa(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ia(e){return"number"===typeof e?[e,e,e]:e}function Ea(e,t){return t<=1?e:e+(e-1)*(t-1)}function $a(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ca(e){const[t,n,r]=Sa(e);return 1===t&&1===n&&1===r}function Aa(e,t){return Ca(e)||Ca(t)}function Ra(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const _a=Gr({reshape_:function(e,t){const n={x:Vr(e,"x","reshape","string_or_numeric")},r={shape:t};return Fr.runKernel(nn,n,r)}});const Da=Gr({avgPool_:function(e,t,n,r,s){const a=Vr(e,"x","avgPool","float32");p(Aa(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=_a(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&p(v(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Fr.runKernel(pe,l,u);return c=$s(c,a.dtype),o?_a(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Fa=Gr({avgPool3d_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",i=arguments.length>6?arguments[6]:void 0;null==i?i=[1,1,1]:sa("dilations is deprecated, this field will be gone in v3.0.0.");const o=Vr(e,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=_a(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),p(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),p("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),p(Aa(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&p(v(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let d=Fr.runKernel(me,c,h);return d=$s(d,l.dtype),u?_a(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Ma=Gr({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Vr(e,"x","batchNorm"),o=Vr(t,"mean","batchNorm"),l=Vr(n,"variance","batchNorm");let u,c;null!=s&&(u=Vr(s,"scale","batchNorm")),null!=r&&(c=Vr(r,"offset","batchNorm")),p(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?_a(e,[1,1,1,e.size]):2===e.rank?_a(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?_a(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},f=Fr.runKernel(st,h,d);return _a(f,i.shape)}});const Oa=Gr({batchNorm2d_:function(e,t,n,r,s,a){const i=Vr(e,"x","batchNorm"),o=Vr(t,"mean","batchNorm"),l=Vr(n,"variance","batchNorm");let u,c;return null!=s&&(u=Vr(s,"scale","batchNorm")),null!=r&&(c=Vr(r,"offset","batchNorm")),p(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),p(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),p(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Ma(i,o,l,c,u,a)}});const La=Gr({batchNorm3d_:function(e,t,n,r,s,a){const i=Vr(e,"x","batchNorm"),o=Vr(t,"mean","batchNorm"),l=Vr(n,"variance","batchNorm");let u,c;return null!=s&&(u=Vr(s,"scale","batchNorm")),null!=r&&(c=Vr(r,"offset","batchNorm")),p(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),p(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),p(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Ma(i,o,l,c,u,a)}});const za=Gr({batchNorm4d_:function(e,t,n,r,s,a){const i=Vr(e,"x","batchNorm"),o=Vr(t,"mean","batchNorm"),l=Vr(n,"variance","batchNorm");let u,c;return null!=s&&(u=Vr(s,"scale","batchNorm")),null!=r&&(c=Vr(r,"offset","batchNorm")),p(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),p(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),p(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Ma(i,o,l,c,u,a)}});const Pa=Gr({clipByValue_:function(e,t,n){const r=Vr(e,"x","clipByValue");p(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return Fr.runKernel(ke,s,a)}});const Ba=Gr({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;p(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ur(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Cs(n[0]);const r=n,s={axis:t};return Fr.runKernel(Se,r,s)}});const Wa=Gr({concat1d_:function(e){return Ba(e,0)}});const Va=Gr({concat2d_:function(e,t){return Ba(e,t)}});const Ua=Gr({concat3d_:function(e,t){return Ba(e,t)}});const Ga=Gr({concat4d_:function(e,t){return Ba(e,t)}});const ja=Gr({conv2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=Vr(e,"x","conv2d"),l=Vr(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=_a(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),p(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&p(v(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];p(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),p(Aa(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:u,filter:l},f={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},m=Fr.runKernel(Ie,d,f);return c?_a(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Ha=Gr({conv1d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0;const o=Vr(e,"x","conv1d"),l=Vr(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=_a(o,[1,o.shape[0],o.shape[1]])),p(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),p(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&p(v(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),p(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),p(Aa(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),p("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=_a(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=_a(u,[u.shape[0],1,u.shape[1],u.shape[2]]),f=ja(d,h,[1,n],r,"NHWC",[1,a],i);return _a(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}});const qa=Gr({conv2DBackpropInput_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0;p(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=_a(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),p(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),p(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),p(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];p(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),p(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&p(v(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const d={dy:l,filter:n},f={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},m=Fr.runKernel($e,d,f);return u?_a(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Ka=Gr({conv2dTranspose_:function(e,t,n,r,s,a){const i=Vr(e,"x","conv2dTranspose"),o=Vr(t,"filter","conv2dTranspose");return qa(n,i,o,r,s,"NHWC",a)}});const Ya=Gr({conv3d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const i=Vr(e,"x","conv3d"),o=Vr(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=_a(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),p(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),p(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),p(Aa(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),p("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=Fr.runKernel(Ce,c,h);return u?_a(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Xa=Gr({depthwiseConv2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=Vr(e,"x","depthwiseConv2d"),l=Vr(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=_a(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),p(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),p(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&p(v(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Fr.runKernel(ze,h,d);return c?_a(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Za=Gr({floorDiv_:function(e,t){let n=Vr(e,"a","floorDiv"),r=Vr(t,"b","floorDiv");[n,r]=Er(n,r);const s={a:n,b:r};return Fr.runKernel(rt,s)}});const Qa=Gr({div_:function(e,t){let n=Vr(e,"a","div"),r=Vr(t,"b","div");if([n,r]=Er(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Za(n,r);const s={a:n,b:r};return Fr.runKernel(je,s,{})}});const Ja=Gr({elu_:function(e){const t={x:Vr(e,"x","elu")};return Fr.runKernel(He,t)}});function ei(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function ti(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function ni(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}const ri=Gr({equal_:function(e,t){let n=Vr(e,"a","equal"),r=Vr(t,"b","equal");[n,r]=Er(n,r),ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(Ye,s)}});const si=Gr({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Vr(e,"x","expandDims","string_or_numeric");p(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Fr.runKernel(Ze,r,s)}});const ai=Gr({tile_:function(e,t){const n=Vr(e,"x","tile","string_or_numeric");p(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Fr.runKernel(Dn,r,s)}});const ii=Gr({eye_:function(e,t,n){null==t&&(t=e);const r=Es([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),s=e<=t?e:t;for(let i=0;i<s;++i)r.set(1,i,i);const a=_a(r.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return ai(si(a,0),[n[0],1,1]);if(2===n.length)return ai(si(si(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return ai(si(si(si(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function oi(e,t,n){const r={shape:e,value:t,dtype:n};return Fr.runKernel(et,{},r)}const li=Gr({floor_:function(e){const t={x:Vr(e,"x","floor")};return Fr.runKernel(nt,t)}});const ui=Gr({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const s={x:Vr(e,"x","gather"),indices:Vr(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Fr.runKernel(at,s,a)}});const ci=Gr({greater_:function(e,t){let n=Vr(e,"a","greater"),r=Vr(t,"b","greater");[n,r]=Er(n,r),ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(ot,s)}});const hi=Gr({greaterEqual_:function(e,t){let n=Vr(e,"a","greaterEqual"),r=Vr(t,"b","greaterEqual");[n,r]=Er(n,r),ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(lt,s)}});const di=Gr({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:Vr(e,"x","leakyRelu")},r={alpha:t};return Fr.runKernel(mt,n,r)}});const pi=Gr({log_:function(e){const t={x:Vr(e,"x","log")};return Fr.runKernel(vt,t)}});const fi=Gr({exp_:function(e){const t={x:Vr(e,"x","exp")};return Fr.runKernel(Xe,t)}});const mi=Gr({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:Vr(e,"x","max")},s={reductionIndices:t,keepDims:n};return Fr.runKernel(It,r,s)}});const gi=Gr({mul_:function(e,t){let n=Vr(e,"a","mul"),r=Vr(t,"b","mul");[n,r]=Er(n,r);const s={a:n,b:r};return Fr.runKernel(Pt,s)}});const yi=Gr({sub_:function(e,t){let n=Vr(e,"a","sub"),r=Vr(t,"b","sub");[n,r]=Er(n,r);const s={a:n,b:r};return Fr.runKernel($n,s)}});const bi=Gr({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Vr(e,"x","sum");"bool"===r.dtype&&(r=$s(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Fr.runKernel(kn,s,a)}});const vi=Gr({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Vr(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=ha(((e,n)=>{const r=mi(e,t,!0),s=yi(e,r),a=yi($s(s,"float32"),pi(bi(fi(s),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,s=fi(r);return yi(e,gi(bi(e,t,!0),s))}}}));return r(n)}});const xi=Gr({logicalAnd_:function(e,t){const n=Vr(e,"a","logicalAnd","bool"),r=Vr(t,"b","logicalAnd","bool");ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(wt,s)}});const wi=Gr({maxPool_:function(e,t,n,r,s){const a=Vr(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=_a(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),p(Aa(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&p(v(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Fr.runKernel($t,l,u);return o?_a(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const ki=Gr({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",i=arguments.length>6?arguments[6]:void 0;null==i?i=[1,1,1]:sa("dilations is deprecated, this field will be gone in v3.0.0.");const o=Vr(e,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=_a(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),p(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),p("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),p(Aa(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&p(v(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},d=Fr.runKernel(At,c,h);return u?_a(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Ti=Gr({maximum_:function(e,t){let n=Vr(e,"a","maximum"),r=Vr(t,"b","maximum");[n,r]=Er(n,r),"bool"===n.dtype&&(n=$s(n,"int32"),r=$s(r,"int32")),ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(Et,s)}});const Ni=Gr({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:Vr(e,"x","mean")},s={axis:t,keepDims:n};return Fr.runKernel(Dt,r,s)}});const Si=Gr({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:Vr(e,"x","min")},s={axis:t,keepDims:n};return Fr.runKernel(Ft,r,s)}});const Ii=Gr({minimum_:function(e,t){let n=Vr(e,"a","minimum"),r=Vr(t,"b","minimum");[n,r]=Er(n,r),"bool"===n.dtype&&(n=$s(n,"int32"),r=$s(r,"int32")),ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(Mt,s)}});function Ei(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function $i(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Ci(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Ai(e,t){return $i(e,t.map((e=>1)),t)}function Ri(e,t,n){p(Ei(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function _i(e,t){if(Ei(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Di(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Fi(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Mi=Gr({square_:function(e){const t=Vr(e,"x","square");return Fr.runKernel("Square",{x:t},{})}});const Oi=Gr({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=N(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=Vr(e,"x","moments")).shape),r=Ni(e,n,t);let s=r.shape;t||(s=Ai(r.shape,n));const a=Mi(yi($s(e,"float32"),_a(r,s)));return{mean:r,variance:Ni(a,n,t)}}});const Li=Gr({neg_:function(e){const t={x:Vr(e,"x","neg")};return Fr.runKernel(Bt,t)}});const zi=Gr({notEqual_:function(e,t){let n=Vr(e,"a","notEqual"),r=Vr(t,"b","notEqual");[n,r]=Er(n,r),ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(Wt,s)}});const Pi=Gr({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Vr(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return Fr.runKernel(Ht,s,a)}});function Bi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=Bi(e,"float32"),n=Bi(e,"float32");return jr(t,n)}const n=B(y(e),t);return Fr.makeTensor(n,e,t)}function Wi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=Wi(e,"float32"),n=Bi(e,"float32");return jr(t,n)}const n=P(y(e),t);return Fr.makeTensor(n,e,t)}const Vi=Gr({onesLike_:function(e){const t={x:Vr(e,"x","onesLike")};return Fr.runKernel(jt,t)}});const Ui=Gr({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=Vr(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Fr.runKernel(Kt,a,s)}});const Gi=Gr({prelu_:function(e,t){const n={x:Vr(e,"x","prelu"),alpha:Vr(t,"alpha","prelu")};return Fr.runKernel(Xt,n)}});var ji=n(7877);class Hi{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=ji.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class qi{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ji.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ki=Gr({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Hi(t,n,r,!1,s),i=Es(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Yi=Gr({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>4?arguments[4]:void 0;const s=Es(e,arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),a=new qi(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}});const Xi=Gr({relu_:function(e){const t={x:Vr(e,"x","relu")};return Fr.runKernel(tn,t)}});const Zi=Gr({reverse_:function(e,t){const n={x:Vr(e,"x","reverse")},r={dims:t};return Fr.runKernel(un,n,r)}});const Qi=Gr({selu_:function(e){const t={x:Vr(e,"x","selu")};return Fr.runKernel(fn,t)}});const Ji=Gr({separableConv2d_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const o=Vr(e,"x","separableConv2d"),l=Vr(t,"depthwiseFilter","separableConv2d"),u=Vr(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=_a(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");p(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),p(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),p(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),p(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),p(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],f=l.shape[3];p(u.shape[2]===d*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${u.shape[2]}.`));const m=Xa(c,l,r,s,i,a),g=ja(m,u,1,"valid",i);return h?_a(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const eo=Gr({sigmoid_:function(e){const t={x:Vr(e,"x","sigmoid")};return Fr.runKernel(vn,t)}});const to=Gr({slice_:function(e,t,n){const r=Vr(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Fr.runKernel(mn,s,a)}});const no=Gr({slice1d_:function(e,t,n){const r=Vr(e,"x","slice1d");return p(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),to(r,[t],[n])}});const ro=Gr({slice2d_:function(e,t,n){const r=Vr(e,"x","slice2d");return p(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),to(r,t,n)}});const so=Gr({slice3d_:function(e,t,n){const r=Vr(e,"x","slice3d");return p(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),to(r,t,n)}});const ao=Gr({slice4d_:function(e,t,n){const r=Vr(e,"x","slice4d");return p(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),to(r,t,n)}});const io=Gr({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Vr(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Fr.runKernel(Sn,r,s)}});const oo=Gr({softplus_:function(e){const t={x:Vr(e,"x","softplus")};return Fr.runKernel(xn,t)}});const lo=Gr({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r={x:Vr(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Fr.runKernel(Nn,r,s)}});const uo=Gr({sqrt_:function(e){const t={x:Vr(e,"x","sqrt")};return Fr.runKernel(wn,t)}});const co=Gr({squeeze_:function(e,t){const n=Vr(e,"x","squeeze");return _a(n,S(n.shape,t).newShape)}});const ho=Gr({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Ur(e,"tensors","stack","string_or_numeric");p(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&p(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Fr.runKernel(qt,r,s)}});const po=Gr({tanh_:function(e){const t={x:Vr(e,"x","tanh")};return Fr.runKernel(_n,t)}});function fo(e,t){m(e);const n=Pr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Hr(e,null,n,t)}function mo(e,t,n){if(m(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Pr(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Hr(e,t,r,n)}const go=Gr({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Hi(t,n,r,!0,s),i=Es(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const yo=Gr({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Vr(e,"x","unstack","string_or_numeric");p(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Fr.runKernel(Ln,r,s)}});const bo=Gr({broadcastTo_:function(e,t){let n=Vr(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!==0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=_a(n,e)}const s=n.shape,a=Array.from(t);for(let l=t.length-1;l>=0;l--)if(s[l]===t[l])a[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Cs(n);const i={x:n},o={reps:a};return Fr.runKernel(Dn,i,o)}});const vo=Gr({where_:function(e,t,n){const r=Vr(t,"a","where"),s=Vr(n,"b","where"),a=Vr(e,"condition","where","bool"),i=ni(r.shape,s.shape),o=bo(r,i),l=bo(s,i);1===a.rank&&p(a.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&f(a.shape,l.shape,"Error in where: ");const u={condition:a,t:o,e:l};return Fr.runKernel(pn,u)}});const xo=Gr({zerosLike_:function(e){const t={x:Vr(e,"x","zerosLike")};return Fr.runKernel(Pn,t)}});const wo=Gr({transpose_:function(e,t){const n=Vr(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),p(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{p(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Fr.runKernel(Mn,r,s)}});const ko=Gr({dropout_:function(e,t,n,r){const s=Vr(e,"x","dropout");if(p("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),p(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof yr?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(b(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Qa(li(ma(Yi(a,0,1,"float32",r),i)),i);return gi(s,o)}});const To=Gr({imag_:function(e){const t={input:Vr(e,"input","imag")};return Fr.runKernel(ht,t)}});const No=Gr({real_:function(e){const t={input:Vr(e,"input","real")};return Fr.runKernel(Jt,t)}});const So=Gr({fft_:function(e){p("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Fr.runKernel(Je,t)}});const Io=Gr({rfft_:function(e,t){p("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=to(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Ba([e,Bi(r)],e.shape.length-1),n=t}else s=e;const a=xo(s),i=_a(jr(s,a),[r,n]),o=So(i),l=Math.floor(n/2)+1,u=No(o),c=To(o),h=lo(u,[l,n-l],u.shape.length-1),d=lo(c,[l,n-l],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,_a(jr(h[0],d[0]),f)}});const Eo=Gr({ifft_:function(e){p("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Fr.runKernel(ct,t)}});const $o=Gr({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=_a(e,[n,t]);r=Eo(s)}else{const s=[n,2*(t-1)],a=_a(No(e),[n,t]),i=_a(To(e),[n,t]),o=Zi(to(a,[0,1],[n,t-2]),1),l=gi(Zi(to(i,[0,1],[n,t-2]),1),da(-1)),u=Ba([a,o],1),c=Ba([i,l],1),h=_a(jr(u,c),[s[0],s[1]]);r=Eo(h)}if(r=No(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=_a(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const Co=Gr({conv2DBackpropFilter_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=_a(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=_a(t,[1,t.shape[0],t.shape[1],t.shape[2]])),p(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),p(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),p(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];p(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),p(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&p(v(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Fr.runKernel(Ee,h,d)}});const Ao=Gr({relu6_:function(e){const t={x:Vr(e,"x","relu6")};return Fr.runKernel(ln,t)}});const Ro=Gr({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Vr(e,"x","step")},r={alpha:t};return Fr.runKernel(Bn,n,r)}});function _o(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return gi(e,Ro(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Do(e,t){let n=t;const r=ti(e.shape,t.shape);return r.length>0&&(n=bi(n,r)),_a(n,e.shape)}function Fo(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Xi(e);if("elu"===t)return Ja(e);if("relu6"===t)return Ao(e);if("prelu"===t)return Gi(e,n);if("leakyrelu"===t)return di(e,r);throw new Error(`Unknown fused activation ${t}.`)}const Mo=(e,t)=>!(e>0)||"linear"===t;const Oo=Gr({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:s,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}=e;if(u=u||"linear",!1===Mo(Fr.state.gradientDepth,u)){let e=ja(t,n,r,s,a,i,o);return null!=l&&(e=ma(e,l)),Fo(e,u,c,h)}const d=Vr(t,"x","conv2d"),f=Vr(n,"filter","conv2d");let m=d,g=!1;3===d.rank&&(g=!0,m=_a(d,[1,d.shape[0],d.shape[1],d.shape[2]])),p(4===m.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`)),p(4===f.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=o&&p(v(s),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`)),p(m.shape[3]===f.shape[2],(()=>`Error in conv2d: depth of input (${m.shape[3]}) must match input depth for filter ${f.shape[2]}.`)),p(Aa(r,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),p("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const y=ka(m.shape,f.shape,r,i,s,o);let b,x;null!=l&&(b=Vr(l,"bias","fused conv2d"),[b]=Er(b,d),ni(y.outShape,b.shape)),null!=c&&(x=Vr(c,"prelu weights","fused conv2d"));const w=(e,t)=>{const[n,a,o,l]=t,c=_o(e,o,u);p(Ca(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[qa(a.shape,c,n,r,s),Co(a,c,n.shape,r,s)];if(null!=l){const e=Do(l,c);h.push(e)}return h},k={x:m,filter:f,bias:b,preluActivationWeights:x},T={strides:r,pad:s,dataFormat:a,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};if(null==l){const e=ha(((e,t,n)=>{let r=Fr.runKernel(Gn,k,T);return n([t,e,r]),g&&(r=_a(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}));return e(m,f)}{const e=ha(((e,t,n,r)=>{let s=Fr.runKernel(Gn,k,T);return r([t,e,s,n]),g&&(s=_a(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:w}}));return e(m,f,b)}}});const Lo=Gr({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=_a(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=_a(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Fr.runKernel(Pe,u,c)}});const zo=Gr({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=t,l=!1;3===t.rank&&(l=!0,o=_a(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Fr.runKernel(Be,u,c);return l?_a(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Gr({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:s,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}=e;if(!1===Mo(Fr.state.gradientDepth,u)){let e=Xa(t,n,r,s,a,i,o);return null!=l&&(e=ma(e,l)),Fo(e,u,c,h)}const d=Vr(t,"x","depthwiseConv2d"),f=Vr(n,"filter","depthwiseConv2d");let m=d,g=!1;3===d.rank&&(g=!0,m=_a(d,[1,d.shape[0],d.shape[1],d.shape[2]])),p(4===m.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),p(4===f.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`)),p(m.shape[3]===f.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`)),null==i&&(i=[1,1]),p(Aa(r,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),null!=o&&p(v(s),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${s}.`));const y=ka(m.shape,f.shape,r,i,s,o,!0);let b,x;null!=l&&(b=Vr(l,"bias","fused conv2d"),[b]=Er(b,d),ni(y.outShape,b.shape)),null!=c&&(x=Vr(c,"prelu weights","fused depthwiseConv2d"));const w=(e,t)=>{p(Ca(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[n,a,l,c]=t,h=_o(e,l,u),d=zo(a.shape,h,n,r,s,i,o),f=Lo(a,h,n.shape,r,s,i,o);if(null!=c){return[d,f,Do(b,h)]}return[d,f]},k={x:m,filter:f,bias:b,preluActivationWeights:x},T={strides:r,pad:s,dataFormat:a,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};if(null==l){const e=ha(((e,t,n)=>{let r=Fr.runKernel(jn,k,T);return n([t,e,r]),g&&(r=_a(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}));return e(m,f)}{const e=ha(((e,t,n,r)=>{let s=Fr.runKernel(jn,k,T);return r([t,e,s,n]),g&&(s=_a(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:w}}));return e(m,f,b)}}});const Po=Gr({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=Vr(e,"a","matMul"),a=Vr(t,"b","matMul");[s,a]=Er(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Fr.runKernel(ye,i,o)}});const Bo=Gr({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:s=!1,bias:a,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:l}=e;if(!1===Mo(Fr.state.gradientDepth,i)){let e=Po(t,n,r,s);return null!=a&&(e=ma(e,a)),Fo(e,i,o,l)}let u=Vr(t,"a","fused matMul"),c=Vr(n,"b","fused matMul");[u,c]=Er(u,c);const h=r?u.shape[u.rank-2]:u.shape[u.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?u.shape[u.rank-1]:u.shape[u.rank-2],m=s?c.shape[c.rank-2]:c.shape[c.rank-1],g=u.shape.slice(0,-2),v=c.shape.slice(0,-2),x=y(g),w=y(v);p(u.rank>=2&&c.rank>=2&&u.rank===c.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${c.rank}.`)),p(b(g,v),(()=>`Error in fused matMul: outer dimensions (${g}) and (${v}) of Tensors with shapes ${u.shape} and ${c.shape} must match.`)),p(h===d,(()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${r} and transposeB=${s} must match.`));const k=u.shape.slice(0,-2).concat([f,m]),T=_a(u,r?[x,h,f]:[x,f,h]),N=_a(c,s?[w,m,d]:[w,d,m]);let S,I;null!=a&&(S=Vr(a,"bias","fused matMul"),[S]=Er(S,u),ni(k,S.shape)),null!=o&&(I=Vr(o,"prelu weights","fused matMul"));const E=(e,t)=>{const[n,o,l,u]=t,c=_o(_a(e,l.shape),l,i);let h,d;if(r||s?!r&&s?(h=Po(c,o,!1,!1),d=Po(c,n,!0,!1)):r&&!s?(h=Po(o,c,!1,!0),d=Po(n,c,!1,!1)):(h=Po(o,c,!0,!0),d=Po(c,n,!0,!0)):(h=Po(c,o,!1,!0),d=Po(n,c,!0,!1)),null!=a){return[h,d,Do(u,c)]}return[h,d]},$={a:T,b:N,bias:S,preluActivationWeights:I},C={transposeA:r,transposeB:s,activation:i,leakyreluAlpha:l};if(null==a){const e=ha(((e,t,n)=>{const r=Fr.runKernel(Un,$,C);return n([e,t,r]),{value:_a(r,k),gradFunc:E}}));return e(T,N)}{const e=ha(((e,t,n,r)=>{const s=Fr.runKernel(Un,$,C);return r([e,t,s,n]),{value:_a(s,k),gradFunc:E}}));return e(T,N,S)}}});function Wo(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return fo(s,"float32")}Gr({hammingWindow_:function(e){return Wo(e,.54,.46)}});const Vo=Gr({hannWindow_:function(e){return Wo(e,.5,.5)}});const Uo=Gr({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=0;const i=[];for(;a+t<=e.size;)i.push(to(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=Ba([to(e,a,t-r),oi([r],s)]);i.push(o),a+=n}return 0===i.length?mo([],[0,t]):_a(Ba(i),[i.length,t])}});Gr({stft_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Vo;var a;null==r&&(a=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Uo(e,t,n),o=gi(i,s(t)),l=[];for(let u=0;u<i.shape[0];u++)l.push(Io(to(o,[u,0],[1,t]),r));return Ba(l)}});Gr({cropAndResize_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Vr(e,"image","cropAndResize"),o=Vr(t,"boxes","cropAndResize","float32"),l=Vr(n,"boxInd","cropAndResize","int32"),u=o.shape[0];p(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),p(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),p(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),p(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),p(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),p("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return Fr.runKernel(Me,c,h)}});Gr({flipLeftRight_:function(e){const t=Vr(e,"image","flipLeftRight","float32");p(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Fr.runKernel(tt,n,{})}});Gr({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=Vr(e,"image","rotateWithOffset","float32");p(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return Fr.runKernel(Vn,a,i)}});function Go(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),p(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),p(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p(1===t.rank,(()=>"scores must be a 1D tensor")),p(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),p(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}Gr({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const a=Vr(e,"boxes","nonMaxSuppression"),i=Vr(t,"scores","nonMaxSuppression"),o=Go(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return Fr.runKernel(Vt,{boxes:a,scores:i},l)}});function jo(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Ho)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Ho(e,t){return e>t?1:e<t?-1:0}function qo(e,t,n,r,s){return Xo(e,t,n,r,s,0)}function Ko(e,t,n,r,s,a){return Xo(e,t,n,r,s,0,!1,a,!0)}function Yo(e,t,n,r,s,a){return Xo(e,t,n,r,s,a,!0)}function Xo(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const u=[];for(let g=0;g<t.length;g++)t[g]>s&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Jo);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let l=h.length-1;l>=i;--l){const n=Zo(e,a,h[l]);if(n>=r){o=!0;break}if(t.score=t.score*Qo(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&jo(u,t,Jo))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Zo(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,d),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function Qo(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Jo(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}Gr({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Vr(e,"boxes","nonMaxSuppression"),o=Vr(t,"scores","nonMaxSuppression"),l=Go(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a},h=Fr.runKernel(Gt,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}});Gr({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Vr(e,"boxes","nonMaxSuppression"),o=Vr(t,"scores","nonMaxSuppression"),l=Go(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Fr.runKernel(Ut,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const el=Gr({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Vr(e,"images","resizeBilinear");p(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),p(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),p(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=_a(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Fr.runKernel(an,o,l);return i?_a(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const tl=Gr({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Vr(e,"images","resizeNearestNeighbor");p(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),p(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),p("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),p(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=_a(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Fr.runKernel(rn,o,l);return i?_a(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const nl=Gr({lessEqual_:function(e,t){let n=Vr(e,"a","lessEqual"),r=Vr(t,"b","lessEqual");[n,r]=Er(n,r),ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(yt,s)}});function rl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Fr.runKernel(Qt,{},s)}const sl=Gr({bandPart_:function(e,t,n){p(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),p(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Vr(e,"a","bandPart");p(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=_a(rl(0,a,1,"int32"),[-1,1]),l=rl(0,i,1,"int32"),u=yi(o,l),c=xi(nl(u,da(+t,"int32")),hi(u,da(-n,"int32"))),h=Bi([a,i],r.dtype);return _a(ho(yo(_a(r,[-1,a,i])).map((e=>vo(c,e,h)))),s)}});const al=Gr({pow_:function(e,t){let n=Vr(e,"base","pow"),r=Vr(t,"exp","pow");[n,r]=Er(n,r);const s={a:n,b:r};return Fr.runKernel(Yt,s)}});function il(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return fa(e);if(1!==e.rank&&null===n)return il(_a(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return bi(fa(e),n);if(t===1/0)return mi(fa(e),n);if(t===-1/0)return Si(fa(e),n);if("euclidean"===t||2===t)return uo(bi(al(fa(e),da(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return mi(bi(fa(e),n[0]),n[1]-1);if(t===1/0)return mi(bi(fa(e),n[1]),n[0]);if(t===-1/0)return Si(bi(fa(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return uo(bi(Mi(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ol=Gr({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=il(e=Vr(e,"x","norm"),t,n);let a=s.shape;if(r){const t=N(n,e.shape);a=Ai(s.shape,t)}return _a(s,a)}});const ll=Gr({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,p(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)p(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=lo(e,e.shape[0],0).map((e=>co(e,[0])));p(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(Fr.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=gi(bi(gi(n[t],e)),n[t]);e=yi(e,r)}return Qa(e,ol(e,"euclidean"))})));return t?ho(n,0):n}});function ul(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Fr.tidy((()=>{p(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=ii(n),a=Cs(e);const i=mo([[1]],[1,1]);let o=Cs(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=Fr.tidy((()=>{const t=to(a,[e,e],[n-e,1]),l=ol(t),u=to(a,[e,e],[1,1]),c=vo(ci(u,0),mo([[-1]]),mo([[1]])),h=yi(u,gi(c,l)),d=Qa(t,h);o=1===d.shape[0]?Cs(i):Ba([i,to(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Li(Qa(Po(c,h),l)),f=to(a,[e,0],[n-e,r]),m=gi(p,o),g=wo(o);if(0===e)a=yi(f,Po(m,Po(g,f)));else{const t=yi(f,Po(m,Po(g,f)));a=Ba([to(a,[0,0],[e,r]),t],0)}const y=wo(m),b=to(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=yi(b,Po(Po(b,o),y));else{const t=yi(b,Po(Po(b,o),y));s=Ba([to(s,[0,0],[n,e]),t],1)}return[o,a,s]})),la([t,l,u])}return!t&&n>r&&(s=to(s,[0,0],[n,r]),a=to(a,[0,0],[r,r])),[s,a]}))}const cl=Gr({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(p(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ul(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=yo(_a(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=ul(e,t);s.push(n),a.push(r)}));return[_a(ho(s,0),e.shape),_a(ho(a,0),e.shape)]}}});var hl;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(hl||(hl={}));const dl=Gr({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:hl.SUM_BY_NONZERO_WEIGHTS;const r=Vr(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Vr(t,"weights","computeWeightedLoss"));const a=null==s?r:gi(r,s);if(n===hl.NONE)return a;if(n===hl.SUM)return bi(a);if(n===hl.MEAN){if(null==s)return Ni(a);{const e=r.size/s.size,t=Qa(bi(a),bi(s));return e>1?Qa(t,da(e)):t}}if(n===hl.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Qa(bi(a),da(r.size));{const e=gi(s,Wi(r.shape)),t=$s(bi(zi(e,da(0))),"float32");return Qa(bi(a),t)}}throw Error(`Unknown reduction: ${n}`)}});Gr({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:hl.SUM_BY_NONZERO_WEIGHTS;const s=Vr(e,"labels","absoluteDifference"),a=Vr(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Vr(n,"weights","absoluteDifference")),f(s.shape,a.shape,"Error in absoluteDifference: ");const o=fa(yi(s,a));return dl(o,i,r)}});Gr({cosineDistance_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:hl.SUM_BY_NONZERO_WEIGHTS;const a=Vr(e,"labels","cosineDistance"),i=Vr(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Vr(r,"weights","cosineDistance")),f(a.shape,i.shape,"Error in cosineDistance: ");const l=da(1),u=yi(l,bi(gi(a,i),n,!0));return dl(u,o,s)}});Gr({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:hl.SUM_BY_NONZERO_WEIGHTS,s=Vr(e,"labels","hingeLoss");const a=Vr(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Vr(n,"weights","hingeLoss")),f(s.shape,a.shape,"Error in hingeLoss: ");const o=da(1);s=yi(gi(da(2),s),o);const l=Xi(yi(o,gi(s,a)));return dl(l,i,r)}});Gr({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:hl.SUM_BY_NONZERO_WEIGHTS;const a=Vr(e,"labels","huberLoss"),i=Vr(t,"predictions","huberLoss");let o=null;null!=n&&(o=Vr(n,"weights","huberLoss")),f(a.shape,i.shape,"Error in huberLoss: ");const l=da(r),u=fa(yi(i,a)),c=Ii(u,l),h=yi(u,c),d=ma(gi(da(.5),Mi(c)),gi(l,h));return dl(d,o,s)}});Gr({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:hl.SUM_BY_NONZERO_WEIGHTS;const a=Vr(e,"labels","logLoss"),i=Vr(t,"predictions","logLoss");let o=null;null!=n&&(o=Vr(n,"weights","logLoss")),f(a.shape,i.shape,"Error in logLoss: ");const l=da(1),u=da(r),c=Li(gi(a,pi(ma(i,u)))),h=gi(yi(l,a),pi(ma(yi(l,i),u))),d=yi(c,h);return dl(d,o,s)}});const pl=Gr({squaredDifference_:function(e,t){let n=Vr(e,"a","squaredDifference"),r=Vr(t,"b","squaredDifference");[n,r]=Er(n,r),ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(In,s,{})}});Gr({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:hl.SUM_BY_NONZERO_WEIGHTS;const s=Vr(e,"labels","meanSquaredError"),a=Vr(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Vr(n,"weights","meanSquaredError")),f(s.shape,a.shape,"Error in meanSquaredError: ");const o=pl(s,a);return dl(o,i,r)}});const fl=Gr({log1p_:function(e){const t={x:Vr(e,"x","log1p")};return Fr.runKernel(xt,t)}});Gr({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:hl.SUM_BY_NONZERO_WEIGHTS,a=Vr(e,"multiClassLabels","sigmoidCrossEntropy");const i=Vr(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Vr(n,"weights","sigmoidCrossEntropy")),f(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=da(r),t=da(1),n=da(.5);a=ma(gi(a,yi(t,e)),gi(n,e))}const l=function(e,t){const n=Vr(e,"labels","sigmoidCrossEntropyWithLogits"),r=Vr(t,"logits","sigmoidCrossEntropyWithLogits");f(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Xi(r),a=gi(r,n),i=fl(fi(Li(fa(r))));return ma(yi(s,a),i)}(a,i);return dl(l,o,s)}});const ml=Gr({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Vr(e,"x","logSumExp"),s=N(t,r.shape),a=mi(r,s,!0),i=yi(r,a),o=fi(i),l=bi(o,s),u=pi(l),c=ma(_a(a,u.shape),u);if(n){const e=Ai(c.shape,s);return _a(c,e)}return c}});Gr({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:hl.SUM_BY_NONZERO_WEIGHTS,a=Vr(e,"onehotLabels","softmaxCrossEntropy");const i=Vr(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Vr(n,"weights","softmaxCrossEntropy")),f(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=da(r),t=da(1),n=da(a.shape[1]);a=ma(gi(a,yi(t,e)),Qa(e,n))}const l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=ha(((e,t,r)=>{const s=ml(t,[n],!0),a=yi($s(t,"float32"),s);r([e,a]);const i=Li(gi(a,e));return{value:bi(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Ai(e.shape,[n]);return[gi(_a(e,a),yi($s(r,"float32"),fi(s))),gi(_a(e,a),yi(fi(s),$s(r,"float32")))]}}}));return r(e,t)}(a,i);return dl(l,o,s)}});const gl={bandPart:sl,gramSchmidt:ll,qr:cl};class yl extends pa{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Fr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Fr.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:oa((()=>xo(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:oa((()=>xo(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;oa((()=>{const e=ma(gi(i,this.rho),gi(Mi(a),1-this.rho)),t=gi(Qa(uo(ma(o,this.epsilon)),uo(ma(i,this.epsilon))),a),n=ma(gi(o,this.rho),gi(Mi(t),1-this.rho));i.assign(e),o.assign(n);const s=ma(gi(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(la(this.accumulatedGrads.map((e=>e.variable))),la(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}yl.className="Adadelta",ra(yl);class bl extends pa{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Fr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:oa((()=>oi(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;oa((()=>{const e=ma(a,Mi(s));a.assign(e);const t=ma(gi(Qa(s,uo(ma(e,Fr.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&la(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}bl.className="Adagrad",ra(bl);class vl extends pa{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],oa((()=>{this.accBeta1=da(t).variable(),this.accBeta2=da(n).variable()})),null==r&&(this.epsilon=Fr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);oa((()=>{const n=yi(1,this.accBeta1),r=yi(1,this.accBeta2);t.forEach(((t,s)=>{const a=Fr.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:oa((()=>xo(a).variable(i)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:oa((()=>xo(a).variable(i)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=ma(gi(l,this.beta1),gi(o,1-this.beta1)),h=ma(gi(u,this.beta2),gi(Mi(o),1-this.beta2)),d=Qa(c,n),p=Qa(h,r);l.assign(c),u.assign(h);const f=ma(gi(Qa(d,ma(uo(p),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign(gi(this.accBeta1,this.beta1)),this.accBeta2.assign(gi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&la(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&la(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),oa((()=>{this.accBeta1.assign(al(this.beta1,this.iterations_+1)),this.accBeta2.assign(al(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}vl.className="Adam",ra(vl);class xl extends pa{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],oa((()=>{this.iteration=da(0).variable(),this.accBeta1=da(t).variable()})),null==r&&(this.epsilon=Fr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);oa((()=>{const n=yi(1,this.accBeta1),r=Qa(-this.learningRate,ma(gi(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=Fr.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:xo(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:xo(a).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=ma(gi(l,this.beta1),gi(o,1-this.beta1)),h=gi(u,this.beta2),d=fa(o),p=Ti(h,d);l.assign(c),u.assign(p);const f=ma(gi(Qa(r,n),Qa(c,ma(p,this.epsilon))),a);a.assign(f)})),this.iteration.assign(ma(this.iteration,1)),this.accBeta1.assign(gi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&la(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&la(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}xl.className="Adamax",ra(xl);class wl extends pa{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Fr.registeredVariables[t];oa((()=>{const e=ma(gi(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ua(da(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}wl.className="SGD",ra(wl);class kl extends wl{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=da(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Fr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:oa((()=>xo(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&oa((()=>{let e;const t=ma(gi(this.m,s),a);e=this.useNesterov?ma(gi(this.c,ma(a,gi(t,this.m))),r):ma(gi(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&la(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}kl.className="Momentum",ra(kl);class Tl extends pa{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Fr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Fr.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:oa((()=>xo(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:oa((()=>xo(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:oa((()=>xo(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;oa((()=>{const e=ma(gi(i,this.decay),gi(Mi(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=ma(gi(t,this.decay),gi(a,1-this.decay)),l=Qa(gi(a,this.learningRate),uo(yi(e,ma(Mi(s),this.epsilon)))),u=ma(gi(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=yi(r,u);r.assign(c)}else{const e=ma(gi(i,this.decay),gi(Mi(a),1-this.decay)),t=ma(gi(o,this.momentum),Qa(gi(a,this.learningRate),uo(ma(e,this.epsilon))));i.assign(e),o.assign(t);const n=yi(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&la(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&la(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&la(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Tl.className="RMSProp",ra(Tl);class Nl{static sgd(e){return new wl(e)}static momentum(e,t){return new kl(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Tl(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new vl(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new yl(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new xl(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new bl(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}const Sl={sgd:Nl.sgd,momentum:Nl.momentum,adadelta:Nl.adadelta,adagrad:Nl.adagrad,rmsprop:Nl.rmsprop,adamax:Nl.adamax,adam:Nl.adam},Il="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function El(){return new Promise((e=>Il((()=>e()))))}function $l(e,t){const n=e[0].length;e.forEach(((e,t)=>{p(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),p(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)p(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Cl(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Al=30;function Rl(e){return e<=Al?e:M(e,Math.floor(Math.sqrt(e)))}function _l(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Dl(e,t,n){let r=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Fl(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{const r=[],s=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?s.push(n):r.push(n);n.push(...r),n.push(0),n.push(...s)}return n}function Ml(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function Ol(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Ll(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function zl(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===y(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let h=0;h<s.length-1;++h)i*=s[h];const o=e.shape,l=s.slice();l.pop();let u=1;for(let h=a;h<n;++h)u*=o[h],l.push(o[h]);const c=[...O(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function Pl(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let i=0;i<s;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==e[i+r])throw new Error(a+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${e[i+s]})`)}function Bl(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Pl(n,t,e)}function Wl(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let l=s;l<a;++l)i*=n[l];const o=s<1?1:s;return{sliceRank:s,numUpdates:y(t.shape)/o,sliceSize:i,strides:[...O(n.slice(0,s)),1],outputSize:y(n)}}const Vl=1.7580993408473768,Ul=1.0507009873554805,Gl=.3275911,jl=.254829592,Hl=-.284496736,ql=1.421413741,Kl=-1.453152027,Yl=1.061405429;function Xl(){K().getBool("IS_TEST")||console.warn(...arguments)}function Zl(){K().getBool("IS_TEST")||console.log(...arguments)}function Ql(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Jl(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function eu(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function tu(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function nu(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ru(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function su(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function au(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function iu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof t)p(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);p(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}p(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function ou(e,t){let n,r=!1;for(e<=Al?(n=e,r=!0):n=M(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=M(e,n+1);return n}function lu(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function uu(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function cu(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=Bi(e.shape),r=$s(e,"float32"),s=n.complex(r,t);return t.dispose(),r.dispose(),s}if(!$(e.dtype,t))return Fr.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),s=$s(r,t);return r.dispose(),s}if("int32"===t)return n.int(e);if("bool"===t){const t=da(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function hu(e,t){return Fr.makeTensorFromDataId(e.dataId,t,e.dtype)}function du(e){try{return e.map((e=>dr(e)))}catch(__){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${__}`)}}function pu(e){return e.map((e=>hr(e)))}function fu(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=Es(e,"int32"),s=Es([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),i=a*e.length;s.values.set(t,i)}return s.toTensor()}const mu={kernelName:J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(e,Ro($s(n,"float32"),-1))}}},gu={kernelName:ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Mi($s(n,"float32")),r=uo(yi(da(1),t));return Li(Qa(e,r))}}}},yu={kernelName:te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=uo(yi(Mi($s(n,"float32")),1));return Qa(e,t)}}}},bu={kernelName:ne,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ni(n.shape,r.shape);return{a:()=>{let t=e;const r=ti(n.shape,s);return r.length>0&&(t=bi(t,r)),_a(t,n.shape)},b:()=>{let t=e;const n=ti(r.shape,s);return n.length>0&&(t=bi(t,n)),_a(t,r.shape)}}}},vu={kernelName:re,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},xu={kernelName:ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xo(n)}}},wu={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xo(n)}}},ku={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qa(e,uo(yi(da(1),Mi($s(n,"float32")))))}}},Tu={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=uo(ma(da(1),Mi($s(n,"float32"))));return Qa(e,t)}}}},Nu={kernelName:de,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ni(n.shape,r.shape);return{a:()=>{const t=ma(Mi(n),Mi(r));let a=gi(e,Qa(r,t));const i=ti(n.shape,s);return i.length>0&&(a=bi(a,i)),_a(a,n.shape)},b:()=>{const t=ma(Mi(n),Mi(r));let a=Li(gi(e,Qa(n,t)));const i=ti(r.shape,s);return i.length>0&&(a=bi(a,i)),_a(a,r.shape)}}}},Su={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qa(e,ma(Mi($s(n,"float32")),1))}}},Iu={kernelName:he,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qa(e,yi(da(1),Mi($s(n,"float32"))))}}};const Eu=Gr({avgPool3dGrad_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1,1],a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;const o=Vr(e,"dy","avgPool3dGrad"),l=Vr(t,"input","avgPool3dGrad");let u=o,c=l,h=!1;4===l.rank&&(h=!0,u=_a(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=_a(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),p(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),p(Aa(r,s),(()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=i&&p(v(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const d={dy:u,input:c},f={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},m=Fr.runKernel(ge,d,f);return h?_a(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),$u={kernelName:me,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:l}=n,u=null==i?[1,1,1]:i;return{x:()=>Eu(e,r,s,a,u,o,l)}}};const Cu=Gr({avgPoolGrad_:function(e,t,n,r,s){const a=Vr(e,"dy","avgPoolGrad"),i=Vr(t,"input","avgPoolGrad");p(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=_a(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=_a(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),p(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Fr.runKernel(fe,c,h);return u?_a(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Au={kernelName:pe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Cu(e,r,s,a,i)}}},Ru={kernelName:ye,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Po(e,s,!1,!1),b:()=>Po(e,r,!0,!1)}:a&&!i?{a:()=>Po(s,e,!1,!0),b:()=>Po(r,e,!1,!1)}:{a:()=>Po(s,e,!0,!0),b:()=>Po(e,r,!0,!0)}:{a:()=>Po(e,s,!1,!0),b:()=>Po(r,e,!0,!1)}}};const _u=Gr({spaceToBatchND_:function(e,t,n){const r=Vr(e,"x","spaceToBatchND");p(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),p(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),p(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Fr.runKernel(Tn,s,a)}}),Du={kernelName:be,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>_u(e,r,s)}}},Fu={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let l=s.length-1;l>=0;l--)if(s[l]===a[l])i[l]=1;else if(1!==s[l])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>bi(e,o,!0)}}},Mu={kernelName:xe,gradFunc:e=>({x:()=>e.clone()})},Ou={kernelName:we,gradFunc:e=>({x:()=>xo(e)})},Lu={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>vo(xi(hi(r,s),nl(r,a)),e,xo(e))}}},zu={kernelName:Ne,inputsToSave:["x"],gradFunc:mu.gradFunc},Pu={kernelName:Se,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=N(s,t[0].shape)[0],i=r.map((e=>e[a]));return lo(e,i,a).map((e=>()=>e))}},Bu={kernelName:Ie,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return p(Ca(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>qa(r.shape,e,s,i,o,l),filter:()=>Co(r,e,s.shape,i,o,l)}}},Wu={kernelName:$e,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>ja(e,s,a,i,o,1,l),filter:()=>Co(e,r,s.shape,a,i,o,l)}}};const Vu=Gr({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=_a(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=_a(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),p(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),p(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),p(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),p(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),p(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return Fr.runKernel(Ae,o,l)}});const Uu=Gr({conv3DBackpropInput_:function(e,t,n,r,s){p(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=_a(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];p(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),p(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),p(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),p(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),p(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=Fr.runKernel(Re,c,h);return o?_a(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Gu={kernelName:Ce,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;p(Ca(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Uu(i.shape,e,o,s,a),filter:()=>Vu(i,e,o.shape,s,a)}}};const ju=Gr({sin_:function(e){const t={x:Vr(e,"x","sin")};return Fr.runKernel(gn,t)}}),Hu={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(Li(ju($s(n,"float32"))),e)}}};const qu=Gr({sinh_:function(e){const t={x:Vr(e,"x","sinh")};return Fr.runKernel(yn,t)}}),Ku={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(qu($s(n,"float32")),e)}}};const Yu=Gr({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s={x:Vr(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Fr.runKernel(Fe,s,a)}}),Xu={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=_i([s],r.rank);let n=Yu(e,s,a,!i);return null!=t&&(n=wo(n,t)),n}}}},Zu={kernelName:ze,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;p(Ca(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return p(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),p(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),p(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),p(Aa(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&p(v(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>zo(l.shape,e,u,s,a,r,i),filter:()=>Lo(l,e,u.shape,s,a,r,i)}}},Qu={kernelName:Ve,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Fr.runKernel(Ue,a,n),filter:()=>Fr.runKernel(Ge,i,n)}}},Ju={kernelName:He,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Fr.runKernel(qe,r)}}},ec={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=gi(fi(Li(Mi(n))),2/Math.sqrt(Math.PI));return{x:()=>gi(e,r)}}},tc={kernelName:Xe,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(e,n)}}},nc={kernelName:Ze,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>_a(e,n.shape)}}},rc={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(e,fi(n))}}},sc={kernelName:nt,gradFunc:e=>({x:()=>xo(e)})},ac={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ni(n.shape,r.shape);return{a:()=>{const t=Qa(e,$s(r,"float32")),a=ti(n.shape,s);return a.length>0?_a(bi(t,a),n.shape):t},b:()=>{let t=gi(e,$s(n,"float32"));const a=ti(r.shape,s);a.length>0&&(t=_a(bi(t,a),r.shape));const i=Mi(r);return Li(Qa(t,$s(i,"float32")))}}}};const ic=Gr({rsqrt_:function(e){const t={x:Vr(e,"x","rsqrt")};return Fr.runKernel(hn,t)}}),oc={kernelName:st,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?da(1):o,u=ti(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=yi(s,a),d=gi(e,l),p=ic(ma(i,da(r))),f=gi(gi(gi(p,p),p),da(-.5));return{x:()=>1===a.rank?_a(gi(gi(e,ai(_a(p,[1,1,1,a.shape[0]]),c)),l),s.shape):_a(gi(gi(e,p),l),s.shape),mean:()=>{let e=gi(gi(p,da(-1)),d);return 1===a.rank&&(e=bi(e,u)),_a(e,a.shape)},variance:()=>{let e=gi(gi(f,h),d);return 1===a.rank&&(e=bi(e,u)),_a(e,a.shape)},scale:()=>{const t=gi(h,p);let n=gi(e,t);return 1===a.rank&&(n=bi(n,u)),_a(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=bi(t,u)),_a(t,a.shape)}}}};const lc=Gr({unsortedSegmentSum_:function(e,t,n){const r=Vr(e,"x","unsortedSegmentSum"),s=Vr(t,"segmentIds","unsortedSegmentSum","int32");p(v(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return Fr.runKernel(zn,a,i)}}),uc={kernelName:at,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=N(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=cc(0,l),d=cc(l+1,l+1+c),p=hc([o,[n],u]),f=_a(e,p),m=_a(s,[n]),g=hc([[l],h,d]),y=wo(f,g);let b=lc(y,m,r.shape[i]);const v=Di(g);return b=wo(b,v),b},indices:()=>s}}};function cc(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function hc(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const dc={kernelName:lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>xo(n),b:()=>xo(r)}}},pc={kernelName:ut,gradFunc:e=>({x:()=>$s(e,"float32")})},fc={kernelName:dt,gradFunc:e=>({x:()=>xo(e)})},mc={kernelName:pt,gradFunc:e=>({x:()=>xo(e)})},gc={kernelName:ft,gradFunc:e=>({x:()=>xo(e)})},yc={kernelName:mt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=ci(r,0);return{x:()=>vo(a,e,gi(e,s))}}},bc={kernelName:xt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qa(e,ma(n,1))}}},vc={kernelName:vt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qa(e,$s(n,"float32"))}}},xc={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=fi(r);return yi(e,gi(bi(e,s,!0),t))}}}};const wc=Gr({localResponseNormalizationBackprop_:function(e,t,n){const r={x:e,y:t,dy:n},s={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Fr.runKernel(St,r,s)}}),kc={kernelName:Nt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>wc(r,s,e,a,i,o,l)}}};function Tc(e,t,n,r){return t.rank<n.rank&&(t=_a(t,Ai(t.shape,r))),e.rank<n.rank&&(e=_a(e,Ai(e.shape,r))),{x:()=>gi(e,$s(ri(n,t),e.dtype))}}const Nc={kernelName:It,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Tc(e,t[1],a,N(s,a.shape));return{x:()=>i.x()}}};const Sc=Gr({less_:function(e,t){let n=Vr(e,"a","less"),r=Vr(t,"b","less");[n,r]=Er(n,r),ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(gt,s)}}),Ic={kernelName:Et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>gi(e,$s(hi(n,r),"float32")),b:()=>gi(e,$s(Sc(n,r),"float32"))}}};const Ec=Gr({maxPool3dGrad_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1],i=arguments.length>6?arguments[6]:void 0,o=arguments.length>7?arguments[7]:void 0;const l=Vr(e,"dy","maxPool3dGrad"),u=Vr(t,"input","maxPool3dGrad"),c=Vr(n,"output","maxPool3dGrad");let h=l,d=u,f=c,m=!1;4===u.rank&&(m=!0,h=_a(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=_a(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=_a(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),p(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),p(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),p(5===f.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${f.rank}.`)),p(Aa(s,a),(()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`)),null!=o&&p(v(i),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const g={dy:h,input:d,output:f},y={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},b=Fr.runKernel(Rt,g,y);return m?_a(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),$c={kernelName:At,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>Ec(e,r,s,a,i,c,l,u)}}};const Cc=Gr({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Vr(e,"dy","maxPoolGrad"),l=Vr(t,"input","maxPoolGrad"),u=Vr(n,"output","maxPoolGrad");p(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),p(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),p(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&p(v(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Fr.runKernel(Ct,c,h)}}),Ac={kernelName:$t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Cc(e,r,s,a,i,o)}}},Rc={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=N(s,r.shape),i=y(Ci(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=_a(e,t);return Qa(gi(n,Wi(r.shape,"float32")),i)}}}},_c={kernelName:Ft,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Tc(e,i,a,N(s,a.shape));return{x:()=>o.x()}}},Dc={kernelName:Mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>gi(e,$s(nl(n,r),"float32")),b:()=>gi(e,$s(ci(n,r),"float32"))}}},Fc={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>to(e,a,r.shape)}}},Mc={kernelName:Lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ni(n.shape,r.shape);return{a:()=>{const t=ti(n.shape,s);return t.length>0?_a(bi(e,t),n.shape):e},b:()=>{const t=gi(e,Li(li(Qa(n,r)))),a=ti(r.shape,s);return a.length>0?_a(bi(t,a),r.shape):t}}}},Oc={kernelName:Pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ni(n.shape,r.shape);return{a:()=>{const t=gi(e,$s(r,"float32")),a=ti(n.shape,s);return a.length>0?_a(bi(t,a),n.shape):t},b:()=>{const t=gi(e,$s(n,"float32")),a=ti(r.shape,s);return a.length>0?_a(bi(t,a),r.shape):t}}}},Lc={kernelName:Bt,gradFunc:e=>({x:()=>Li(e)})},zc={kernelName:Ht,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Bi(n.shape,"float32")}}},Pc={kernelName:jt,gradFunc:e=>({x:()=>xo(e)})},Bc={kernelName:qt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return yo(e,r).map((e=>()=>e))}},Wc={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>to(e,a,r.shape)}}},Vc={kernelName:Yt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=ni(a.shape,i.shape);return{a:()=>{const t=$s(i,"float32");let n=gi(e,gi(t,al(a,yi(t,da(1)))));const r=ti(a.shape,o);return r.length>0&&(n=bi(n,r)),_a(n,a.shape)},b:()=>{const t=ci(a,0),n=vo(t,pi(a),xo(a));let r=gi(e,gi(s,n));const l=ti(i.shape,o);return l.length>0&&(r=bi(r,l)),_a(r,i.shape)}}}},Uc={kernelName:Xt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=ci(n,0);return{x:()=>vo(s,e,gi(e,r)),alpha:()=>{let t=vo(s,xo(e),gi(e,n));const a=ti(r.shape,e.shape);return a.length>0&&(t=bi(t,a)),_a(t,r.shape)}}}},Gc={kernelName:je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ni(n.shape,r.shape);return{a:()=>{const t=Qa(e,$s(r,"float32")),a=ti(n.shape,s);return a.length>0?_a(bi(t,a),n.shape):t},b:()=>{let t=gi(e,$s(n,"float32"));const a=ti(r.shape,s);a.length>0&&(t=_a(bi(t,a),r.shape));const i=Mi(r);return Li(Qa(t,$s(i,"float32")))}}}},jc={kernelName:en,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qa(e,Li(Mi(n)))}}},Hc={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=gi(nl(n,6),Ro(n));return{x:()=>gi(e,$s(r,"float32"))}}},qc={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(e,$s(Ro(n),"float32"))}}},Kc={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(e,n.shape)}}},Yc={kernelName:an,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Fr.runKernel(on,s,n)}}},Xc={kernelName:rn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Fr.runKernel(sn,s,n)}}},Zc={kernelName:un,gradFunc:(e,t,n)=>{const{dims:r}=n,s=N(r,e.shape);return{x:()=>Zi(e,s)}}},Qc={kernelName:cn,gradFunc:e=>({x:()=>xo(e)})},Jc={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(Qa(e,gi(al(n,1.5),2)))}}};const eh=Gr({logicalNot_:function(e){const t={x:Vr(e,"x","logicalNot","bool")};return Fr.runKernel(kt,t)}}),th={kernelName:pn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>$s(xo(n),"float32"),t:()=>gi(e,$s(n,e.dtype)),e:()=>gi(e,$s(eh(n),e.dtype))}}},nh={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ci(n,da(0)),r=da(Vl),s=da(Ul),a=gi(e,s),i=gi(gi(e,r),fi($s(n,"float32")));return vo(t,a,i)}}}},rh={kernelName:vn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(e,gi(n,yi(da(1),n)))}}},sh={kernelName:bn,gradFunc:e=>({x:()=>xo(e)})};const ah=Gr({cos_:function(e){const t={x:Vr(e,"x","cos")};return Fr.runKernel(_e,t)}}),ih={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(ah($s(n,"float32")),e)}}};const oh=Gr({cosh_:function(e){const t={x:Vr(e,"x","cosh")};return Fr.runKernel(De,t)}}),lh={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(oh($s(n,"float32")),e)}}},uh={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=Js(r,s,a),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>Ui(e,u)}}},ch={kernelName:Sn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=gi(e,r);return{logits:()=>yi(a,gi(bi(a,[s],true),r))}}},hh={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(e,eo(n))}}};const dh=Gr({batchToSpaceND_:function(e,t,n){const r=Vr(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));p(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),p(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),p(r.shape[0]%s===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return Fr.runKernel(be,a,i)}}),ph={kernelName:Tn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>dh(e,r,s)}}},fh={kernelName:Nn,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Ba(e,r)}}};const mh=[mu,gu,yu,bu,vu,xu,wu,ku,Tu,Nu,Su,Iu,$u,Au,Ru,Du,Fu,Mu,Ou,Lu,zu,Pu,Wu,Bu,Gu,Hu,Ku,Xu,Zu,Qu,Gc,Ju,ec,tc,nc,rc,ac,sc,oc,uc,dc,pc,fc,mc,gc,yc,bc,vc,xc,kc,Nc,Nc,Ic,$c,Ac,Rc,_c,Dc,Fc,Mc,Oc,Lc,zc,Pc,Bc,Wc,Wc,Vc,Uc,jc,Hc,qc,Kc,Yc,Xc,Zc,Qc,Jc,th,nh,rh,sh,ih,lh,uh,ch,hh,ph,ph,fh,fh,{kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qa(e,gi(uo($s(n,"float32")),2))}}},{kernelName:In,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=da(2);return{a:()=>gi(e,gi(s,yi(n,r))),b:()=>gi(e,gi(s,yi(r,n)))}}},{kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(e,gi($s(n,"float32"),2))}}},{kernelName:Bn,gradFunc:e=>({x:()=>xo(e)})},{kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ni(n.shape,r.shape);return{a:()=>{let t=e;const r=ti(n.shape,s);return r.length>0&&(t=bi(t,r)),_a(t,n.shape)},b:()=>{let t=e;const n=ti(r.shape,s);return n.length>0&&(t=bi(t,n)),_a(Li(t),r.shape)}}}},{kernelName:kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;N(a,r.shape).forEach((e=>{s[e]=1}));const i=_a(e,s),o=gi(i,Wi(r.shape,"float32"));return{x:()=>o}}},{kernelName:Rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qa(e,Mi(ah(n)))}}},{kernelName:_n,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gi(yi(da(1),Mi(n)),e)}}},{kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=xo(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=ma(t,to(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=ma(t,to(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=ma(t,to(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=ma(t,to(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Mn,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Di(s);return{x:()=>wo(e,a)}}},{kernelName:Ln,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>ho(e,s)}}},{kernelName:zn,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ti(t,xo(t)),r=ui(e,n);let s=hi(t,da(0,"int32"));const a=r.rank-s.rank;for(let o=0;o<a;++o)s=si(s,o+1);s=xi(s,Wi(r.shape,"bool"));const i=xo(r);return vo(s,r,i)}(e,n)}}},{kernelName:Pn,gradFunc:e=>({x:()=>xo(e)})}];for(const n of mh)Qn(n);yr.prototype.abs=function(){return this.throwIfDisposed(),fa(this)};const gh=Gr({acos_:function(e){const t={x:Vr(e,"x","acos")};return Fr.runKernel(ee,t)}});yr.prototype.acos=function(){return this.throwIfDisposed(),gh(this)};const yh=Gr({acosh_:function(e){const t={x:Vr(e,"x","acosh")};return Fr.runKernel(te,t)}});yr.prototype.acosh=function(){return this.throwIfDisposed(),yh(this)};const bh=Gr({mod_:function(e,t){let n=Vr(e,"a","mod"),r=Vr(t,"b","mod");[n,r]=Er(n,r);const s={a:n,b:r};return Fr.runKernel(Lt,s)}});const vh=Gr({addStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","addStrict"),r=Vr(t,"b","addStrict");return f(n.shape,r.shape,"Error in addStrict: "),ma(n,r)}}),xh=Gr({divStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","div"),r=Vr(t,"b","div");return f(n.shape,r.shape,"Error in divideStrict: "),Qa(n,r)}}),wh=Gr({maximumStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","maximumStrict"),r=Vr(t,"b","maximumStrict");return f(n.shape,r.shape,"Error in maximumStrict: "),Ti(n,r)}}),kh=Gr({minimumStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","minimumStrict"),r=Vr(t,"b","minimumStrict");return f(n.shape,r.shape,"Error in minimumStrict: "),Ii(n,r)}}),Th=Gr({modStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","modStrict"),r=Vr(t,"b","modStrict");return f(n.shape,r.shape,"Error in modStrict: "),bh(n,r)}}),Nh=Gr({mulStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","mul"),r=Vr(t,"b","mul");return f(n.shape,r.shape,"Error in multiplyStrict: "),gi(n,r)}}),Sh=Gr({powStrict_:function(e,t){return sa("strict variants of ops have been deprecated and will be removed in future"),f(e.shape,t.shape,"Error in powStrict: "),al(e,t)}}),Ih=Gr({squaredDifferenceStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","squaredDifferenceStrict"),r=Vr(t,"b","squaredDifferenceStrict");return f(n.shape,r.shape,"Error in squaredDifferenceStrict: "),pl(n,r)}}),Eh=Gr({subStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","subStrict"),r=Vr(t,"b","subStrict");return f(n.shape,r.shape,"Error in subStrict: "),yi(n,r)}});yr.prototype.addStrict=function(e){return this.throwIfDisposed(),vh(this,e)},yr.prototype.add=function(e){return this.throwIfDisposed(),ma(this,e)},yr.prototype.all=function(e,t){return this.throwIfDisposed(),ga(this,e,t)},yr.prototype.any=function(e,t){return this.throwIfDisposed(),ya(this,e,t)},yr.prototype.argMax=function(e){return this.throwIfDisposed(),ba(this,e)};const $h=Gr({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Vr(e,"x","argMin")},r={axis:t};return Fr.runKernel(oe,n,r)}});yr.prototype.argMin=function(e){return this.throwIfDisposed(),$h(this,e)},yr.prototype.asScalar=function(){return this.throwIfDisposed(),p(1===this.size,(()=>"The array must have only 1 element.")),_a(this,[])},yr.prototype.asType=function(e){return this.throwIfDisposed(),$s(this,e)},yr.prototype.as1D=function(){return this.throwIfDisposed(),_a(this,[this.size])},yr.prototype.as2D=function(e,t){return this.throwIfDisposed(),_a(this,[e,t])},yr.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),_a(this,[e,t,n])},yr.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),_a(this,[e,t,n,r])},yr.prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),_a(this,[e,t,n,r,s])};const Ch=Gr({asin_:function(e){const t={x:Vr(e,"x","asin")};return Fr.runKernel(le,t)}});yr.prototype.asin=function(){return this.throwIfDisposed(),Ch(this)};const Ah=Gr({asinh_:function(e){const t={x:Vr(e,"x","asinh")};return Fr.runKernel(ue,t)}});yr.prototype.asinh=function(){return this.throwIfDisposed(),Ah(this)};const Rh=Gr({atan_:function(e){const t={x:Vr(e,"x","atan")};return Fr.runKernel(ce,t)}});yr.prototype.atan=function(){return this.throwIfDisposed(),Rh(this)};const _h=Gr({atan2_:function(e,t){let n=Vr(e,"a","atan2"),r=Vr(t,"b","atan2");[n,r]=Er(n,r);const s={a:n,b:r};return Fr.runKernel(de,s)}});yr.prototype.atan2=function(e){return this.throwIfDisposed(),_h(this,e)};const Dh=Gr({atanh_:function(e){const t={x:Vr(e,"x","atanh")};return Fr.runKernel(he,t)}});yr.prototype.atanh=function(){return this.throwIfDisposed(),Dh(this)},yr.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Da(this,e,t,n,r)},yr.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),dh(this,e,t)},yr.prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Ma(this,e,t,n,r,s)},yr.prototype.broadcastTo=function(e){return this.throwIfDisposed(),bo(this,e)},yr.prototype.cast=function(e){return this.throwIfDisposed(),$s(this,e)};const Fh=Gr({ceil_:function(e){const t={x:Vr(e,"x","ceil")};return Fr.runKernel(we,t)}});yr.prototype.ceil=function(){return this.throwIfDisposed(),Fh(this)},yr.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Pa(this,e,t)},yr.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof yr&&(e=[e]),Ba([this,...e],t)},yr.prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ha(this,e,t,n,r,s,a)},yr.prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Ka(this,e,t,n,r,s)},yr.prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ja(this,e,t,n,r,s,a)},yr.prototype.cos=function(){return this.throwIfDisposed(),ah(this)},yr.prototype.cosh=function(){return this.throwIfDisposed(),oh(this)},yr.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Yu(this,e,t,n)};const Mh=Gr({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const r=Vr(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];p(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),p(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),p(i%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Fr.runKernel(Le,o,l)}});yr.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Mh(this,e,t)},yr.prototype.depthwiseConv2D=function(e,t,n,r,s,a){return sa("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Xa(this,e,t,n,r,s,a)},yr.prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Xa(this,e,t,n,r,s,a)};const Oh=Gr({dilation2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const i=Vr(e,"x","dilation2d"),o=Vr(t,"filter","dilation2d");p(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),p(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),p("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=_a(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Fr.runKernel(Ve,c,h);return u?_a(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});yr.prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Oh(this,e,t,n,r,s)};const Lh=Gr({divNoNan_:function(e,t){let n=Vr(e,"a","div"),r=Vr(t,"b","div");[n,r]=Er(n,r);const s=Qa(n,r),a=xo(s),i=ri(r,a);return vo(i,a,s)}});yr.prototype.divNoNan=function(e){return this.throwIfDisposed(),Lh(this,e)},yr.prototype.divStrict=function(e){return this.throwIfDisposed(),xh(this,e)},yr.prototype.div=function(e){return this.throwIfDisposed(),Qa(this,e)};const zh=Gr({dot_:function(e,t){const n=Vr(e,"t1","dot"),r=Vr(t,"t2","dot");p((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(p(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=_a(n,[1,-1]),t=_a(r,[-1,1]),s=Po(e,t);return _a(s,[])}if(1===n.rank&&2===r.rank){const e=_a(n,[1,-1]),t=_a(r,[r.shape[0],r.shape[1]]),s=Po(e,t);return _a(s,[s.size])}if(2===n.rank&&1===r.rank){const e=_a(r,[-1,1]),t=Po(n,e);return _a(t,[t.size])}{const e=_a(r,[r.shape[0],r.shape[1]]);return Po(n,e)}}});yr.prototype.dot=function(e){return this.throwIfDisposed(),zh(this,e)},yr.prototype.elu=function(){return this.throwIfDisposed(),Ja(this)};const Ph=Gr({equalStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","equalStrict"),r=Vr(t,"b","equalStrict");return f(n.shape,r.shape,"Error in equalStrict: "),ri(n,r)}}),Bh=Gr({greaterEqualStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","greaterEqualStrict"),r=Vr(t,"b","greaterEqualStrict");return f(n.shape,r.shape,"Error in greaterEqualStrict: "),hi(n,r)}}),Wh=Gr({greaterStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","greaterStrict"),r=Vr(t,"b","greaterStrict");return f(n.shape,r.shape,"Error in greaterStrict: "),ci(n,r)}}),Vh=Gr({lessEqualStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","lessEqualStrict"),r=Vr(t,"b","lessEqualStrict");return f(n.shape,r.shape,"Error in lessEqualStrict: "),nl(n,r)}}),Uh=Gr({lessStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","lessStrict"),r=Vr(t,"b","lessStrict");return f(n.shape,r.shape,"Error in lessStrict: "),Sc(n,r)}}),Gh=Gr({notEqualStrict_:function(e,t){sa("strict variants of ops have been deprecated and will be removed in future");const n=Vr(e,"a","notEqualStrict"),r=Vr(t,"b","notEqualStrict");return f(n.shape,r.shape,"Error in notEqualStrict: "),zi(n,r)}});yr.prototype.equalStrict=function(e){return this.throwIfDisposed(),Ph(this,e)},yr.prototype.equal=function(e){return this.throwIfDisposed(),ri(this,e)};const jh=Gr({erf_:function(e){let t=Vr(e,"x","erf");p("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=$s(t,"float32"));const n={x:t};return Fr.runKernel(Ke,n)}});yr.prototype.erf=function(){return this.throwIfDisposed(),jh(this)},yr.prototype.exp=function(){return this.throwIfDisposed(),fi(this)},yr.prototype.expandDims=function(e){return this.throwIfDisposed(),si(this,e)};const Hh=Gr({expm1_:function(e){const t={x:Vr(e,"x","expm1")};return Fr.runKernel(Qe,t)}});yr.prototype.expm1=function(){return this.throwIfDisposed(),Hh(this)},yr.prototype.fft=function(){return this.throwIfDisposed(),So(this)},yr.prototype.flatten=function(){return this.throwIfDisposed(),_a(this,[this.size])},yr.prototype.floor=function(){return this.throwIfDisposed(),li(this)},yr.prototype.floorDiv=function(e){return this.throwIfDisposed(),Za(this,e)},yr.prototype.gather=function(e,t){return this.throwIfDisposed(),ui(this,e,t)},yr.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Bh(this,e)},yr.prototype.greaterEqual=function(e){return this.throwIfDisposed(),hi(this,e)},yr.prototype.greaterStrict=function(e){return this.throwIfDisposed(),Wh(this,e)},yr.prototype.greater=function(e){return this.throwIfDisposed(),ci(this,e)},yr.prototype.ifft=function(){return this.throwIfDisposed(),Eo(this)},yr.prototype.irfft=function(){return this.throwIfDisposed(),$o(this)};const qh=Gr({isFinite_:function(e){const t={x:Vr(e,"x","isFinite")};return Fr.runKernel(dt,t)}});yr.prototype.isFinite=function(){return this.throwIfDisposed(),qh(this)};const Kh=Gr({isInf_:function(e){const t={x:Vr(e,"x","isInf")};return Fr.runKernel(pt,t)}});yr.prototype.isInf=function(){return this.throwIfDisposed(),Kh(this)};const Yh=Gr({isNaN_:function(e){const t={x:Vr(e,"x","isNaN")};return Fr.runKernel(ft,t)}});yr.prototype.isNaN=function(){return this.throwIfDisposed(),Yh(this)},yr.prototype.leakyRelu=function(e){return this.throwIfDisposed(),di(this,e)},yr.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Vh(this,e)},yr.prototype.lessEqual=function(e){return this.throwIfDisposed(),nl(this,e)},yr.prototype.lessStrict=function(e){return this.throwIfDisposed(),Uh(this,e)},yr.prototype.less=function(e){return this.throwIfDisposed(),Sc(this,e)};const Xh=Gr({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const a=Vr(e,"x","localResponseNormalization");p(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),p(v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=_a(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=Fr.runKernel(Nt,l,u);return o?_a(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});yr.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Xh(this,e,t,n,r)};const Zh=Gr({logSigmoid_:function(e){const t=Vr(e,"x","logSigmoid");return ha((e=>({value:Li(oo(Li(e))),gradFunc:t=>gi(t,eo(Li(e)))})))(t)}});yr.prototype.logSigmoid=function(){return this.throwIfDisposed(),Zh(this)},yr.prototype.logSoftmax=function(e){return this.throwIfDisposed(),vi(this,e)},yr.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),ml(this,e,t)},yr.prototype.log=function(){return this.throwIfDisposed(),pi(this)},yr.prototype.log1p=function(){return this.throwIfDisposed(),fl(this)},yr.prototype.logicalAnd=function(e){return this.throwIfDisposed(),xi(this,e)},yr.prototype.logicalNot=function(){return this.throwIfDisposed(),eh(this)};const Qh=Gr({logicalOr_:function(e,t){const n=Vr(e,"a","logicalOr","bool"),r=Vr(t,"b","logicalOr","bool");ni(n.shape,r.shape);const s={a:n,b:r};return Fr.runKernel(Tt,s)}});yr.prototype.logicalOr=function(e){return this.throwIfDisposed(),Qh(this,e)};const Jh=Gr({logicalXor_:function(e,t){const n=Vr(e,"a","logicalXor","bool"),r=Vr(t,"b","logicalXor","bool");return ni(n.shape,r.shape),xi(Qh(e,t),eh(xi(e,t)))}});yr.prototype.logicalXor=function(e){return this.throwIfDisposed(),Jh(this,e)},yr.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Po(this,e,t,n)},yr.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),wi(this,e,t,n,r)},yr.prototype.max=function(e,t){return this.throwIfDisposed(),mi(this,e,t)},yr.prototype.maximumStrict=function(e){return this.throwIfDisposed(),wh(this,e)},yr.prototype.maximum=function(e){return this.throwIfDisposed(),Ti(this,e)},yr.prototype.mean=function(e,t){return this.throwIfDisposed(),Ni(this,e,t)},yr.prototype.min=function(e,t){return this.throwIfDisposed(),Si(this,e,t)},yr.prototype.minimumStrict=function(e){return this.throwIfDisposed(),kh(this,e)},yr.prototype.minimum=function(e){return this.throwIfDisposed(),Ii(this,e)};const ed=Gr({mirrorPad_:function(e,t,n){p("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Vr(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");p(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let o=0;o<r.rank;o++)p(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),p(t[o][0]>=0&&t[o][0]<=r.shape[o]-s&&t[o][1]>=0&&t[o][1]<=r.shape[o]-s,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return Fr.runKernel(Ot,i,a)}});yr.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),ed(this,e,t)},yr.prototype.modStrict=function(e){return this.throwIfDisposed(),Th(this,e)},yr.prototype.mod=function(e){return this.throwIfDisposed(),bh(this,e)},yr.prototype.mulStrict=function(e){return this.throwIfDisposed(),Nh(this,e)},yr.prototype.mul=function(e){return this.throwIfDisposed(),gi(this,e)},yr.prototype.neg=function(){return this.throwIfDisposed(),Li(this)},yr.prototype.norm=function(e,t,n){return this.throwIfDisposed(),ol(this,e,t,n)},yr.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Gh(this,e)},yr.prototype.notEqual=function(e){return this.throwIfDisposed(),zi(this,e)},yr.prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Pi(this,e,t,n)},yr.prototype.onesLike=function(){return this.throwIfDisposed(),Vi(this)},yr.prototype.pad=function(e,t){return this.throwIfDisposed(),Ui(this,e,t)};const td=Gr({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=Vr(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=_a(i,[1,i.shape[0],i.shape[1],i.shape[2]])),p(Aa(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const u=xa(o.shape,t,a,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),a=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],a[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([u.inHeight,u.inWidth],c,h),g=d?r:"valid",y=d?o:_u(o,c,f),b=("avg"===n?()=>Da(y,t,a,g):()=>wi(y,t,a,g))(),v=d?b:dh(b,c,m);return l?_a(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});yr.prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),td(this,e,t,n,r,s)},yr.prototype.powStrict=function(e){return this.throwIfDisposed(),Sh(this,e)},yr.prototype.pow=function(e){return this.throwIfDisposed(),al(this,e)},yr.prototype.prelu=function(e){return this.throwIfDisposed(),Gi(this,e)};const nd=Gr({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Vr(e,"x","prod");"bool"===r.dtype&&(r=$s(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Fr.runKernel(Zt,s,a)}});yr.prototype.prod=function(e,t){return this.throwIfDisposed(),nd(this,e,t)};const rd=Gr({reciprocal_:function(e){const t={x:Vr(e,"x","reciprocal")};return Fr.runKernel(en,t)}});yr.prototype.reciprocal=function(){return this.throwIfDisposed(),rd(this)},yr.prototype.relu=function(){return this.throwIfDisposed(),Xi(this)},yr.prototype.relu6=function(){return this.throwIfDisposed(),Ao(this)},yr.prototype.reshapeAs=function(e){return this.throwIfDisposed(),_a(this,e.shape)},yr.prototype.reshape=function(e){return this.throwIfDisposed(),_a(this,e)},yr.prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),el(this,e,t,n)},yr.prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),tl(this,e,t,n)},yr.prototype.reverse=function(e){return this.throwIfDisposed(),Zi(this,e)},yr.prototype.rfft=function(){return this.throwIfDisposed(),Io(this)};const sd=Gr({round_:function(e){const t={x:Vr(e,"x","round")};return Fr.runKernel(cn,t)}});yr.prototype.round=function(){return this.throwIfDisposed(),sd(this)},yr.prototype.rsqrt=function(){return this.throwIfDisposed(),ic(this)},yr.prototype.selu=function(){return this.throwIfDisposed(),Qi(this)},yr.prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ji(this,e,t,n,r,s,a)},yr.prototype.sigmoid=function(){return this.throwIfDisposed(),eo(this)};const ad=Gr({sign_:function(e){const t={x:Vr(e,"x","sign")};return Fr.runKernel(bn,t)}});yr.prototype.sign=function(){return this.throwIfDisposed(),ad(this)},yr.prototype.sin=function(){return this.throwIfDisposed(),ju(this)},yr.prototype.sinh=function(){return this.throwIfDisposed(),qu(this)},yr.prototype.slice=function(e,t){return this.throwIfDisposed(),to(this,e,t)},yr.prototype.softmax=function(e){return this.throwIfDisposed(),io(this,e)},yr.prototype.softplus=function(){return this.throwIfDisposed(),oo(this)},yr.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),_u(this,e,t)},yr.prototype.split=function(e,t){return this.throwIfDisposed(),lo(this,e,t)},yr.prototype.sqrt=function(){return this.throwIfDisposed(),uo(this)},yr.prototype.square=function(){return this.throwIfDisposed(),Mi(this)},yr.prototype.squaredDifference=function(e){return this.throwIfDisposed(),pl(this,e)},yr.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),Ih(this,e)},yr.prototype.squeeze=function(e){return this.throwIfDisposed(),co(this,e)},yr.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof yr?[this,e]:[this,...e];return ho(n,t)},yr.prototype.step=function(e){return this.throwIfDisposed(),Ro(this,e)};const id=Gr({stridedSlice_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const u={x:Vr(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Fr.runKernel(An,u,c)}});yr.prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),id(this,e,t,n,r,s,a,i,o)},yr.prototype.subStrict=function(e){return this.throwIfDisposed(),Eh(this,e)},yr.prototype.sub=function(e){return this.throwIfDisposed(),yi(this,e)},yr.prototype.sum=function(e,t){return this.throwIfDisposed(),bi(this,e,t)};const od=Gr({tan_:function(e){const t={x:Vr(e,"x","tan")};return Fr.runKernel(Rn,t)}});yr.prototype.tan=function(){return this.throwIfDisposed(),od(this)},yr.prototype.tanh=function(){return this.throwIfDisposed(),po(this)},yr.prototype.tile=function(e){return this.throwIfDisposed(),ai(this,e)},yr.prototype.toBool=function(){return this.throwIfDisposed(),$s(this,"bool")},yr.prototype.toFloat=function(){return this.throwIfDisposed(),$s(this,"float32")},yr.prototype.toInt=function(){return this.throwIfDisposed(),$s(this,"int32")};const ld=Gr({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Vr(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=Fr.runKernel(Fn,a,i);return{values:o,indices:l}}});yr.prototype.topk=function(e,t){return this.throwIfDisposed(),ld(this,e,t)},yr.prototype.transpose=function(e){return this.throwIfDisposed(),wo(this,e)};const ud=Gr({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Vr(e,"x","unique","string_or_numeric");p(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=Fr.runKernel(On,r,s);return{values:a,indices:i}}});let cd;function hd(){return null==cd&&(cd=Fr.backend.epsilon()),cd}yr.prototype.unique=function(e){return this.throwIfDisposed(),ud(this,e)},yr.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),lc(this,e,t)},yr.prototype.unstack=function(e){return this.throwIfDisposed(),yo(this,e)},yr.prototype.where=function(e,t){return this.throwIfDisposed(),vo(e,this,t)},yr.prototype.zerosLike=function(){return this.throwIfDisposed(),xo(this)};class dd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dd.prototype)}}class pd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pd.prototype)}}class fd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fd.prototype)}}class md extends Error{constructor(e){super(e),Object.setPrototypeOf(this,md.prototype)}}class gd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gd.prototype)}}Error;function yd(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function bd(e,t){if(!e)throw new gd(t)}function vd(e,t){let n=0;for(const r of e)r===t&&n++;return n}function xd(e){return 1===e.length?e[0]:e}function wd(e){return Array.isArray(e)?e:[e]}function kd(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Td(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Nd={};function Sd(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Id(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>Id(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?Id(t):e[n]=t.value)}}}function Ed(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Nd)a=Nd[s];else if(a=t[s],null==a)throw new fd(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new fd(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Nd?[o,l]=Nd.className:i in t&&([o,l]=t[i]),null==o)throw new fd(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(Nd))e[n]=Nd[n];for(const s of Object.keys(n))e[s]=n[s];a.config.customObjects=e;const t=Object.assign({},Nd);for(const s of Object.keys(n))Nd[s]=n[s];Id(a.config);const r=l(o,a.config,n,s);return Nd=Object.assign({},t),r}{const e=Object.assign({},Nd);for(const r of Object.keys(n))Nd[r]=n[r];const t=new o(a.config);return Nd=Object.assign({},e),t}}}function $d(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Cd(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Ad(e){if(null==e)throw new fd(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Rd(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new fd(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function _d(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return bd(n>=0),bd(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Dd(e,t){Array.isArray(e)?(p(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Dd(e,`element ${n+1} of ${t}`)))):p(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Fd(e)}.`))}function Fd(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Fd(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function Md(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Od(e,t){return oa((()=>uo(bi(gi(e,e),t,!0))))}class Ld extends ta{getConfig(){return{}}}class zd extends Ld{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return oa((()=>{const t=Od(e,this.axis),n=Pa(t,0,this.maxValue);return gi(e,Qa(n,ma(hd(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}zd.className="MaxNorm",ra(zd);class Pd extends Ld{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return oa((()=>Qa(e,ma(hd(),Od(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Pd.className="UnitNorm",ra(Pd);class Bd extends Ld{apply(e){return Xi(e)}}Bd.className="NonNeg",ra(Bd);class Wd extends Ld{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return oa((()=>{const t=Od(e,this.axis),n=ma(gi(this.rate,Pa(t,this.minValue,this.maxValue)),gi(1-this.rate,t));return gi(e,Qa(n,ma(hd(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Wd.className="MinMaxNorm",ra(Wd);const Vd={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ud(e){return Sd(e)}function Gd(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Ed(e,na.getMap().classNameMap,t,"constraint")}function jd(e){if(null==e)return null;if("string"===typeof e){return Gd({className:e in Vd?Vd[e]:e,config:{}})}return e instanceof Ld?e:Gd(e)}const Hd=["channelsFirst","channelsLast"],qd=["nearest","bilinear"],Kd=["valid","same","causal"],Yd=["max","avg"],Xd=["sum","mul","concat","ave"],Zd=new Map;function Qd(e){Rd(Hd,"DataFormat",e)}function Jd(e){Rd(Kd,"PaddingMode",e)}function ep(e){Rd(Yd,"PoolMode",e)}const tp=[];function np(e,t){tp.push(e);try{const e=t();return tp.pop(),e}catch(n){throw tp.pop(),n}}function rp(e){if(!ip(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===tp.length?"":tp.join("/")+"/")+e}function sp(e){if(!ip(e))throw new Error("Not a valid tensor name: '"+e+"'");Zd.has(e)||Zd.set(e,0);const t=Zd.get(e);if(Zd.set(e,Zd.get(e)+1),t>0){const n=`${e}_${t}`;return Zd.set(n,1),n}return e}const ap=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ip(e){return!!e.match(ap)}function op(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function lp(e){return fo(e=Array.isArray(e)?new Float32Array(e):e)}function up(e){return Si(lp(e)).dataSync()[0]}function cp(e){return mi(lp(e)).dataSync()[0]}function hp(e,t){if(t<e)throw new fd(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function dp(e,t){return e.asType(t)}function pp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function fp(e,t,n){return oa((()=>{switch(e.rank){case 1:return no(e,t,n);case 2:return ro(e,[t,0],[n,e.shape[1]]);case 3:return so(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ao(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return to(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return to(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new fd(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function mp(e,t,n){return oa((()=>{switch(e.rank){case 1:return no(e,t,n);case 2:return ro(e,[0,t],[e.shape[0],n]);case 3:return so(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ao(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new fd(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function gp(e,t,n,r){return oa((()=>{switch(e.rank){case 1:return no(e,t,n);case 2:switch(r){case 1:return fp(e,t,n);case 2:return mp(e,t,n);default:throw new fd(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return fp(e,t,n);case 2:return so(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return mp(e,t,n);default:throw new fd(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return fp(e,t,n);case 2:return ao(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ao(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return mp(e,t,n);default:throw new fd(`The axis is not within the rank of the tensor ${r}`)}default:throw new fd(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function yp(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),Ba(e,n)}function bp(e,t){switch(e.rank){case 1:return Wa([e,t]);case 2:return Va([e,t],0);case 3:return Ua([e,t],0);case 4:return Ga([e,t],0);default:throw new fd(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function vp(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new fd(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ai(e,t)}function xp(e){return Ki(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function wp(e,t,n,r){if(e.rank<2||t.rank<2)throw new md(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new md(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return Bo({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Np(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([l,-1]);const h=[...s,...u];return Bo({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Np(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function kp(e,t,n){return oa((()=>(t=Array.isArray(t)?fo(t,"int32"):t.toInt(),ui(e,t,n))))}function Tp(e){return gi(e,e)}function Np(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new fd(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new fd(`Unsupported input rank by biasAdd: ${t.rank}`)}function Sp(e,t,n){return oa((()=>(null==n&&(n="channelsLast"),Qd(n),e.add(Np(e.rank,t,n)))))}function Ip(e,t,n,r){return oa((()=>ko(e,t,n,r)))}function Ep(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const $p=["fanIn","fanOut","fanAvg"],Cp=["normal","uniform","truncatedNormal"];class Ap extends ta{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Rp extends Ap{apply(e,t){return Bi(e,t)}}Rp.className="Zeros",ra(Rp);class _p extends Ap{apply(e,t){return Wi(e,t)}}_p.className="Ones",ra(_p);class Dp extends Ap{constructor(e){if(super(),"object"!==typeof e)throw new fd(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new fd(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return oa((()=>gi(da(this.value),Wi(e,t))))}getConfig(){return{value:this.value}}}Dp.className="Constant",ra(Dp);class Fp extends Ap{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Yi(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Fp.className="RandomUniform",ra(Fp);class Mp extends Ap{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new md(`randomNormal does not support dType ${t}.`);return xp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Mp.className="RandomNormal",ra(Mp);class Op extends Ap{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new md(`truncatedNormal does not support dType ${t}.`);return go(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Op.className="TruncatedNormal",ra(Op);class Lp extends Ap{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return oa((()=>{if(2!==e.length||e[0]!==e[1])throw new fd("Identity matrix initializer can only be used for 2D square matrices.");return gi(this.gain,ii(e[0]))}))}getConfig(){return{gain:this.gain}}}Lp.className="Identity",ra(Lp);class zp extends Ap{constructor(e){if(super(),e.scale<0)throw new fd(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Rd($p,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Rd(Cp,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Qd(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){const r=op(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){const r=op(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{const r=op(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new md(`${this.getClassName()} does not support dType ${t}.`);return go(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Yi(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}zp.className="VarianceScaling",ra(zp);class Pp extends zp{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zp.className}}Pp.className="GlorotUniform",ra(Pp);class Bp extends zp{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zp.className}}Bp.className="GlorotNormal",ra(Bp);class Wp extends zp{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zp.className}}Wp.className="HeNormal",ra(Wp);class Vp extends zp{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zp.className}}Vp.className="HeUniform",ra(Vp);class Up extends zp{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zp.className}}Up.className="LeCunNormal",ra(Up);class Gp extends zp{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zp.className}}Gp.className="LeCunNormal",ra(Gp);class jp extends Ap{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new md("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return oa((()=>{if(e.length<2)throw new md("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=xp(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=gl.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),gi(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}jp.className="Orthogonal",ra(jp);const Hp={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function qp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Ed(e,na.getMap().classNameMap,t,"initializer")}function Kp(e){return Sd(e)}function Yp(e){if("string"===typeof e){const t=e in Hp?Hp[e]:e;if("GlorotNormal"===t)return new Bp;if("GlorotUniform"===t)return new Pp;if("HeNormal"===t)return new Wp;if("HeUniform"===t)return new Vp;if("LeCunNormal"===t)return new Up;if("LeCunUniform"===t)return new Gp;{const e={};return e.className=t,e.config={},qp(e)}}return e instanceof Ap?e:qp(e)}let Xp=0;function Zp(){return Xp++}const Qp={};function Jp(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in Qp||(Qp[e]=0),Qp[e]+=1,e+Qp[e].toString()}function ef(e){return Array.isArray(e)&&Array.isArray(e[0])}function tf(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function nf(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new fd(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function rf(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new fd(`Expected exactly 1 Shape; got ${e.length}`)}return e}function sf(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const af="Variable";class of{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:af,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Zp(),n=null==n?af:n,this.originalName=rp(n),this.name=sp(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Fr.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function lf(e){return e.map((e=>e.read()))}function uf(e){e.forEach((e=>{e[0].write(e[1])}))}class cf{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class hf{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Zp(),null!=a&&(this.originalName=rp(a),this.name=sp(this.originalName)),this.rank=t.length}}let df=0;class pf{constructor(e,t){this.callArgs=t,this.id=df++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ff=0;class mf extends ta{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ff++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=kd(e)+"_"+Jp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new pd(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new fd(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return xd(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return xd(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new dd(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new dd(`Layer ${this.name} is not connected, no input to return.`);return xd(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new dd(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new dd(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return xd(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=wd(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=wd(this.inputSpec);if(e.length!==t.length)throw new fd(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new fd(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new fd(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new fd(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new fd(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new fd(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new fd(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=wd(e);let r=!0;for(const a of n)if(!(a instanceof hf)){r=!1;break}let s=!0;for(const a of n)if(a instanceof hf){s=!1;break}if(r===s)throw new fd("Arguments to apply() must be all SymbolicTensors or all Tensors");return np(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of wd(e))t.push(n.shape);this.build(xd(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=wd(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=xd(a),null!=this.activityRegularizer)throw new md("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=wd(e);const t=[];for(const n of e)t.push(n.shape);return xd(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new hf(a,n,this,wd(e),t,this.name,r))):new hf(a,r,this,wd(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new md("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new dd(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new dd(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new pd(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return sf(this.weights)}build(e){this.built=!0}getWeights(){return lf(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){oa((()=>{const t=this.weights;if(t.length!==e.length)throw new fd(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=lf(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!b(a.shape,o.shape))throw new fd(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}uf(n)}))}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new fd(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Yp("zeros"));const o=r.apply(t,n),l=new of(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=wd(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const o=wd(e);t=wd(t),n=wd(n),r=wd(r),s=tf(s),a=tf(a);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new pf({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function gf(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=gf(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class yf extends mf{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Jp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new fd("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new fd("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new fd("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new hf(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new pf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new fd(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function bf(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!==typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];la(r)}}function vf(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var xf;yf.className="InputLayer",ra(yf),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(xf||(xf={}));class wf{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class kf{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Tf extends wf{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=oa((()=>ma(this.totals[r],gi(e,n))));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:oa((()=>{const e=gi(Qa(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),ua(t[n])})))}}class Nf extends wf{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!==typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class Sf extends wf{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");_(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=cr();return function(){const s=cr();return s-r<t||(r=s,n=e(...arguments)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await bf(n),r.push(this.yield(e,t,n))),r.push(El()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await bf(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await bf(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(El()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await bf(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await bf(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(El()):_(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await bf(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await bf(e),await this.trainEnd(e))}}function If(e,t){if(null==e&&(e={}),e instanceof wf)return[e];if(Array.isArray(e)&&e[0]instanceof wf)return e;return wd(e).map((e=>new Sf(e,t)))}class Ef{constructor(){}static registerCallbackConstructor(e,t){p(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Ef.checkForDuplicate(t),null==Ef.constructors[e]&&(Ef.constructors[e]=[]),Ef.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Ef.constructors){Ef.constructors[+t].forEach((t=>{if(t===e)throw new fd("Duplicate callback constructor.")}))}}static clear(){Ef.constructors={}}static createCallbacks(e){const t=[];for(const n in Ef.constructors){const r=+n;e>=r&&t.push(...Ef.constructors[r])}return t.map((e=>new e))}}function $f(e,t,n,r,s,a,i,o,l){const u=new Nf,c=[new Tf,...Ef.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new kf(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Cf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Ed(e,na.getMap().classNameMap,t,"layer",n)}function Af(e,t){return oa((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=bi(Tp(e),t,!0),r=oi(n.shape,hd()),s=uo(Ti(n,r));return Qa(e,s)}))}function Rf(e,t){return oa((()=>Ni(Tp(yi(t,e)),-1)))}function _f(e,t){return oa((()=>Ni(fa(yi(t,e)),-1)))}function Df(e,t){return oa((()=>{const n=yi(e,t),r=Pa(fa(e),hd(),Number.MAX_VALUE),s=fa(Qa(n,r));return gi(100,Ni(s,-1))}))}function Ff(e,t){return oa((()=>{const n=Pa(t,hd(),Number.MAX_VALUE),r=pi(ma(1,n)),s=Pa(e,hd(),Number.MAX_VALUE),a=pi(ma(1,s));return Ni(Tp(yi(r,a)),-1)}))}function Mf(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return oa((()=>{if(n)t=io(t);else{const e=bi(t,t.shape.length-1,!0);t=Qa(t,e)}return t=Pa(t,hd(),1-hd()),Li(bi(gi(e.toFloat(),pi(t)),t.shape.length-1))}))}function Of(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return oa((()=>{const r=li(function(e){const t=[op(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=Pa(t,hd(),1-hd())).shape;return Mf(Pi(r,s[s.length-1]).reshape(s),t,n)}))}function Lf(e,t){return oa((()=>{let n;return n=Pa(t,hd(),1-hd()),n=pi(Qa(n,yi(1,n))),Ni(function(e,t){if(!b(e.shape,t.shape))throw new fd(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return oa((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function zf(e,t){return oa((()=>{const n=Pa(e,hd(),1),r=Pa(t,hd(),1);return bi(gi(e,pi(Qa(n,r))),-1)}))}function Pf(e,t){return oa((()=>{const n=Af(e,-1),r=Af(t,-1),s=gi(n,r);return Li(bi(s,-1))}))}Ef.constructors={};const Bf={meanSquaredError:Rf,meanAbsoluteError:_f,meanAbsolutePercentageError:Df,meanSquaredLogarithmicError:Ff,squaredHinge:function(e,t){return oa((()=>{const n=Ti(0,yi(1,gi(e,t)));return Ni(Tp(n),-1)}))},hinge:function(e,t){return oa((()=>{const n=Ti(0,yi(1,gi(e,t)));return Ni(n,-1)}))},categoricalHinge:function(e,t){return oa((()=>{const n=bi(gi(e,t),-1),r=mi(gi(yi(1,e),t),-1);return Ti(0,ma(1,yi(r,n)))}))},logcosh:function(e,t){return oa((()=>{const n=Math.log(2),r=yi(t,e),s=yi(ma(r,oo(gi(-2,r))),n);return Ni(s,-1)}))},categoricalCrossentropy:Mf,sparseCategoricalCrossentropy:Of,binaryCrossentropy:Lf,kullbackLeiblerDivergence:zf,poisson:function(e,t){return oa((()=>{const n=pi(ma(hd(),t));return Ni(yi(t,gi(e,n)),-1)}))},cosineProximity:Pf};function Wf(e){if("string"===typeof e){if(e in Bf)return Bf[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new fd(t)}return e}function Vf(e,t){return oa((()=>{const n=gi(.5,Vi(t)),r=dp(ci(t,n),e.dtype);return Ni(ri(e,r),-1)}))}function Uf(e,t){return oa((()=>dp(ri(ba(e,-1),ba(t,-1)),"float32")))}function Gf(e,t){return oa((()=>xi(e.equal(1),t.equal(1)).sum().cast("float32")))}function jf(e,t){return Lf(e,t)}function Hf(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),ri(e,t).asType("float32")}const qf=Mf,Kf=Of,Yf={binaryAccuracy:Vf,categoricalAccuracy:Uf,precision:function(e,t){return oa((()=>{const n=Gf(e,t),r=function(e,t){return oa((()=>xi(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),s=n.add(r);return vo(ci(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:qf,sparseCategoricalCrossentropy:Kf,mse:Rf,MSE:Rf,mae:_f,MAE:_f,mape:Df,MAPE:Df,cosine:Pf};function Xf(e){if("string"===typeof e&&e in Yf)return Yf[e];if("string"!==typeof e&&null!=e)return e;throw new fd(`Unknown metric ${e}`)}function Zf(e){if(bd(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(Bf))if(Bf[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Yf))if(Yf[n]===e){t=n;break}return void 0!==t?t:e.name}}const Qf=1048576;function Jf(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!em(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Qf&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function em(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!em(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!em(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function tm(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const s=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),nm(a,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)s?rm(o[c],n,r):sm(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;t=null!=e.collectedTrainableWeights?sf(e.collectedTrainableWeights):sf(e.trainableWeights);return t}(e),u=sf(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function nm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function rm(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(__){r="multiple"}nm([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function sm(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(__){s="multiple"}const a=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e){const t=u.inboundLayers[e].name,n=u.nodeIndices[e],r=u.tensorIndices[e];a.push(`${t}[${n}][${r}]`)}const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];nm([`${i} (${o})`,s,e.countParams().toString(),l],t,r);for(let u=1;u<a.length;++u)nm(["","","",a[u]],t,r)}function am(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function im(e,t){if(null===e)return null;if("string"===typeof e)return Td(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];am(t,s,r)?n.push(r):n.push(im(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=Td(n);t[e]=im(r,e)}}return t}}function om(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return kd(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];am(t,s,r)?n.push(r):n.push(om(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=kd(n);t[s]="name"!==n&&"className"!==n||"string"!==typeof r?om(r,n):r}return t}}const lm="2.8.6";class um{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof um)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new fd(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return $s(t,e.dtype)}catch(__){throw new fd(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof hf){if(null==this.id2Value[e.id])throw new fd(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new fd(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof hf){if(null==this.id2Value[e.id])throw new fd(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new fd(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&la(this.id2Mask)}}const cm={},hm={};function dm(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const p of o)-1!==u.indexOf(p)?l.push(t.getValue(p)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==cm[c]){const e=function(e,t){p(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=fm(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=fm(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:pm(r)}}(i,t);h=e.sorted,d=e.recipientCounts,cm[c]=h,hm[c]=d}h=cm[c],d={},s||Object.assign(d,hm[c]);const f=new um(t);for(let p=0;p<h.length;++p){if(null!=r){const e=ia().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=h[p],a=e.sourceLayer;if(a instanceof yf)continue;const i=[],u=[],c=[];let m=!1;for(const n of e.inputs){const e=f.getValue(n),r=f.getMask(n);i.push(e),u.push(r),null!=r&&(m=!0),s||(d[n.name]--,0!==d[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}m&&((n=n||{}).mask=u[0]);const g=wd(a.apply(i,n));let y=null;a.supportsMasking&&(y=a.computeMask(i,u));const b=mm(e),v=Array.isArray(b)?b:[b];for(let t=0;t<v.length;++t){f.hasKey(v[t])||f.add(v[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(v[t].name);-1!==e&&(l[e]=g[t])}s||la(c)}return f.disposeMasks(),a?l:l[0]}function pm(e){const t={};for(const n in e)t[n]=e[n].size;return t}function fm(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function mm(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class gm extends mf{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Jp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Cd(this.inputs).length!==this.inputs.length)throw new fd(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Cd(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;bd(0===t,"input layer has >1 nodes"),bd(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof yf))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new pd(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(gm.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let a=0;a<c;a++){const e=u.inputTensors[a],r=u.inboundLayers[a],s=u.nodeIndices[a],i=u.tensorIndices[a];o(e,t,n,r,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const y of this.outputs)o(y,l,u);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const a=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];e=Math.max(e,a),r[y.outboundLayer.id]=e,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r],a=y.nodeIndices[r],i=s.inboundNodes[a],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in r){const e=r[y];e in d||(d[e]=[]),d[e].push(s[y])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort($d);this.layers=[];for(const y of p){const e=d[y];e.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof gm&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort($d);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new pd(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new pd(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new pf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new fd("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let r=0;for(const a of this.layers)for(const e of a.weights){if(null!=n[e.originalName])throw new fd(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const a in e){let r=a;if(null==n[a]){const e=a.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[a]]);else if(t)throw new fd(`Provided weight data has no target variable: ${a}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new fd(`${e.length} of ${r} weights are not set: ${e}`)}uf(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${lm}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=om(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return oa((()=>{e=wd(e);const n=new um;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return dm(this.outputs,n,t)}))}computeMask(e,t){return oa((()=>{let n;return e=wd(e),n=null==t?yd(null,e.length):wd(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=tf(e);if(t.length!==this.inputLayers.length)throw new fd(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],r=t[i];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort($d);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++){const e=t.inboundLayers[i],s=t.nodeIndices[i],a=t.tensorIndices[i],o=n[`${e.name}_${s}_${a}`];r.push(o)}const s=tf(e.computeOutputShape(xd(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${a}_${t}`]=s[t]}}}const s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;a.push(r)}for(let i=0;i<a.length;i++){const e=a[i];bd(e in n),s.push(n[e])}return xd(s)}runInternalGraph(e,t){null==t&&(t=yd(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],s=e[o],a=t[o];n[r.id]=[s,a]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort($d);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=wd(e.call(t,u)),l=wd(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=wd(e.call(r,u)),l=wd(e.computeMask(r,i));if(e.activityRegularizer)throw new md("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const o of this.outputs){bd(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),s.push(e),a.push(t)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof gm?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=gm.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new fd(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new fd("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new fd(`No such layer: ${e}`)}calculateLosses(){return oa((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=gm.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const a of this.layers){const e=a.getClassName(),r=a.getConfig(),s=[];for(let n=0;n<a.inboundNodes.length;n++){const e=a.inboundNodes[n],r=gm.nodeKey(a,n);let i={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(__){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.nodeIndices[r],o=e.tensorIndices[r];let l=t[gm.nodeKey(s,a)];null==l&&(l=0),n.push([s.name,l,o,i])}s.push(n)}}}const i={};i.name=a.name,i.className=e,i.config=r,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let a=0;a<this.inputLayers.length;a++){const e=this.inputLayers[a],n=this.inputLayersNodeIndices[a],s=gm.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let i=t[s];null!==i&&void 0!==i||(i=0);const o=this.inputLayersTensorIndices[a];r.push([e.name,i,o])}e.inputLayers=r;const s=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],n=this.outputLayersNodeIndices[a],r=gm.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let i=t[r];null!==i&&void 0!==i||(i=0);const o=this.outputLayersTensorIndices[a];s.push([e.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={},s={};function a(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function i(e,t){const n=[];let s;for(const i of t){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void a(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(xd(n),s)}function o(e){const s=e.name,i=Cf(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),r[s]=i;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new fd(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const l=t.name,u=t.layers;for(const f of u)o(f);for(;!Ad(s);)for(const e of u){const t=r[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)i(t,n)}}const c=[],h=[],d=t.inputLayers;for(const f of d){const e=f[0],t=f[1],n=f[2];bd(e in r);const s=r[e].inboundNodes[t].outputTensors;c.push(s[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];bd(e in r);const s=r[e].inboundNodes[t].outputTensors;h.push(s[n])}return new e({inputs:c,outputs:h,name:l})}get stateful(){if(this._stateful)throw new fd("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){oa((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ym(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function bm(e,t){return ym(e,t,"classWeight")}async function vm(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=oa((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());la(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),fo(s,"float32")}return null}function xm(e,t){return gi(e,t)}function wm(e,t){let n,r;const s=t;n=s.xs,r=s.ys,p(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=km("input",e.inputNames,n),i=km("output",e.outputNames,r),o=a[0].shape[0];p(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),p(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<a.length;l++)p(a[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<i.length;l++)p(i[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function km(e,t,n){if(n instanceof yr)return[n];if(Array.isArray(n))return p(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new fd(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function Tm(e,t,n){const r=null!=n.batchesPerEpoch;if(p(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),p(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),p(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),p(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),p(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Nm(n.validationData))p(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new md("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=If(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=$f(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,u);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const u={};await d.onEpochBegin(m);let c=0,h=0;for(r||(g=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=wm(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=bm(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await vm(s[e],null,t[e]))}const u=r.concat(s).concat(i),p=o(u);la(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,ua(n)}await d.onBatchEnd(h,a),vf(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Nm(n.validationData)?wd(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):wd(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,u),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Nm(e){return"function"===typeof e.iterator}function Sm(e){p(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Im(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>fp(e,t,n-t))):fp(e,t,n-t)}function Em(e,t){return oa((()=>null==e?null:Array.isArray(e)?e.map((e=>Em(e,t))):kp(e,"int32"===t.dtype?t:t.toInt())))}function $m(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}async function Cm(e,t,n){let r,s,a,i,o,l,u,h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;Sm(d);const p=!1,f=await e.standardizeUserData(t,n,h.sampleWeight,h.classWeight,p,d);r=f[0],s=f[1],u=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new md("validationData including sample weights is not supported yet."):new fd(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${h.validationData} is invalid.`);a=h.validationData[0],i=h.validationData[1];const t=!0,n=await e.standardizeUserData(a,i,null,null,t,d);o=n[0],l=n[1],m=o.concat(l)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-h.validationSplit)),t=r[0].shape[0];o=Im(r,e,t),r=Im(r,0,e),l=Im(s,e,t),s=Im(s,0,e),m=o.concat(l)}else null!=h.validationSteps&&(g=!0);const y=r.concat(s).concat(u);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let x,w;g?(e.makeTestFunction(),x=e.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(x=null,m=[],w=v.slice());const k=If(h.callbacks,h.yieldEvery),T=await async function(e,t,n,r,s,a,i,o,l,u,h,d,p,f,m){null==s&&(s=32),null==a&&(a=1),null==h&&(h=!0),null==p&&(p=0);let g=!1;if(null!=l&&null!=u&&(g=!0),null!=m&&(g=!0,null==f))throw new fd("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=e.checkNumSamples(n,s,f,"steps_per_epoch");let b;null!=y&&(b=hp(0,y)),null==i&&(i=1);const{callbackList:v,history:x}=$f(o,i,a,p,y,f,s,g,d);v.setModel(e),e.history=x,await v.onTrainBegin(),e.stopTraining_=!1;for(let w=p;w<a;++w){await v.onEpochBegin(w);const a={};if(null!=f)throw new md("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new md("batch shuffling is not implemneted yet");h&&c(b);const i=fo(b),o=$m(y,s);for(let c=0;c<o.length;++c){const h={};if(await v.onBatchBegin(c,h),oa((()=>{const d=o[c][0],p=o[c][1],f=fp(i,d,p-d);h.batch=c,h.size=p-d;const m=Em(n,f),y=t(m);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,ua(n)}if(c===o.length-1&&g){const t=e.testLoop(l,u,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];ua(s),a["val_"+n]=s}}})),await v.onBatchEnd(c,h),vf(h),e.stopTraining_)break}i.dispose()}if(await v.onEpochEnd(w,a),e.stopTraining_)break}return await v.onTrainEnd(),await e.history.syncData(),e.history}(e,b,y,v,d,h.epochs,h.verbose,k,x,m,h.shuffle,w,h.initialEpoch,null,null);return T}finally{e.isTraining=!1,Rm(r,t),Rm(s,n),Rm(o,a),Rm(l,i),null!=u&&la(u)}}function Am(e){const t=[];e instanceof yr&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(pp(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Rm(e,t){if(null==e)return;const n=[];if(t instanceof yr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const s in t){const e=t[s];n.push(e.id)}const r=[];if(e instanceof yr)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function _m(e){return Array.isArray(e)}function Dm(e){return!function(e){return e instanceof yr}(e)&&!_m(e)}function Fm(e,t,n){let r,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(_m(e)&&e.length>0)t=!0;else if(Dm(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new fd(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(Dm(e)){r=[];for(const n of t){if(null==e[n])throw new fd(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(_m(e)){if(e.length!==t.length)throw new fd(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(t.length>1)throw new fd(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=Am(r),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=r[i];if(e.shape.length!==n[i].length)throw new fd(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let r=0;r<n[i].length;++r){if(0===r&&!s)continue;const o=e.shape[r],l=n[i][r];if(null!=l&&l>=0&&o!==l)throw new fd(`Error when checking ${a}: expected ${t[i]} to have shape [${n[i]}], but got array with shape [${e.shape}].`)}}return r}function Mm(e,t,n){let r,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new fd(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new fd(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=r[i];if(e.shape.length!==n[i].length)throw new fd(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let r=0;r<n[i].length;++r){if(0===r&&!s)continue;const o=e.shape[r],l=n[i][r];if(null!=l&&l!==o)throw new fd(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class Om extends gm{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new fd("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");tm(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Sl.adagrad(.01),Adadelta:()=>Sl.adadelta(1,.95,hd()),Adam:()=>Sl.adam(.001,.9,.999,hd()),Adamax:()=>Sl.adamax(.002,.9,.999,hd(),0),RMSProp:()=>Sl.rmsprop(.001,.9,0,hd()),SGD:()=>Sl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new fd(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof pa))throw new fd("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new fd(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Wf(e)))}else{const n=Wf(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new fd(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Wf(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a],t=this.outputNames[a];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],np("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};np("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const i of t){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Lf?-1!==["accuracy","acc"].indexOf(i)?r=Vf:-1!==["crossentropy","ce"].indexOf(i)&&(r=jf):this.lossFunctions[e]===Of?-1!==["accuracy","acc"].indexOf(i)?r=Hf:-1!==["crossentropy","ce"].indexOf(i)&&(r=Kf):-1!==["accuracy","acc"].indexOf(i)?r=Uf:-1!==["crossentropy","ce"].indexOf(i)&&(r=qf),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Xf(i);a=e,n=""+Zf(i)}let t;np(n,(()=>{t=a})),s(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null==n.batchSize?32:n.batchSize;Sm(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return xd(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Rm(s[0],e),Rm(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new md("Verbose mode is not implemented yet.");p(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"===typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=oa((()=>{if(t.value){const{xs:n,ys:r}=wm(e,t.value),i=n.concat(r),u=oa((()=>s(i)));if(la(i),0===l)for(let e=0;e<u.length;++e)a.push(da(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=oa((()=>ma(a[e],gi(c,t)))),l>0&&la(n)}la(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){const e=a[u];a[u]=Qa(a[u],o),la(e)}return xd(a)}(this,e,t)}checkNumSamples(e,t,n){let r,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new fd(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new fd(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new fd("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new um;if(e instanceof yr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new fd(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new fd(`No value is provided for the model's input ${o.name}`);a.add(o,t)}const i=dm(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=yd(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new fd(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return oa((()=>{const r=this.checkNumSamples(e);if(n)throw new md("Verbose predictLoop() is not implemented yet.");const s=$m(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){oa((()=>{const n=s[t][0],r=s[t][1],a=Im(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new um(i);return dm(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)))}return xd(a.map((e=>Ba(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Am(e);Mm(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Sm(e),this.predictLoop(n,e)}finally{Rm(n,e)}}predictOnBatch(e){Mm(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new pd("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let s=0;s<this.feedOutputShapes.length;++s){const e=this.feedOutputShapes[s];this.feedLossFns[s]===Of?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(e,t){const n=Cd(e.map((e=>e.shape[0])));n.sort();const r=Cd(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new fd(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new fd(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!b(n,r))throw new fd(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Fm(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Fm(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const r=[Rf,Lf,Mf];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===Mf&&1===a.shape[a.shape.length-1])throw new fd(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new fd(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new fd(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],a=arguments.length>5?arguments[5]:void 0;const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=bm(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await vm(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4?arguments[4]:void 0;return oa((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new md("Verbose mode is not implemented yet.");if(null!=s)throw new md("steps mode in testLoop() is not implemented yet");{const r=$m(a,n),s=fo(hp(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=fp(s,a,o-a),u=Em(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(da(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=ma(i[e],gi(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Qa(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if(vd(e,r)>1){s+=`_${vd(e.slice(0,n),r)}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new um(e),o=dm(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=s[n]&&(e=xm(e,s[n]));const a=Ni(e);t.push(a),l=0===n?e:ma(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],s=this.metricsTensors[n][1];e=Ni(t(r[s],o[s]))}ua(e),a.push(e)}return l=Ni(l),this.calculateLosses().forEach((e=>{l=ma(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>oa((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new um(a),o=dm(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Ni(r(s[e],o[e]));n=0===e?a:ma(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Ni(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t){return Cm(this,e,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}async fitDataset(e,t){return Tm(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const o of a){const e=await o.data();i.push(e[0])}return la(a),xd(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ia().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ia().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=kd(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>kd(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=kd(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[kd(Zf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>kd(Zf(e))));{const e={};for(const t in this.metrics)e[t]=kd(Zf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Cf(im(e.optimizer_config));let n,r;if("string"===typeof e.loss)n=Td(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Td(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Td(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Td(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Td(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"===typeof e){const t=(n=e,es.getSaveHandlers(n));if(0===t.length)throw new fd(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new fd(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new fd("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Kr(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${lm}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Kr(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=Qr([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Jf(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){Jf(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Om.className="Model",ra(Om);class Lm extends Om{}Lm.className="Functional",ra(Lm);class zm extends Om{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Jp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new fd(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof zm||e instanceof Om;let n;if(t){if(n=e,1!==n.outputs.length)throw new fd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new fd("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new fd("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new fd("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new yf({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new fd(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new fd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=gf(this.outputs[0])}this.inboundNodes=[],new pf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:yd(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(rf(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Om({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new pd("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new pd("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new pd("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new pd("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new fd("Legacy serialization format not supported yet.");n=t}else p(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,s=t;const a=new e(s);if(!(a instanceof zm))throw new md(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const i of n){const e=Cf(i,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(e){if(null==this.model)throw new fd("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new fd("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}zm.className="Sequential",ra(zm);class Pm extends ta{getConfig(){return{}}}class Bm extends Pm{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new md(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ja(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Bm.className="elu",ra(Bm);class Wm extends Pm{apply(e){return Qi(e)}}Wm.className="selu",ra(Wm);class Vm extends Pm{apply(e){return Xi(e)}}Vm.className="relu",ra(Vm);class Um extends Pm{apply(e){return oa((()=>Ii(6,Xi(e))))}}Um.className="relu6",ra(Um);class Gm extends Pm{apply(e){return e}}Gm.className="linear",ra(Gm);class jm extends Pm{apply(e){return eo(e)}}jm.className="sigmoid",ra(jm);class Hm extends Pm{apply(e){return function(e){return oa((()=>{const t=ma(.5,gi(.2,e));return Pa(t,0,1)}))}(e)}}Hm.className="hardSigmoid",ra(Hm);class qm extends Pm{apply(e){return oo(e)}}qm.className="softplus",ra(qm);class Km extends Pm{apply(e){return function(e){return oa((()=>Qa(e,fa(e).add(1))))}(e)}}Km.className="softsign",ra(Km);class Ym extends Pm{apply(e){return po(e)}}Ym.className="tanh",ra(Ym);class Xm extends Pm{apply(e){return io(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Xm.className="softmax",ra(Xm);class Zm extends Pm{apply(e){return vi(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Zm.className="logSoftmax",ra(Zm);class Qm extends Pm{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return oa((()=>eo(e.mul(t)).mul(e)))}}function Jm(e){return e.getClassName()}function eg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Ed(e,na.getMap().classNameMap,t,"activation")}function tg(e){if(null==e){const e={className:"linear",config:{}};return eg(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},eg(t)}return e instanceof Pm?e:eg(e)}function ng(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Qm.className="swish",ra(Qm);class rg extends ta{}class sg extends rg{constructor(e){super(),ng(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return oa((()=>{let t=Bi([1]);return this.hasL1&&(t=ma(t,bi(gi(this.l1,fa(e))))),this.hasL2&&(t=ma(t,bi(gi(this.l2,Tp(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}sg.className="L1L2",ra(sg);const ag={l1l2:"L1L2"};function ig(e){return Sd(e)}function og(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Ed(e,na.getMap().classNameMap,t,"regularizer")}function lg(e){if(null==e)return null;if("string"===typeof e){return og({className:e in ag?ag[e]:e,config:{}})}return e instanceof rg?e:og(e)}class ug extends mf{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=nf(e);let n=Xi(e);return null!=this.maxValue&&(n=Pa(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}ug.className="ReLU",ra(ug);class cg extends mf{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=nf(e);return di(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}cg.className="LeakyReLU",ra(cg);class hg extends mf{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Yp(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=lg(e.alphaRegularizer),this.alphaConstraint=jd(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new fd(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=rf(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new cf({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=nf(e),Gi(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Kp(this.alphaInitializer),alphaRegularizer:ig(this.alphaRegularizer),alphaConstraint:Ud(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}hg.className="PReLU",ra(hg);class dg extends mf{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new md(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=nf(e);return Ja(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}dg.className="ELU",ra(dg);class pg extends mf{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=nf(e);return n.mul(dp(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}pg.className="ThresholdedReLU",ra(pg);class fg extends mf{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Xm).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=nf(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function mg(e,t,n){if("number"===typeof e)return yd(e,t);if(e.length!==t)throw new fd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new fd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function gg(e,t,n,r){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((s+r-1)/r)}function yg(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+cp([n-t,0]);else{if("same"!==r)throw new fd(`Unsupport padding mode: ${r}.`);e*=t}return e}function bg(e,t){return oa((()=>(Qd(t),"channelsFirst"===t?wo(e,[0,2,3,1]):e)))}function vg(e,t){return oa((()=>(Qd(t),"channelsFirst"===t?wo(e,[0,2,3,4,1]):e)))}function xg(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return oa((()=>{if(null==a&&(a="channelsLast"),Qd(a),3!==e.shape.length)throw new fd(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new fd(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new fd(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=wo(e,[0,2,1])),"causal"===s)throw new md("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ha(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Sp(o,n)),o}))}function wg(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return oa((()=>{if(null==a&&(a="channelsLast"),Qd(a),3!==e.rank&&4!==e.rank)throw new fd(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new fd(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=bg(e,a);if("causal"===s)throw new md("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Oo({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=wo(l,[0,3,1,2])),l}))}function kg(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return oa((()=>{if(null==a&&(a="channelsLast"),Qd(a),4!==e.rank&&5!==e.rank)throw new fd(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new fd(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=vg(e,a);if("causal"===s)throw new md("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ya(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Sp(o,n)),"channelsFirst"===a&&(o=wo(o,[0,4,1,2,3])),o}))}fg.className="Softmax",ra(fg);class Tg extends mf{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Tg.verifyArgs(t),this.rank=e,Dd(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new md(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=mg(t.kernelSize,e,"kernelSize"),this.strides=mg(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Jd(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Qd(this.dataFormat),this.activation=tg(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Yp(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=jd(t.biasConstraint),this.biasRegularizer=lg(t.biasRegularizer),this.activityRegularizer=lg(t.activityRegularizer),this.dilationRate=mg(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new fd(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new fd(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new fd(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(bd("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!_d(e.kernelSize,"number",1,3))throw new fd(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Jm(this.activation),useBias:this.useBias,biasInitializer:Kp(this.biasInitializer),biasRegularizer:ig(this.biasRegularizer),activityRegularizer:ig(this.activityRegularizer),biasConstraint:Ud(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Ng extends Tg{constructor(e,t){super(e,t),this.kernel=null,Ng.verifyArgs(t),this.filters=t.filters,Dd(this.filters,"filters"),this.kernelInitializer=Yp(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=jd(t.kernelConstraint),this.kernelRegularizer=lg(t.kernelRegularizer)}build(e){e=rf(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fd(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return oa((()=>{let t;e=nf(e);const n=null==this.bias?null:this.bias.read(),r=Md(this.activation.getClassName());if(null!=r&&2===this.rank)t=wg(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=xg(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=wg(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new md("convolutions greater than 3D are not implemented yet.");t=kg(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=rf(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=gg(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Kp(this.kernelInitializer),kernelRegularizer:ig(this.kernelRegularizer),kernelConstraint:Ud(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new fd(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Sg extends Ng{constructor(e){super(2,e),Sg.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!_d(e.kernelSize,"number",1,2))throw new fd(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Sg.className="Conv2D",ra(Sg);class Ig extends Ng{constructor(e){super(3,e),Ig.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new fd(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Ig.className="Conv3D",ra(Ig);class Eg extends Sg{constructor(e){if(super(e),this.inputSpec=[new cf({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new fd(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=rf(e)).length)throw new fd("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fd("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cf({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return oa((()=>{let t=nf(e);if(4!==t.shape.length)throw new fd(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,yg(i,c,l,this.padding),yg(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=wo(t,[0,2,3,1]));let p=Ka(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=wo(p,[0,3,1,2])),null!=this.bias&&(p=Sp(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=rf(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=yg(t[r],o,a,this.padding),t[s]=yg(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Eg.className="Conv2DTranspose",ra(Eg);class $g extends Ng{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new fd("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new fd("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new fd(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Yp(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=lg(t.depthwiseRegularizer),this.depthwiseConstraint=jd(t.depthwiseConstraint),this.pointwiseInitializer=Yp(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=lg(t.pointwiseRegularizer),this.pointwiseConstraint=jd(t.pointwiseConstraint)}build(e){if((e=rf(e)).length<this.rank+2)throw new fd(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new fd(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new cf({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return oa((()=>{let t;if(e=nf(e),1===this.rank)throw new md("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=wo(e,[0,2,3,1])),t=Ji(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Sp(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=wo(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Kp(this.depthwiseInitializer),e.pointwiseInitializer=Kp(this.pointwiseInitializer),e.depthwiseRegularizer=ig(this.depthwiseRegularizer),e.pointwiseRegularizer=ig(this.pointwiseRegularizer),e.depthwiseConstraint=Ud(this.depthwiseConstraint),e.pointwiseConstraint=Ud(this.pointwiseConstraint),e}}$g.className="SeparableConv";class Cg extends $g{constructor(e){super(2,e)}}Cg.className="SeparableConv2D",ra(Cg);class Ag extends Ng{constructor(e){super(1,e),Ag.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!_d(e.kernelSize,"number",1,1))throw new fd(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Ag.className="Conv1D",ra(Ag);class Rg extends mf{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return oa((()=>{if(e=nf(e),"channelsLast"===this.dataFormat){const t=gp(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return gp(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=gp(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return gp(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Rg.className="Cropping2D",ra(Rg);class _g extends mf{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qd(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Rd(qd,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return oa((()=>{let t=nf(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=wo(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return wo(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}_g.className="UpSampling2D",ra(_g);class Dg extends Tg{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Yp(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=jd(e.depthwiseConstraint),this.depthwiseRegularizer=lg(e.depthwiseRegularizer)}build(e){if((e=rf(e)).length<4)throw new fd(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new fd(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return oa((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",s=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0;return oa((()=>{null==s&&(s="channelsLast"),Qd(s);let i=bg(e,s);if(4!==e.rank)throw new fd(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new fd(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Xa(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=wo(i,[0,3,1,2])),i}))}(e=nf(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Sp(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=rf(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=gg(t,this.kernelSize[0],this.padding,this.strides[0]),a=gg(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Kp(this.depthwiseInitializer),e.depthwiseRegularizer=ig(this.depthwiseRegularizer),e.depthwiseConstraint=Ud(this.depthwiseRegularizer),e}}function Fg(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new fd("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Mg(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return oa((()=>{const l=t.shape.length;if(l<3)throw new fd(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(hp(2,l));if(t=wo(t,u),null!=a)throw new md("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&(s=s.asType("bool").asType("float32"),s.rank===l-1&&(s=si(s,-1)),s=wo(s,u)),r&&(t=Zi(t,0),null!=s&&(s=Zi(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=yo(t);let m,g;null!=s&&(m=yo(s));for(let t=0;t<p;++t){const n=f[t],r=oa((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=oa((()=>{const e=m[t],n=Vi(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,s)=>r[1][s].mul(e).add(t.mul(n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){g=ho(c,1)}return[h,g,d]}))}Dg.className="DepthwiseConv2D",ra(Dg);class Og extends mf{constructor(e){let t;if(super(e),null==e.cell)throw new fd("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Gg({cells:e.cell}):e.cell,null==t.stateSize)throw new fd("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new cf({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return hp(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){ef(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return oa((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new md("Constants support is not implemented in RNN yet.");ef(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new cf({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!b(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new fd(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new cf({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];oa((()=>{if(!this.stateful)throw new dd("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new fd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Bi([n,e]))):this.states_=[Bi([n,this.cell.stateSize])];else if(null==e)la(this.states_),null!=this.keptStates&&(la(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Bi([n,e]))):this.states_[0]=Bi([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new fd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):la(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!b(r.shape,a))throw new fd(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>ua(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Fg(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new cf({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof hf){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return oa((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=nf(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new fd(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Mg(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return oa((()=>{let t=Bi(e.shape);return t=bi(t,[1,2]),t=pp(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?vp(t,[1,e]):t)):this.cell.stateSize>1?[vp(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Og.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=Cf(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Og.className="RNN",ra(Og);class Lg extends mf{}class zg extends Lg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dd(this.units,"units"),this.activation=tg(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Yp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=lg(e.kernelRegularizer),this.recurrentRegularizer=lg(e.recurrentRegularizer),this.biasRegularizer=lg(e.biasRegularizer),this.kernelConstraint=jd(e.kernelConstraint),this.recurrentConstraint=jd(e.recurrentConstraint),this.biasConstraint=jd(e.biasConstraint),this.dropout=up([1,cp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=up([1,cp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=rf(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return oa((()=>{if(2!==e.length)throw new fd(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jg({ones:()=>Vi(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jg({ones:()=>Vi(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=wp(null!=a?gi(e,a):e,this.kernel.read()),null!=this.bias&&(s=Sp(s,this.bias.read())),null!=i&&(n=gi(n,i));let o=ma(s,wp(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Jm(this.activation),useBias:this.useBias,kernelInitializer:Kp(this.kernelInitializer),recurrentInitializer:Kp(this.recurrentInitializer),biasInitializer:Kp(this.biasInitializer),kernelRegularizer:ig(this.kernelRegularizer),recurrentRegularizer:ig(this.recurrentRegularizer),biasRegularizer:ig(this.biasRegularizer),activityRegularizer:ig(this.activityRegularizer),kernelConstraint:Ud(this.kernelConstraint),recurrentConstraint:Ud(this.recurrentConstraint),biasConstraint:Ud(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}zg.className="SimpleRNNCell",ra(zg);class Pg extends Og{constructor(e){e.cell=new zg(e),super(e)}call(e,t){return oa((()=>{null!=this.cell.dropoutMask&&(la(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(la(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Pg.className="SimpleRNN",ra(Pg);class Bg extends Lg{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new fd("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Dd(this.units,"units"),this.activation=tg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=tg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Yp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=lg(e.kernelRegularizer),this.recurrentRegularizer=lg(e.recurrentRegularizer),this.biasRegularizer=lg(e.biasRegularizer),this.kernelConstraint=jd(e.kernelConstraint),this.recurrentConstraint=jd(e.recurrentConstraint),this.biasConstraint=jd(e.biasConstraint),this.dropout=up([1,cp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=up([1,cp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=rf(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return oa((()=>{if(2!==e.length)throw new fd(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jg({ones:()=>Vi(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jg({ones:()=>Vi(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=gi(e,s[0]));let u=wp(e,this.kernel.read());this.useBias&&(u=Sp(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=gi(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=lo(c,[2*this.units,this.units],c.rank-1),p=wp(r,h),[f,m,g]=lo(u,3,u.rank-1),[y,b]=lo(p,2,p.rank-1);i=this.recurrentActivation.apply(ma(f,y)),o=this.recurrentActivation.apply(ma(m,b));const v=wp(gi(o,r),d);l=this.activation.apply(ma(g,v));const x=ma(gi(i,r),gi(ma(1,Li(i)),l));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Jm(this.activation),recurrentActivation:Jm(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kp(this.kernelInitializer),recurrentInitializer:Kp(this.recurrentInitializer),biasInitializer:Kp(this.biasInitializer),kernelRegularizer:ig(this.kernelRegularizer),recurrentRegularizer:ig(this.recurrentRegularizer),biasRegularizer:ig(this.biasRegularizer),activityRegularizer:ig(this.activityRegularizer),kernelConstraint:Ud(this.kernelConstraint),recurrentConstraint:Ud(this.recurrentConstraint),biasConstraint:Ud(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Bg.className="GRUCell",ra(Bg);class Wg extends Og{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Bg(e),super(e)}call(e,t){return oa((()=>{null!=this.cell.dropoutMask&&(la(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(la(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Wg.className="GRU",ra(Wg);class Vg extends Lg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dd(this.units,"units"),this.activation=tg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=tg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Yp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=lg(e.kernelRegularizer),this.recurrentRegularizer=lg(e.recurrentRegularizer),this.biasRegularizer=lg(e.biasRegularizer),this.kernelConstraint=jd(e.kernelConstraint),this.recurrentConstraint=jd(e.recurrentConstraint),this.biasConstraint=jd(e.biasConstraint),this.dropout=up([1,cp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=up([1,cp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=rf(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Ap{apply(t,r){const s=e.apply([n]),a=(new _p).apply([n]),i=e.apply([2*n]);return bp(bp(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return oa((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new fd(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jg({ones:()=>Vi(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jg({ones:()=>Vi(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=gi(e,a[0]));let h=wp(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=gi(r,i[0])),h=ma(h,wp(r,this.recurrentKernel.read())),this.useBias&&(h=Sp(h,this.bias.read()));const[d,p,f,m]=lo(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=ma(gi(l,s),gi(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=gi(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Jm(this.activation),recurrentActivation:Jm(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kp(this.kernelInitializer),recurrentInitializer:Kp(this.recurrentInitializer),biasInitializer:Kp(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ig(this.kernelRegularizer),recurrentRegularizer:ig(this.recurrentRegularizer),biasRegularizer:ig(this.biasRegularizer),activityRegularizer:ig(this.activityRegularizer),kernelConstraint:Ud(this.kernelConstraint),recurrentConstraint:Ud(this.recurrentConstraint),biasConstraint:Ud(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Vg.className="LSTMCell",ra(Vg);class Ug extends Og{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Vg(e),super(e)}call(e,t){return oa((()=>{null!=this.cell.dropoutMask&&(la(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(la(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ug.className="LSTM",ra(Ug);class Gg extends Lg{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return oa((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;ef(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{np(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=[];for(const s of t.cells)r.push(Cf(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return lf(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}uf(t)}}function jg(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>Ip(t(),n),i=()=>Ep(a,t,r);if(!s||s<=1)return ua(i().clone());return Array(s).fill(void 0).map(i).map((e=>ua(e.clone())))}Gg.className="StackedRNNCells",ra(Gg);var Hg=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class qg extends Og{constructor(e){if(e.unroll)throw new md("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new md("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new cf({ndim:5})]}call(e,t){return oa((()=>{if(null!=this.cell.dropoutMask&&(la(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(la(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new fd("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return oa((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Bi([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];oa((()=>{if(!this.stateful)throw new dd("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new fd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Bi(s))):this.states_=[Bi(s)];else if(null==e)la(this.states_),null!=this.keptStates&&(la(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Bi(s))):this.states_[0]=Bi(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new fd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):la(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!b(n.shape,r))throw new fd(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ua(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=gg(l,r[0],s,a[0],i[0]),h=gg(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}qg.className="ConvRNN2D";class Kg extends Vg{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Dd(this.filters,"filters"),this.kernelSize=mg(n,2,"kernelSize"),this.kernelSize.forEach((e=>Dd(e,"kernelSize"))),this.strides=mg(r||1,2,"strides"),this.strides.forEach((e=>Dd(e,"strides"))),this.padding=s||"valid",Jd(this.padding),this.dataFormat=a||"channelsLast",Qd(this.dataFormat),this.dilationRate=mg(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Dd(e,"dilationRate")))}build(e){var t;e=rf(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new fd(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Ap{apply(e,t){return yp([n.apply([r]),Wi([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return oa((()=>{if(3!==e.length)throw new fd(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jg({ones:()=>Vi(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?gi(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jg({ones:()=>Vi(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[y,b,v,x]=lo(this.kernel.read(),4,3),[w,k,T,N]=this.useBias?lo(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,v,T,this.padding),h=this.inputConv(h,x,N,this.padding);const[S,I,E,$]=lo(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,I),m=this.recurrentConv(m,E),g=this.recurrentConv(g,$);const C=this.recurrentActivation.apply(ma(l,p)),A=this.recurrentActivation.apply(ma(u,f)),R=ma(gi(A,a),gi(C,this.activation.apply(ma(c,m)))),_=gi(this.recurrentActivation.apply(ma(h,g)),this.activation.apply(R));return[_,_,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Hg(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=ja(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Sp(s,n,this.dataFormat):s}recurrentConv(e,t){return ja(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Kg.className="ConvLSTM2DCell",ra(Kg);class Yg extends qg{constructor(e){const t=new Kg(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Yg.className="ConvLSTM2D",ra(Yg);class Xg extends mf{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return oa((()=>{this.invokeCallHook(e,t);const n=nf(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Ep((()=>Ip(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Xg.className="Dropout",ra(Xg);class Zg extends Xg{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Zg.className="SpatialDropout1D",ra(Zg);class Qg extends mf{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Dd(this.units,"units"),this.activation=tg(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Yp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Yp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=jd(e.kernelConstraint),this.biasConstraint=jd(e.biasConstraint),this.kernelRegularizer=lg(e.kernelRegularizer),this.biasRegularizer=lg(e.biasRegularizer),this.activityRegularizer=lg(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=rf(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=rf(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return oa((()=>{this.invokeCallHook(e,t);const n=nf(e),r=Md(this.activation.getClassName());let s;return null!=r?s=wp(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=wp(n,this.kernel.read()),null!=this.bias&&(s=Sp(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Jm(this.activation),useBias:this.useBias,kernelInitializer:Kp(this.kernelInitializer),biasInitializer:Kp(this.biasInitializer),kernelRegularizer:ig(this.kernelRegularizer),biasRegularizer:ig(this.biasRegularizer),activityRegularizer:ig(this.activityRegularizer),kernelConstraint:Ud(this.kernelConstraint),biasConstraint:Ud(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Qg.className="Dense",ra(Qg);class Jg extends mf{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=rf(e);for(const t of e.slice(1))if(null==t)throw new fd(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],op(e,1)]}call(e,t){return oa((()=>{this.invokeCallHook(e,t);let n=nf(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new fd(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],op(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Jg.className="Flatten",ra(Jg);class ey extends mf{constructor(e){super(e),this.supportsMasking=!0,this.activation=tg(e.activation)}call(e,t){return oa((()=>{this.invokeCallHook(e,t);const n=nf(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Jm(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ey.className="Activation",ra(ey);class ty extends mf{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return oa((()=>{return e=nf(e),t=e,n=this.n,oa((()=>{if(2!==t.shape.length)throw new fd(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return vp(pp(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ty.className="RepeatVector",ra(ty);class ny extends mf{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==a)throw new fd("Can only specifiy one unknown dimension.");a=o}else s*=e}const i=op(e);if(null!==a){if(0===s||i%s!==0)throw new fd(n);r[a]=i/s}else if(i!==s)throw new fd(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return oa((()=>{this.invokeCallHook(e,t);const n=nf(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ny.className="Reshape",ra(ny);class ry extends mf{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=hp(1,e.dims.length+1);if(!b(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new cf({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=rf(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return wo(nf(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ry.className="Permute",ra(ry);class sy extends mf{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=nf(e);return ya(zi(n,this.maskValue),-1)}call(e,t){return oa((()=>{this.invokeCallHook(e,t);const n=nf(e),r=ya(zi(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}sy.className="Masking",ra(sy);class ay extends mf{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(wd(e.inputLength))}this.inputDim=e.inputDim,Dd(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Dd(this.outputDim,"outputDim"),this.embeddingsInitializer=Yp(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=lg(e.embeddingsRegularizer),this.activityRegularizer=lg(e.activityRegularizer),this.embeddingsConstraint=jd(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return oa((()=>this.maskZero?(e=nf(e),zi(e,xo(e))):null))}computeOutputShape(e){if(e=rf(e),null==this.inputLength)return[...e,this.outputDim];const t=wd(this.inputLength);if(t.length!==e.length-1)throw new fd(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new fd(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return oa((()=>{this.invokeCallHook(e,t);let n=nf(e);"int32"!==n.dtype&&(n=dp(n,"int32"));return kp(this.embeddings.read(),n.as1D()).reshape(rf(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Kp(this.embeddingsInitializer),embeddingsRegularizer:ig(this.embeddingsRegularizer),activityRegularizer:ig(this.activityRegularizer),embeddingsConstraint:Ud(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ay.className="Embedding",ra(ay);class iy extends mf{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new md}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new fd("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[rf(e)]),e.length<2)throw new fd(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=Cd(t),t.length>1)throw new fd(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Cd(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return oa((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=cp(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=pp(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let i=a.reshape([r].concat(op(e.slice(1))));i=wo(i,[1,0]),i=i.reshape(s),t.push(i),n=!0}else if(e>1){const r=hp(1,e).concat([0]);t.push(wo(a,r)),n=!0}else t.push(a)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=wo(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(hp(0,s-1));r=wo(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=Cd(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return oa((()=>{if(null==t)return null;if(!Array.isArray(t))throw new fd("`mask` should be an Array");if(!Array.isArray(e))throw new fd("`inputs` should be an Array");if(t.length!==e.length)throw new fd(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:si(e,0))))[0];for(let e=1;e<t.length-1;++e)n=xi(n,t[e]);return n}))}}class oy extends iy{constructor(e){super(e)}mergeFunction(e){return oa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ma(t,e[n]);return t}))}}oy.className="Add",ra(oy);class ly extends iy{constructor(e){super(e)}mergeFunction(e){return oa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=gi(t,e[n]);return t}))}}ly.className="Multiply",ra(ly);class uy extends iy{constructor(e){super(e)}mergeFunction(e){return oa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ma(t,e[n]);return gi(1/e.length,t)}))}}uy.className="Average",ra(uy);class cy extends iy{constructor(e){super(e)}mergeFunction(e){return oa((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ti(t,e[n]);return t}))}}cy.className="Maximum",ra(cy);class hy extends iy{constructor(e){super(e)}mergeFunction(e){return oa((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ii(t,e[n]);return t}))}}hy.className="Minimum",ra(hy);class dy extends iy{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new fd("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(b(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new fd("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return oa((()=>yp(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new fd("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new fd("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new fd("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new fd(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return oa((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let a=0;a<e.length;++a)null==t[a]?r.push(Vi(e[a]).asType("bool")):t[a].rank<e[a].rank?r.push(si(t[a],-1)):r.push(t[a]);const s=Ba(r,this.axis);return ga(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function py(e,t){for(;e<0;)e+=t;return e}dy.className="Concatenate",ra(dy);class fy extends iy{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){p(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new md("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new fd(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new fd(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>py(t,e[n].shape.length))):[py(this.axes,n.shape.length),py(this.axes,r.shape.length)],this.normalize&&(n=Af(n,t[0]),r=Af(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new md("batchDot is not implemented for tensors of 4D or higher rank yet");if(p(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),p(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new md("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return oa((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[py(this.axes,e.length),py(this.axes,t.length)],n}computeOutputShape(e){p(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new md("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}fy.className="Dot",ra(fy);class my extends mf{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return oa((()=>{this.invokeCallHook(e,t);const n=nf(e);return Ep((()=>xp(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}my.className="GaussianNoise",ra(my);class gy extends mf{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return oa((()=>{this.invokeCallHook(e,t);const n=nf(e);if(this.rate>0&&this.rate<1){return Ep((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(xp(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}gy.className="GaussianDropout",ra(gy);class yy extends mf{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||nf(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return oa((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=nf(e),r=-1.7580993408473766;let s=hi(Yi(n),this.rate);s=dp(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)};return Ep(r,(()=>nf(e)),t.training||!1)}return e}))}}function by(e,t,n,r,s){let a,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)a=Oa(e,t,n,r,s,i);else if(3===e.rank)a=La(e,t,n,r,s,i);else{if(4!==e.rank)throw new md(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=za(e,t,n,r,s,i)}return a}function vy(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return b(r.slice().sort(),hp(0,e.rank-1))?function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return oa((()=>{const a=Oi(e,r),i=a.mean,o=a.variance;return[by(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return oa((()=>{const a=Oi(e,r),i=a.mean,o=a.variance,l=[];for(const t of hp(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=i.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[by(e,u,c,d,h,s),i,o]}))}(e,t,n,r,s)}yy.className="AlphaDropout",ra(yy);class xy extends mf{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Yp(e.betaInitializer||"zeros"),this.gammaInitializer=Yp(e.gammaInitializer||"ones"),this.movingMeanInitializer=Yp(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Yp(e.movingVarianceInitializer||"ones"),this.betaConstraint=jd(e.betaConstraint),this.gammaConstraint=jd(e.gammaConstraint),this.betaRegularizer=lg(e.betaRegularizer),this.gammaRegularizer=lg(e.gammaRegularizer)}build(e){e=rf(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new fd(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new cf({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return oa((()=>{const n=null!=t.training&&t.training,r=nf(e),s=r.shape,a=s.length,i=hp(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=yd(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!b(u,hp(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return by(r,e,t,n,s,this.epsilon)}return by(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=vy(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{oa((()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Kp(this.betaInitializer),gammaInitializer:Kp(this.gammaInitializer),movingMeanInitializer:Kp(this.movingMeanInitializer),movingVarianceInitializer:Kp(this.movingVarianceInitializer),betaRegularizer:ig(this.betaRegularizer),gammaRegularizer:ig(this.gammaRegularizer),betaConstraint:Ud(this.betaConstraint),gammaConstraint:Ud(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}xy.className="BatchNormalization",ra(xy);class wy extends mf{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Yp(e.betaInitializer||"zeros"),this.gammaInitializer=Yp(e.gammaInitializer||"ones"),this.betaRegularizer=lg(e.betaRegularizer),this.gammaRegularizer=lg(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=rf(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(const s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Cd(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=nf(e),r=n.shape,s=r.length;return oa((()=>{let{mean:e,variance:t}=Oi(n,this.axis,!0);const a=yd(1,s);for(const n of this.axis)a[n]=r[n];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),c.push(1)):(u.push(1),c.push(r[n]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),by(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Kp(this.betaInitializer),gammaInitializer:Kp(this.gammaInitializer),betaRegularizer:ig(this.betaRegularizer),gammaRegularizer:ig(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}wy.className="LayerNormalization",ra(wy);class ky extends mf{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new fd(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new fd(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new fd(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new cf({ndim:4})]}computeOutputShape(e){let t,n;return e=rf(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return oa((()=>{return t=nf(e),n=this.padding,r=this.dataFormat,oa((()=>{if(4!==t.rank)throw new fd(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new fd("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new fd(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Ui(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Ty(e,t,n,r,s,a){return oa((()=>{let i;Qd(s),ep(a),Jd(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=bg(e,s);const o="same"===r?"same":"valid";return i="max"===a?wi(e,t,n,o):Da(e,t,n,o),"channelsFirst"===s&&(i=wo(i,[0,3,1,2])),i}))}function Ny(e,t,n,r,s,a){return oa((()=>{let i;Qd(s),ep(a),Jd(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=vg(e,s);const o="same"===r?"same":"valid";return i="max"===a?ki(e,t,n,o):Fa(e,t,n,o),"channelsFirst"===s&&(i=wo(i,[0,4,1,2,3])),i}))}ky.className="ZeroPadding2D",ra(ky);class Sy extends mf{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new fd(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Dd(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new fd(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Dd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Jd(this.padding),this.inputSpec=[new cf({ndim:3})]}computeOutputShape(e){const t=gg((e=rf(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return oa((()=>{this.invokeCallHook(e,t),e=pp(nf(e),2);const n=this.poolingFunction(nf(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return co(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Iy extends Sy{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Qd(s),Jd(r),Ty(e,t,n,r,s,"max")}}Iy.className="MaxPooling1D",ra(Iy);class Ey extends Sy{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Qd(s),Jd(r),Ty(e,t,n,r,s,"avg")}}Ey.className="AveragePooling1D",ra(Ey);class $y extends mf{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new fd(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Dd(this.poolSize,"poolSize"),Dd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qd(this.dataFormat),Jd(this.padding),this.inputSpec=[new cf({ndim:4})]}computeOutputShape(e){e=rf(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=gg(t,this.poolSize[0],this.padding,this.strides[0]),n=gg(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return oa((()=>(this.invokeCallHook(e,t),this.poolingFunction(nf(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Cy extends $y{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Qd(s),Jd(r),Ty(e,t,n,r,s,"max")}}Cy.className="MaxPooling2D",ra(Cy);class Ay extends $y{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Qd(s),Jd(r),Ty(e,t,n,r,s,"avg")}}Ay.className="AveragePooling2D",ra(Ay);class Ry extends mf{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new fd(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Dd(this.poolSize,"poolSize"),Dd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qd(this.dataFormat),Jd(this.padding),this.inputSpec=[new cf({ndim:5})]}computeOutputShape(e){e=rf(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=gg(t,this.poolSize[0],this.padding,this.strides[0]),n=gg(n,this.poolSize[1],this.padding,this.strides[1]),r=gg(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return oa((()=>(this.invokeCallHook(e,t),this.poolingFunction(nf(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class _y extends Ry{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Qd(s),Jd(r),Ny(e,t,n,r,s,"max")}}_y.className="MaxPooling3D",ra(_y);class Dy extends Ry{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Qd(s),Jd(r),Ny(e,t,n,r,s,"avg")}}Dy.className="AveragePooling3D",ra(Dy);class Fy extends mf{constructor(e){super(e),this.inputSpec=[new cf({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new md}}class My extends Fy{constructor(e){super(e||{})}call(e,t){return oa((()=>{const t=nf(e);return Ni(t,1)}))}}My.className="GlobalAveragePooling1D",ra(My);class Oy extends Fy{constructor(e){super(e||{})}call(e,t){return oa((()=>{const t=nf(e);return mi(t,1)}))}}Oy.className="GlobalMaxPooling1D",ra(Oy);class Ly extends mf{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qd(this.dataFormat),this.inputSpec=[new cf({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new md}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class zy extends Ly{call(e,t){return oa((()=>{const t=nf(e);return"channelsLast"===this.dataFormat?Ni(t,[1,2]):Ni(t,[2,3])}))}}zy.className="GlobalAveragePooling2D",ra(zy);class Py extends Ly{call(e,t){return oa((()=>{const t=nf(e);return"channelsLast"===this.dataFormat?mi(t,[1,2]):mi(t,[2,3])}))}}Py.className="GlobalMaxPooling2D",ra(Py);class By extends mf{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=Cf(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Wy extends By{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=rf(e)).length<3)throw new fd(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=rf(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return oa((()=>Mg(((e,n)=>[nf(this.layer.call(e,t)),[]]),e=nf(e),[],!1,null,null,!1,!0)[1]))}}Wy.className="TimeDistributed",ra(Wy);class Vy extends By{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Cf(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Cf(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Rd(Xd,"BidirectionalMergeMode",s),e.weights)throw new md("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):xd(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Fg(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new fd("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new cf({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new md("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof hf;for(const l of a)if(l instanceof hf!==o)throw new fd("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return oa((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Zi(s,1)),"concat"===this.mergeMode?i=yp([r,s]):"sum"===this.mergeMode?i=ma(r,s):"ave"===this.mergeMode?i=gi(.5,ma(r,s)):"mul"===this.mergeMode?i=gi(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){np(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),np(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Cf(t.layer);if(delete t.layer,null!=t.numConstants)throw new md("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Vy.className="Bidirectional",ra(Vy);var Uy,Gy;!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Uy||(Uy={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Gy||(Gy={}));function jy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Yy(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=jy(e[a],t,n,r);s[a]=i}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Hy(e){return qy(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ky)}function qy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Yy(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=qy(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Ky(e){return null===e?null:Yy(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Yy(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof yr))}function Xy(e){return function(e,t){return jy(e,t)}(e,Zy)}function Zy(e){return e instanceof yr?{value:e.clone(),recurse:!1}:Yy(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Qy{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Jy extends Qy{constructor(){super(Jy.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function eb(e){return new sb(e)}function tb(e,t){return new mb(e,t)}Jy.INITIAL_CAPACITY=32;class nb{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new hb(this,e)}filter(e){return new ub(this,e)}map(e){return new cb(this,e)}mapAsync(e){return new db(this,e)}serialMapAsync(e){return new db(this,e).serial()}flatmap(e){return new fb(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new lb(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ky;return this.rowMajorBatch(e,t).map((e=>Hy(e,n)))}concatenate(e,t){return new mb(new rb([this,e]),t)}take(e){return e<0||null==e?this:new ob(this,e)}skip(e){return e<0||null==e?this:new ib(this,e)}prefetch(e){return new yb(this,e)}shuffle(e,t){return new bb(this,e,t)}serial(){return new ab(this)}}class rb extends nb{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Xy(e),done:!1}}}class sb extends nb{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class ab extends nb{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class ib extends nb{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;la(e.value)}return this.upstream.next()}}class ob extends nb{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class lb extends nb{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class ub extends nb{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;la(e.value)}}}class cb extends nb{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Cr(e.value),n=this.transform(e.value),r=Cr(n);for(const s of t)$r(s,r)||s.dispose();return{value:n,done:!1}}}class hb extends nb{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class db extends nb{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Cr(e.value),n=await this.transform(e.value),r=Cr(n);for(const s of t)$r(s,r)||s.dispose();return{value:n,done:!1}}}class pb extends nb{constructor(){super(),this.outputQueue=new Jy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class fb extends pb{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Cr(e.value),n=this.transform(e.value),r=Cr(n);this.outputQueue.pushAll(n);for(const s of t)$r(s,r)||s.dispose();return!0}}class mb extends nb{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var gb;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(gb||(gb={}));class yb extends nb{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Qy(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class bb extends yb{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ji.alea(n||cr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class vb{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let r;return p(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),xb((async()=>(await n.iterator()).columnMajorBatch(e,t,wb)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,xb((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,xb((async()=>(await t.iterator()).filter((t=>oa((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return xb((async()=>(await t.iterator()).map((t=>oa((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return xb((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return xb((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,xb((async()=>tb(eb((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,xb((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=ji.alea(t||cr().toString());return xb((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,xb((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function xb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends vb{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function wb(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof yr||C(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof yr?ho(e):qr(e)}(e),recurse:!1}}return{value:null,recurse:!0}}vb.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function kb(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&p("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const Tb=fu;class Nb extends l{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new o(this,aa())}write(e,t,n){this.firstUse&&(this.firstUse=!1,K().get("IS_NODE")&&Xl("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&R(n[0])){const s=n.map((e=>hr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return Ql(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>dr(e)))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Es(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return aa().makeTensorFromDataId(r,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=cr();e();return{kernelMs:cr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){kb([e],"where");const t=this.readSync(e.dataId);return Tb(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Sb(e,t,n){return r=>{let{inputs:s,attrs:a,backend:i}=r;const{x:o}=s;if(kb(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=i,u=l.data.get(o.dataId).values,c=y(o.shape),h=n||o.dtype,d=E(h,c);for(let e=0;e<c;++e)d[e]=t(u[e],a);return l.makeTensorInfo(o.shape,h,d)}}function Ib(e,t,n){return r=>{let{inputs:s,attrs:a,backend:i}=r;const{x:o}=s;if(kb(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=i,u=l.data.get(o.dataId).values,c=n||o.dtype,h=t(u,c,a);return l.makeTensorInfo(o.shape,c,h)}}ca("cpu",(()=>new Nb),1);const Eb=Sb(He,(e=>e>=0?e:Math.exp(e)-1)),$b={kernelName:He,backendName:"cpu",kernelFunc:Eb};function Cb(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Ab={kernelName:ut,backendName:"cpu",kernelFunc:Cb};function Rb(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;kb([s],"leakyRelu");const i=y(s.shape),o=n.data.get(s.dataId).values,l=I("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?a*o[u]:o[u];return n.makeTensorInfo(s.shape,"float32",l)}const _b={kernelName:mt,backendName:"cpu",kernelFunc:Rb};function Db(e){return(t,n,r,s,a)=>{const i=ni(t,n),o=i.length,l=O(i),u=I(a,y(i)),c=t.length,h=n.length,d=O(t),p=O(n),f=ei(t,i),m=ei(n,i);if(f.length+m.length===0)for(let g=0;g<u.length;++g)u[g]=e(r[g%r.length],s[g%s.length]);else for(let g=0;g<u.length;++g){const t=G(g,o,l),n=t.slice(-c);f.forEach((e=>n[e]=0));const a=U(n,c,d),i=t.slice(-h);m.forEach((e=>i[e]=0));const y=U(i,h,p);u[g]=e(r[a],s[y])}return[u,i]}}const Fb=Db(((e,t)=>e<0?t*e:e));function Mb(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;kb([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=Fb(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const Ob={kernelName:Xt,backendName:"cpu",kernelFunc:Mb},Lb=Sb(tn,(e=>Math.max(0,e))),zb={kernelName:tn,backendName:"cpu",kernelFunc:Lb},Pb=Sb(ln,(e=>Math.min(Math.max(0,e),6))),Bb={kernelName:ln,backendName:"cpu",kernelFunc:Pb};function Wb(e,t,n,r,s){if("linear"===n)return Cb({inputs:{x:t},backend:e});if("relu"===n)return Lb({inputs:{x:t},backend:e});if("elu"===n)return Eb({inputs:{x:t},backend:e});if("relu6"===n)return Pb({inputs:{x:t},backend:e});if("prelu"===n)return Mb({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Rb({inputs:{x:t},backend:e,attrs:{alpha:s}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Vb(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const Ub={kernelName:Te,backendName:"cpu",kernelFunc:Vb};function Gb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Vb({inputs:{real:Gb(e,t,"float32"),imag:Gb(e,t,"float32")},backend:e})}const r=B(y(t),n);return e.makeTensorInfo(t,n,r)}function jb(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Hb={kernelName:Jt,backendName:"cpu",kernelFunc:jb};function qb(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return Cb({inputs:{x:s},backend:n});const e=Gb(n,s.shape,s.dtype),t=qb({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Vb({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=jb({inputs:{input:s},backend:n}),t=qb({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!$(s.dtype,a)){const e=Cb({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=ur([0],s.dtype),[r,a]=Db(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const Kb={kernelName:xe,backendName:"cpu",kernelFunc:qb};function Yb(e,t,n,r){return null==n?n=>{let{inputs:s,backend:a}=n;const{a:i,b:o}=s,l=a;kb([i,o],e);const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,h=r||i.dtype,[d,p]=t(i.shape,o.shape,u,c,h);return l.makeTensorInfo(p,h,d)}:e=>{let{inputs:s,backend:a}=e;const{a:i,b:o}=s,l=a;if("complex64"===i.dtype||"complex64"===o.dtype){const e=qb({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,a=l.data.get(r.dataId).values,u=l.data.get(s.dataId).values,c=qb({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=l.data.get(d.dataId).values,m=l.data.get(p.dataId).values,[g,y,b]=n(i.shape,o.shape,a,u,f,m),v=l.makeTensorInfo(b,"float32",g),x=l.makeTensorInfo(b,"float32",y),w=Vb({inputs:{real:v,imag:x},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(v),l.disposeIntermediateTensorInfo(x),w}{const e=l.data.get(i.dataId).values,n=l.data.get(o.dataId).values,s=r||i.dtype,[a,u]=t(i.shape,o.shape,e,n,s);return l.makeTensorInfo(u,s,a)}}}function Xb(e){return(t,n,r,s,a,i)=>{const o=ni(t,n),l=y(o),u=o.length,c=O(o),h=I("float32",l),d=I("float32",l),p=ei(t,o),f=ei(n,o),m=Ql(r,s),g=Ql(a,i),b=t.length,v=O(t),x=n.length,w=O(n);if(p.length+f.length===0)for(let y=0;y<h.length;y++){const t=y%m.length,n=y%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[y]=r.real,d[y]=r.imag}else for(let y=0;y<h.length;y++){const t=G(y,u,c),n=t.slice(-b);p.forEach((e=>n[e]=0));const r=U(n,b,v),s=t.slice(-x);f.forEach((e=>s[e]=0));const a=U(s,x,w),i=e(m[2*r],m[2*r+1],g[2*a],g[2*a+1]);h[y]=i.real,d[y]=i.imag}return[h,d,o]}}const Zb=Db(((e,t)=>e+t)),Qb=Xb(((e,t,n,r)=>({real:e+n,imag:t+r}))),Jb=Yb(ne,Zb,Qb),ev={kernelName:ne,backendName:"cpu",kernelFunc:Jb};function tv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=y(s.shape),o=T(a,i),l=y(o);p(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const nv={kernelName:nn,backendName:"cpu",kernelFunc:tv};function rv(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;kb([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?s.shape[l-1]:s.shape[l-2],f=o?a.shape[u-2]:a.shape[u-1],m=s.shape.slice(0,-2),g=a.shape.slice(0,-2),b=y(m),v=y(g);p(l>=2&&u>=2&&(b===v||1===b||1===v),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(b>v?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([d,f]);p(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[v,f,h]:[v,h,f],k=tv({inputs:{x:s},backend:n,attrs:{shape:i?[b,c,d]:[b,d,c]}}),T=tv({inputs:{x:a},backend:n,attrs:{shape:w}}),N=i?k.shape[1]:k.shape[2],S=i?k.shape[2]:k.shape[1],I=o?T.shape[1]:T.shape[2],E=Math.max(b,v),$=n.data.get(k.dataId).values,C=n.data.get(T.dataId).values,A=O(k.shape),R=O(T.shape),[_,D,F]=i?[A[0],1,A[1]]:[A[0],A[1],1],[M,L,z]=o?[1,R[1],R[0]]:[R[1],1,R[0]],P=S*I,B=Es([E,S,I],k.dtype),W=B.values,V=n.blockSize;for(let p=0;p<E;p++)for(let e=0;e<S;e+=V)for(let t=0;t<I;t+=V)for(let n=0;n<N;n+=V){const r=Math.min(e+V,S),s=Math.min(t+V,I),a=Math.min(n+V,N);for(let i=e;i<r;i++)for(let e=t;e<s;e++){let t=0;for(let r=n;r<a;r++){const n=Math.min(p,b-1)*_,s=Math.min(p,v-1)*z;t+=$[n+i*D+r*F]*C[r*M+e*L+s]}W[p*P+(i*I+e)]+=t}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(T),n.makeTensorInfo(x,B.dtype,B.values)}const sv={kernelName:ye,backendName:"cpu",kernelFunc:rv};const av={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=rv({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=Jb({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=Wb(n,d,c,o,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function iv(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const ov={kernelName:J,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;kb(t,"abs");let r=new Float32Array(y(t.shape));return r=iv(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},lv=Sb(ee,(e=>Math.acos(e))),uv={kernelName:ee,backendName:"cpu",kernelFunc:lv},cv=Sb(te,(e=>Math.acosh(e))),hv={kernelName:te,backendName:"cpu",kernelFunc:cv};const dv={kernelName:re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;kb(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=Es(r[0].shape,r[0].dtype),i=a.values;for(let o=0;o<r.length;o++){const e=s[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function pv(e,t,n,r,s){const a=t.length,i=y(t),o=O(t),l=O(s),u=I(n,y(s));for(let c=0;c<i;++c){const t=G(c,a,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];u[U(n,a,l)]=e[c]}return u}function fv(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;kb(s,"transpose");const i=s.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=s.shape[a[u]];const l=pv(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const mv={kernelName:Mn,backendName:"cpu",kernelFunc:fv};const gv={kernelName:se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;kb(s,"all");const o=N(a,s.shape);let l=o;const u=_i(l,s.shape.length);let c=s;null!=u&&(c=fv({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Fi(l.length,s.shape.length)),Ri("all",l,c.shape.length);const[h,d]=Ci(c.shape,l),p=y(d),f=B(y(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];t=t&&r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=tv({inputs:{x:g},backend:n,attrs:{shape:Ai(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const yv={kernelName:ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;kb(s,"any");const o=N(a,s.shape);let l=o;const u=_i(l,s.shape.length);let c=s;null!=u&&(c=fv({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Fi(l.length,s.shape.length)),Ri("any",l,c.shape.length);const[h,d]=Ci(c.shape,l),p=y(d),f=B(y(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];t=t||r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=tv({inputs:{x:g},backend:n,attrs:{shape:Ai(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const bv={kernelName:ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;kb(s,"argMax");let i=N(a,s.shape);const o=_i(i,s.shape.length);let l=s;const u=[];null!=o&&(l=fv({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Fi(i.length,l.shape.length)),i=[i[0]],Ri("argMax",i,l.shape.length);const[c,h]=Ci(l.shape,i),d=B(y(c),"int32"),p=y(h),f=n.data.get(l.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let r=0;r<p;++r){const s=f[e+r];s>t&&(t=s,n=r)}d[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};const vv={kernelName:oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;kb(s,"argMin");let i=N(a,s.shape);const o=_i(i,s.shape.length);let l=s;const u=[];null!=o&&(l=fv({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Fi(i.length,l.shape.length)),i=[i[0]],Ri("argMin",i,l.shape.length);const[c,h]=Ci(l.shape,i),d=B(y(c),"int32"),p=y(h),f=n.data.get(l.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let r=0;r<p;++r){const s=f[e+r];s<t&&(t=s,n=r)}d[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},xv=Sb(le,(e=>Math.asin(e))),wv={kernelName:le,backendName:"cpu",kernelFunc:xv},kv=Sb(ue,(e=>Math.asinh(e))),Tv={kernelName:ue,backendName:"cpu",kernelFunc:kv},Nv=Sb(ce,(e=>Math.atan(e))),Sv={kernelName:ce,backendName:"cpu",kernelFunc:Nv},Iv=Db(((e,t)=>Math.atan2(e,t))),Ev=Yb(de,Iv),$v={kernelName:de,backendName:"cpu",kernelFunc:Ev},Cv=Sb(he,(e=>Math.atanh(e))),Av={kernelName:he,backendName:"cpu",kernelFunc:Cv};function Rv(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Es(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let x=0;x<s.batchSize;++x){const t=x*y,n=x*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const x=y*i-d,w=Math.max(0,x),k=Math.min(s.inHeight,c+x),T=t+y*b;for(let t=0;t<s.outWidth;++t){const i=t*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let y=f,b=0,x=0;for(let t=w;t<k;t+=l){const s=n+t*r[1];for(let t=c;t<d;t+=u){const n=e[s+t*r[2]+m];"max"===a&&n>y?y=n:"avg"===a&&(b+=n,x++)}if(isNaN(y))break}g[T+t*v+m]="avg"===a?b/x:y}}}return m}function _v(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Es(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Es(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-p;let y=n;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const v=Math.min(r.inWidth,d+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=u){const i=t-n;for(let n=p;n<v;n+=c){const o=n-h,l=m.get(g,t,n,e);l>x&&(x=l,w=s?a?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*d+o)}}i.set(w,g,t,o,e)}}return i}function Dv(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Es(s.outShape,n),x=v.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let S=0;S<s.batchSize;++S){const t=S*w,n=S*r[0];for(let v=0;v<s.inChannels;++v)for(let w=0;w<s.outDepth;++w){const S=w*i-m;let I=S;for(;I<0;)I+=u;const E=Math.min(s.inDepth,d+S),$=t+w*k;for(let t=0;t<s.outHeight;++t){const i=t*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+i),w=$+t*T;for(let t=0;t<s.outWidth;++t){const i=t*l-y;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=w+t*N;let k=b,T=0,S=0;for(let t=I;t<E;t+=u){const s=n+t*r[1];for(let t=d;t<m;t+=c){const n=s+t*r[2];for(let t=o;t<p;t+=h){const s=e[n+t*r[3]+v];if("max"===a&&s>k?k=s:"avg"===a&&(T+=s,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+v]="avg"===a?T/S:k}}}}return v}const Fv={kernelName:pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;kb(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(Aa(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=xa(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))c=Cb({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=O(s.shape),r=Rv(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const Mv={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u,dilations:c}=r;kb(s,"avgPool3d");let h=c;null==h&&(h=[1,1,1]);const d=wa(s.shape,a,i,h,o,l,u),p=Dv(n.data.get(s.dataId).values,s.shape,s.dtype,O(s.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};const Ov={kernelName:ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;kb([s,a],"avgPool3DGrad");const h=wa(a.shape,i,o,u,l,c),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=h.dilationDepth,v=h.dilationHeight,x=h.dilationWidth,w=h.effectiveFilterDepth,k=h.effectiveFilterHeight,T=h.effectiveFilterWidth,N=w-1-h.padInfo.front,S=T-1-h.padInfo.left,I=k-1-h.padInfo.top,E=Es(a.shape,"float32"),$=1/(m*g*y),C=n.bufferSync(s);for(let A=0;A<h.batchSize;++A)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inDepth;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const s=t-N,a=n-I,i=r-S;let o=0;for(let t=0;t<w;t+=b){const n=(s+t)/d;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=v){const r=(a+t)/p;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let t=0;t<T;t+=x){const s=(i+t)/f;if(s<0||s>=h.outWidth||Math.floor(s)!==s)continue;o+=C.get(A,n,r,s,e)}}}E.set(o*$,A,t,n,r,e)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}};const Lv={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;kb([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=xa(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,v=b-1-c.padInfo.left,x=y-1-c.padInfo.top,w=Es(i.shape,"float32"),k=1/(p*f),T=n.data.get(s.dataId).values,N=Es(s.shape,"float32",T);for(let S=0;S<c.batchSize;++S)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-x,s=n-v;let a=0;for(let t=0;t<y;t+=m){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const r=(s+t)/d;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;a+=N.get(S,n,r,e)}}w.set(a*k,S,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const zv={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;p(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),kb([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),y=m.length,b=f.length,v=d.length,x=h.length;let w=0,k=0,T=0,N=0;for(let p=0;p<c.length;++p)g[p]=m[w++]+(c[p]-h[k++])*f[T++]/Math.sqrt(d[N++]+u),w>=y&&(w=0),k>=x&&(k=0),T>=b&&(T=0),N>=v&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function Pv(e,t,n,r,s){const a=Zs(r,t,n),i=y(n),o=O(r);if(a){const n=Qs(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=Es(r,s,"string"===s?du(e):e),u=Es(n,s);for(let c=0;c<u.size;++c){const e=u.indexToLoc(c),n=e.map(((e,n)=>e+t[n]));u.set(l.get(...n),...e)}return"string"===s?pu(u.values):u.values}function Bv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;kb(s,"slice");const[o,l]=Js(s,a,i);Ps(s,o,l);const u=Pv(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const Wv={kernelName:mn,backendName:"cpu",kernelFunc:Bv};const Vv={kernelName:be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;kb([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Dl(s.shape,a,o),u=Fl(l.length,a.length),c=Ml(s.shape,a,o),h=Ol(i,a.length),d=Ll(c,i,a.length),p=tv({inputs:{x:s},backend:n,attrs:{shape:l}}),f=fv({inputs:{x:p},backend:n,attrs:{perm:u}}),m=tv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Bv({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Uv(e,t,n,r,s){const a=y(r),i=B(s,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(i[n]+=a>0?t[o]:1)}return i}function Gv(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e.shape[0],a=e.shape[1],i=Es([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const jv={kernelName:ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=Uv(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function Hv(e){return(t,n,r)=>{const s=I(n,t.length);for(let a=0;a<t.length;++a)s[a]=e(t[a],r);return s}}const qv=Hv((e=>Math.ceil(e))),Kv=Ib(we,qv),Yv={kernelName:we,backendName:"cpu",kernelFunc:Kv},Xv=Sb(ke,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Zv={kernelName:ke,backendName:"cpu",kernelFunc:Xv},Qv={kernelName:Ne,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(y(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){const e=o[u],t=l[u];r[u]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function Jv(e,t,n,r){const s=E(n,y(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=y(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?du(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function ex(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const tx={kernelName:ht,backendName:"cpu",kernelFunc:ex};function nx(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=N(s,t[0].shape)[0];let i=Cl(t.map((e=>e.shape)),a);if(0===y(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>y(e.shape)>0));if(1===o.length)return Cb({inputs:{x:o[0]},backend:n});if($l(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>jb({inputs:{input:e},backend:n}))),t=o.map((e=>ex({inputs:{input:e},backend:n}))),r=nx({inputs:e,backend:n,attrs:{axis:a}}),s=nx({inputs:t,backend:n,attrs:{axis:a}}),i=Vb({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=y(e.shape.slice(a));return tv({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Cl(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=Jv(u,i,t[0].dtype,c),d=Cl(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const rx={kernelName:Se,backendName:"cpu",kernelFunc:nx};function sx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;kb([s,a],"conv2d");const h=Ra(l),d=ka(s.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,v="channelsLast"===d.dataFormat,x=new pr(d.outShape,s.dtype),w=O(s.shape),k=O(a.shape),T=w[0],N=v?w[1]:w[2],S=v?w[2]:1,I=v?1:w[1],E=x.strides[0],$=v?x.strides[1]:x.strides[2],C=v?x.strides[2]:1,A=v?1:x.strides[1],R=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,D=x.values;for(let F=0;F<d.batchSize;++F){const e=F*T,t=F*E;for(let n=0;n<d.outHeight;++n){const r=t+n*$,s=n*d.strideHeight-b;for(let t=0;t<p;++t){const n=s+t*m;if(n<0||n>=d.inHeight)continue;const a=t*k[0],i=e+n*N;for(let e=0;e<d.outWidth;++e){const t=r+e*C,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=i+r*S;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=R[s+e*I];for(let e=0;e<d.outChannels;++e)D[t+e*A]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,D)}const ax={kernelName:Ie,backendName:"cpu",kernelFunc:sx};const ix={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;kb([s,a],"conv2dBackpropFilter");const h=Ra(l),d=ka(s.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new pr(d.filterShape,"float32"),v=d.padInfo.left,x=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,T=new pr(s.shape,s.dtype,w),N=new pr(a.shape,a.dtype,k);for(let S=0;S<m;++S){const e=Math.max(0,Math.ceil((x-S)/p)),t=Math.min(d.outHeight,(d.inHeight+x-S)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((v-n)/f)),s=Math.min(d.outWidth,(d.inWidth+v-n)/f);for(let a=0;a<d.inChannels;++a)for(let i=0;i<d.outChannels;++i){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){const e=S+u*p-x;for(let t=r;t<s;++t){const r=n+t*f-v;o+=y?T.get(l,e,r,a)*N.get(l,u,t,i):T.get(l,a,e,r)*N.get(l,i,u,t)}}b.set(o,S,n,a,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const ox={kernelName:$e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;kb([s,a],"conv2dBackpropInput");const h=O(a.shape),d=O(s.shape);let p=Ra(u);const f=ka(i,a.shape,o,1,l,c,!1,p),m=new pr(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[v,x,w]=h,{batchSize:k,filterHeight:T,filterWidth:N,inChannels:S,inHeight:I,inWidth:E,outChannels:$,outHeight:C,outWidth:A,strideHeight:R,strideWidth:_}=f;p=f.dataFormat;const D=T-1-f.padInfo.top,F=N-1-f.padInfo.left,M="channelsLast"===p,L=m.strides[0],z=M?m.strides[1]:m.strides[2],P=M?m.strides[2]:1,B=M?1:m.strides[1],W=d[0],V=M?d[1]:d[2],U=M?d[2]:1,G=M?1:d[1];for(let O=0;O<k;++O)for(let e=0;e<S;++e)for(let t=0;t<I;++t){const n=t-D,r=Math.max(0,Math.ceil(n/R)),s=Math.min(C,(T+n)/R);for(let a=0;a<E;++a){const i=a-F,o=Math.max(0,Math.ceil(i/_)),l=Math.min(A,(N+i)/_);let u=0;for(let t=r;t<s;++t){const r=t*R-n;for(let n=o;n<l;++n){const s=W*O+V*t+U*n,a=v*(T-1-r)+x*(N-1-(n*_-i))+w*e;for(let e=0;e<$;++e){u+=y[s+G*e]*b[a+e]}}}g[L*O+z*t+P*a+B*e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const lx={kernelName:Ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;kb([s,a],"conv3d");const u=Ta(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,v=g.top,x=new pr(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,T=x.values,N=O(s.shape),S=O(a.shape);for(let I=0;I<u.batchSize;++I){const e=I*N[0],t=I*x.strides[0];for(let n=0;n<u.outDepth;++n){const r=t+n*x.strides[1],s=n*u.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*p;if(n<0||n>=u.inDepth)continue;const a=t*S[0],i=e+n*N[1];for(let e=0;e<u.outHeight;++e){const t=r+e*x.strides[2],n=e*u.strideHeight-v;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*S[1],o=i+r*N[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const a=s+e*S[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)T[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const ux={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;kb([s,a],"conv3dBackpropFilterV2");const u=O(s.shape),c=O(a.shape),h=Ta(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new pr(h.filterShape,"float32"),v=b.values,[x,w,k,T]=b.strides,N=n.data.get(a.dataId).values,[S,I,E,$]=c,C=n.data.get(s.dataId).values,[A,R,_,D]=u,F=h.padInfo.front,M=h.padInfo.left,L=h.padInfo.top;for(let O=0;O<m;++O){const e=Math.max(0,Math.ceil((F-O)/d)),t=Math.min(h.outDepth,(h.inDepth+F-O)/d),n=O*x;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((L-r)/p)),a=Math.min(h.outHeight,(h.inHeight+L-r)/p),i=r*w+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((M-n)/f)),l=Math.min(h.outWidth,(h.inWidth+M-n)/f),u=n*k+i;for(let i=0;i<h.inChannels;++i){const c=i*T+u;for(let u=0;u<h.outChannels;++u){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*A,g=c*S;for(let c=e;c<t;++c){const e=(O+c*d-F)*R+h,t=c*I+g;for(let c=s;c<a;++c){const s=(r+c*p-L)*_+e,a=c*E+t;for(let e=o;e<l;++e){const t=e*$+a;m+=C[(n+e*f-M)*D+s+i]*N[t+u]}}}}v[c+u]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const cx={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;kb([s],"conv3dBackpropInputV2");const u=O(s.shape),c=O(a.shape),h=Ta(l,a.shape,o,1,i),d=new pr(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(s.dataId).values,[v,x,w,k]=u,T=n.data.get(a.dataId).values,[N,S,I,E]=c,{batchSize:$,filterDepth:C,filterHeight:A,filterWidth:R,inChannels:_,inDepth:D,inHeight:F,inWidth:M,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=C-1-h.padInfo.front,j=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let O=0;O<$;++O)for(let e=0;e<_;++e)for(let t=0;t<D;++t){const n=t-G,r=Math.max(0,Math.ceil(n/W)),s=Math.min(z,(C+n)/W);for(let a=0;a<F;++a){const i=a-j,o=Math.max(0,Math.ceil(i/V)),l=Math.min(P,(A+i)/V);for(let u=0;u<M;++u){const c=u-H,h=Math.max(0,Math.ceil(c/U)),d=Math.min(B,(R+c)/U);let $=0;for(let t=r;t<s;++t){const r=t*W-n;for(let n=o;n<l;++n){const s=n*V-i;for(let a=h;a<d;++a){const i=v*O+x*t+w*n+k*a,o=N*(C-1-r)+S*(A-1-s)+I*(R-1-(a*U-c))+E*e;for(let e=0;e<L;++e){$+=b[i+e]*T[o+e]}}}}p[f*O+m*t+g*a+y*u+e]=$}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},hx=Sb(_e,(e=>Math.cos(e))),dx={kernelName:_e,backendName:"cpu",kernelFunc:hx},px=Sb(De,(e=>Math.cosh(e))),fx={kernelName:De,backendName:"cpu",kernelFunc:px};const mx={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=a.shape[0],[m,g]=o,y=Es([f,m,g,p],"float32"),b=n.data.get(a.dataId).values,v=n.data.get(i.dataId).values,x=n.data.get(s.dataId).values,w=O(s.shape),k=O(y.shape);for(let T=0;T<f;T++){const e=4*T,t=b[e],n=b[e+1],r=b[e+2],s=b[e+3],a=v[T];if(a>=c)continue;const i=m>1?(r-t)*(h-1)/(m-1):0,o=g>1?(s-n)*(d-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(h-1)+c*i:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+T*k[0];y.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){const l=g>1?n*(d-1)+e*o:.5*(n+s)*(d-1);if(l<0||l>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+c*k[1]+T*k[0];y.values[n]=u}continue}const h=Math.floor(l),f=Math.ceil(l),m=l-h;for(let n=0;n<p;n++){let s=n+h*w[2]+t*w[1]+a*w[0];const o=x[s];s=n+f*w[2]+t*w[1]+a*w[0];const l=x[s];s=n+h*w[2]+r*w[1]+a*w[0];const u=x[s];s=n+f*w[2]+r*w[1]+a*w[0];const d=o+(l-o)*m,p=u+(x[s]-u)*m;s=n+e*k[2]+c*k[1]+T*k[0],y.values[s]=d+(p-d)*i}}}else for(let t=0;t<g;++t){const r=g>1?n*(d-1)+t*o:.5*(n+s)*(d-1);if(r<0||r>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+T*k[0];y.values[n]=u}continue}const i=Math.round(r),l=Math.round(e);for(let e=0;e<p;e++){const n=e+i*w[2]+l*w[1]+a*w[0],r=e+t*k[2]+c*k[1]+T*k[0];y.values[r]=x[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const gx={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;kb(s,"cumsum");const l=_i([a],s.shape.length);let u=s;null!=l&&(u=fv({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Fi(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Sr(u.dtype,"int32"),d=B(y(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=i?0:p[t];else{const n=m(y,e-1);d[t]=i?p[n]+d[n]:p[t]+d[n]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=fv({inputs:{x:g},backend:n,attrs:{perm:Di(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const yx={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=Uv(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=Gv(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const bx={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;p("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),p(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,d=u*a,f=c/(a*a),m=n.data.get(s.dataId).values,g=new Float32Array(o*h*d*f);let y=0;for(let p=0;p<o;++p)for(let e=0;e<h;++e){const t=Math.floor(e/a),n=e%a;for(let e=0;e<d;++e){const r=Math.floor(e/a),s=(n*a+e%a)*f;for(let e=0;e<f;++e){const n=e+s+c*(r+u*(t+l*p));g[y++]=m[n]}}}return n.makeTensorInfo([o,h,d,f],s.dtype,g)}};function vx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;kb([s,a],"depthwiseConv2DNative");const c=O(s.shape),h=O(a.shape);let d=l;null==d&&(d=[1,1]),p(Aa(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const f=ka(s.shape,a.shape,i,d,o,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:v}=f,x=v.left,w=v.top,k=f.outChannels/f.inChannels,T=new pr(f.outShape,s.dtype),N=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,I=T.values;for(let p=0;p<f.batchSize;++p){const e=p*c[0],t=p*T.strides[0];for(let n=0;n<f.outHeight;++n){const r=t+n*T.strides[1],s=n*f.strideHeight-x;for(let t=0;t<m;++t){const n=s+t*y;if(n<0||n>=f.inHeight)continue;const a=t*h[0],i=e+n*c[1];for(let e=0;e<f.outWidth;++e){const t=r+e*T.strides[2],n=e*f.strideWidth-w;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const s=a+e*h[1],o=i+r*f.inChannels;let l=t,u=s;for(let e=0;e<f.inChannels;++e){const t=N[o+e];for(let e=0;e<k;++e)I[l+e]+=t*S[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const xx={kernelName:ze,backendName:"cpu",kernelFunc:vx};const wx={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;kb([s,a],"depthwiseConv2dNativeBackpropFilter");const h=ka(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new pr(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,v=h.outChannels/h.inChannels,x=n.data.get(s.dataId).values,w=new pr(s.shape,s.dtype,x),k=n.data.get(a.dataId).values,T=new pr(a.shape,a.dtype,k);for(let N=0;N<f;++N){const e=Math.max(0,Math.ceil((b-N)/d)),t=Math.min(h.outHeight,(h.inHeight+b-N)/d);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/p)),s=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let a=0;a<h.outChannels;++a){const i=Math.trunc(a/v),o=a%v;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){const e=N+o*d-b;for(let t=r;t<s;++t){const r=n+t*p-y;l+=w.get(u,e,r,i)*T.get(u,o,t,a)}}g.set(l,N,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const kx={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;kb([s,a],"depthwiseConv2DNativeBackpropInput");const h=O(s.shape),d=O(a.shape),p=ka(c,a.shape,i,o,l,u,!0),f=new pr(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,v=n.data.get(s.dataId).values,[x,w,k]=h,T=n.data.get(a.dataId).values,[N,S,I]=d,{batchSize:E,filterHeight:$,filterWidth:C,inChannels:A,inHeight:R,inWidth:_,outChannels:D,outHeight:F,outWidth:M,strideHeight:L,strideWidth:z}=p,P=$-1-p.padInfo.top,B=C-1-p.padInfo.left,W=D/A;for(let O=0;O<E;++O)for(let e=0;e<A;++e)for(let t=0;t<R;++t){const n=t-P,r=Math.max(0,Math.ceil(n/L)),s=Math.min(F,($+n)/L);for(let a=0;a<_;++a){const i=a-B,o=Math.max(0,Math.ceil(i/z)),l=Math.min(M,(C+i)/z);let u=0;for(let t=r;t<s;++t){const r=t*L-n;for(let n=o;n<l;++n){const s=x*O+w*t+k*n,a=N*($-1-r)+S*(C-1-(n*z-i))+I*e;for(let t=0;t<W;++t){u+=v[s+(e*W+t)]*T[a+t]}}}m[g*O+y*t+b*a+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Tx={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=y(r.shape),a=n.data.get(r.dataId).values,i=Es([s,s],r.dtype),o=i.values;for(let u=0;u<a.length;u++)o[u*s+u]=a[u];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},Nx={kernelName:Ve,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=n,c=u.data.get(s.dataId).values,h=s.shape.length,d=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:b,outHeight:v,outWidth:x,padInfo:w,strideHeight:k,strideWidth:T,filterHeight:N,filterWidth:S,dilationHeight:I,dilationWidth:$,outShape:C}=va(s.shape,a.shape,i,o,"NHWC",l),A=y(C),R=C.length,_=E(s.dtype,A);for(let y=0;y<f;++y)for(let e=0;e<v;++e){const t=e*k-w.top;for(let n=0;n<x;++n){const r=n*T-w.left;for(let i=0;i<b;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<N;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<S;++t){const l=r+t*$;if(l>=0&&l<g){const r=U([y,n,l,i],h,O(s.shape)),u=U([e,t,i],p,O(a.shape)),f=c[r]+d[u];f>o&&(o=f)}}}_[U([y,e,n,i],R,O(C))]=o}}}return{dataId:u.write(ur(_,s.dtype),C,s.dtype),shape:C,dtype:s.dtype}}},Sx={kernelName:Ge,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:a,dy:i}=t,{strides:o,pad:l,dilations:u}=r,c=n,h=z(s.shape,c.data.get(s.dataId).values),d=z(a.shape,c.data.get(a.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:T,filterWidth:N,dilationHeight:S,dilationWidth:I,outShape:E}=va(s.shape,a.shape,o,l,"NHWC",u);p(i.rank===E.length,(()=>`Error in ${Ge}, dy must have the same rank as output ${E.length}, but got ${i.rank}`));const $=z(E,c.data.get(i.dataId).values),C=W(a.shape,a.dtype);for(let p=0;p<f;++p)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const r=n*k-x.left;for(let s=0;s<y;++s){let a=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<T;++e){const n=t+e*S;if(n>=0&&n<m)for(let t=0;t<N;++t){const l=r+t*I;if(l>=0&&l<g){const r=h[p][n][l][s]+d[e][t][s];r>a&&(a=r,i=e,o=t)}}}C[i][o][s]+=$[p][e][n][s]}}}return{dataId:c.write(ur(C,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Ix={kernelName:Ue,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:a,dy:i}=t,{strides:o,pad:l,dilations:u}=r,c=n,h=z(s.shape,c.data.get(s.dataId).values),d=z(a.shape,c.data.get(a.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:T,filterWidth:N,dilationHeight:S,dilationWidth:I,outShape:E}=va(s.shape,a.shape,o,l,"NHWC",u);p(i.rank===E.length,(()=>`Error in ${Ue}, dy must have the same rank as output ${E.length}, but got ${i.rank}`));const $=z(E,c.data.get(i.dataId).values),C=W(s.shape,s.dtype);for(let p=0;p<f;++p)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const r=n*k-x.left;for(let s=0;s<y;++s){let a=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=r<0?0:r;for(let e=0;e<T;++e){const n=t+e*S;if(n>=0&&n<m)for(let t=0;t<N;++t){const l=r+t*I;if(l>=0&&l<g){const r=h[p][n][l][s]+d[e][t][s];r>a&&(a=r,i=n,o=l)}}}C[p][i][o][s]+=$[p][e][n][s]}}}return{dataId:c.write(ur(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const Ex={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;kb([r,s],"eluGrad");const a=new Float32Array(y(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){const e=i[l];a[l]=e>=1?o[l]:o[l]*(e+1)}return n.makeTensorInfo(s.shape,"float32",a)}},$x=Db(((e,t)=>e===t?1:0)),Cx=Yb(Ye,$x,null,"bool"),Ax={kernelName:Ye,backendName:"cpu",kernelFunc:Cx},Rx=Gl,_x=jl,Dx=Hl,Fx=ql,Mx=Kl,Ox=Yl,Lx=Sb(Ke,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Rx*n);return t*(1-((((Ox*r+Mx)*r+Fx)*r+Dx)*r+_x)*r*Math.exp(-n*n))})),zx={kernelName:Ke,backendName:"cpu",kernelFunc:Lx},Px=Hv((e=>Math.exp(e))),Bx=Ib(Xe,Px),Wx={kernelName:Xe,backendName:"cpu",kernelFunc:Bx};function Vx(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(p(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),tv({inputs:{x:s},backend:n,attrs:{shape:o}})}const Ux={kernelName:Ze,backendName:"cpu",kernelFunc:Vx},Gx=Hv((e=>Math.expm1(e))),jx=Ib(Qe,Gx),Hx={kernelName:Qe,backendName:"cpu",kernelFunc:jx},qx=Db(((e,t)=>e*t)),Kx=Xb(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Yx=Yb(Pt,qx,Kx),Xx={kernelName:Pt,backendName:"cpu",kernelFunc:Yx},Zx=Db(((e,t)=>e/t)),Qx=Yb(je,Zx),Jx={kernelName:je,backendName:"cpu",kernelFunc:Qx},ew=Db(((e,t)=>e-t)),tw=Xb(((e,t,n,r)=>({real:e-n,imag:t-r}))),nw=Yb($n,ew,tw),rw={kernelName:$n,backendName:"cpu",kernelFunc:nw};function sw(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=y(u),h=I("float32",c),d=I("float32",c);for(let g=0;g<s;g++){const e=Bv({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,a]}}),r=Bv({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),s=Vb({inputs:{real:e,imag:r},backend:n}),{real:i,imag:u}=aw(s,t,n),c=Ql(i,u);for(let t=0;t<a;t++){const e=nu(c,t);h[g*a+t]=e.real,d[g*a+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=Vb({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function aw(e,t,n){const r=y(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((o=r)&o-1)){const s=iw(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",lr(r,"float32")),i=Cb({inputs:{x:a},backend:n}),l=Jx.kernelFunc({inputs:{a:e,b:a},backend:n}),u=Jx.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=au(s*r,t,n),l=nu(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),ru(r,a,i,s)}return r}(Ql(a,i),r,t);return Jl(e)}var o}function iw(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=Ql(e,t),i=n/2,o=eu(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=Vb({inputs:{real:h,imag:d},backend:s}),f=tu(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),v=s.makeTensorInfo(y,"float32",g),x=Vb({inputs:{real:b,imag:v},backend:s}),w=iw(l,u,i,r,s),k=w.real,T=w.imag,N=[k.length],S=s.makeTensorInfo(N,"float32",k),I=s.makeTensorInfo(N,"float32",T),E=Vb({inputs:{real:S,imag:I},backend:s}),$=iw(m,g,i,r,s),C=$.real,A=$.imag,R=[C.length],_=s.makeTensorInfo(R,"float32",C),D=s.makeTensorInfo(R,"float32",A),F=Vb({inputs:{real:_,imag:D},backend:s}),M=su(n,r),O=[M.real.length],L=s.makeTensorInfo(O,"float32",M.real),z=s.makeTensorInfo(O,"float32",M.imag),P=Vb({inputs:{real:L,imag:z},backend:s}),B=Yx({inputs:{a:P,b:F},backend:s}),W=Jb({inputs:{a:E,b:B},backend:s}),V=nw({inputs:{a:E,b:B},backend:s}),U=jb({inputs:{input:W},backend:s}),G=jb({inputs:{input:V},backend:s}),j=ex({inputs:{input:W},backend:s}),H=ex({inputs:{input:V},backend:s}),q=nx({inputs:[U,G],backend:s,attrs:{axis:0}}),K=nx({inputs:[j,H],backend:s,attrs:{axis:0}}),Y=s.data.get(q.dataId).values,X=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:Y,imag:X}}const ow={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=y(r.shape),a=r.shape[r.shape.length-1],i=tv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=sw(i,!1,n),l=tv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function lw(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||D(s),o=E(i,y(r));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const uw={kernelName:et,backendName:"cpu",kernelFunc:lw};const cw={kernelName:tt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,a=r,i=I(s.dtype,y(s.shape)),[o,l,u,c]=s.shape,h=a.data.get(s.dataId).values;for(let d=0;d<o;d++){const e=d*u*l*c;for(let t=0;t<l;t++){const n=t*(u*c);for(let r=0;r<u;r++){const s=r*c;for(let a=0;a<c;a++){const l=[o,t,r,a][2],d=Math.round(u-l),p=e+n+s+a;let f=h[p];if(d>=0&&d<u){f=h[e+n+d*c+a]}i[p]=f}}}}return{dataId:a.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},hw=Hv((e=>Math.floor(e))),dw=Ib(nt,hw),pw={kernelName:nt,backendName:"cpu",kernelFunc:dw},fw=Db(((e,t)=>Math.floor(e/t))),mw=Yb(rt,fw,null,"int32"),gw={kernelName:rt,backendName:"cpu",kernelFunc:mw};const yw={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=sx({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=Jb({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Wb(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const bw={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=vx({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=Jb({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Wb(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const vw={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=y(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=zl(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=Es([u,c],r.dtype),p=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values;for(let m=0;m<u;m++){const e=[];let t=0;for(let n=0;n<o;n++){const r=p[m*o+n];t+=r*h[n],e.push(r)}if(t<0||t>=a/c)throw new Error(`Invalid indices: ${e} does not index into ${r.shape}`);for(let n=0;n<c;n++)d.values[m*c+n]=f[t*c+n]}return n.makeTensorInfo(l,d.dtype,d.values)}};function xw(e,t,n){const r=Es(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),a=n[0],i=n[2],o=t.locToIndex([a,i]);n[2]=t.values[o];const l=e.locToIndex(n);r.values[s]=e.values[l]}return r}const ww={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;kb([s,a],"gatherV2");let l=o;null==o&&(l=0);const u=y(a.shape),c=uu(s,a,N(i,s.shape)[0],l),h=tv({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=tv({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(d),m=xw(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},kw=Db(((e,t)=>e>t?1:0)),Tw=Yb(ot,kw,null,"bool"),Nw={kernelName:ot,backendName:"cpu",kernelFunc:Tw},Sw=Db(((e,t)=>e>=t?1:0)),Iw=Yb(lt,Sw,null,"bool"),Ew={kernelName:lt,backendName:"cpu",kernelFunc:Iw};const $w={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=y(r.shape),a=r.shape[r.shape.length-1],i=tv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=sw(i,!0,n),l=tv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},Cw=Sb(dt,(e=>Number.isFinite(e)?1:0),"bool"),Aw={kernelName:dt,backendName:"cpu",kernelFunc:Cw},Rw=Sb(pt,(e=>Math.abs(e)===1/0?1:0),"bool"),_w={kernelName:pt,backendName:"cpu",kernelFunc:Rw},Dw=Sb(ft,(e=>Number.isNaN(e)?1:0),"bool"),Fw={kernelName:ft,backendName:"cpu",kernelFunc:Dw},Mw=Db(((e,t)=>e<t?1:0)),Ow=Yb(gt,Mw,null,"bool"),Lw={kernelName:gt,backendName:"cpu",kernelFunc:Ow},zw=Db(((e,t)=>e<=t?1:0)),Pw=Yb(yt,zw,null,"bool"),Bw={kernelName:yt,backendName:"cpu",kernelFunc:Pw};function Ww(e,t,n){const r=(t-e)/(n-1),s=B(n,"float32");s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}const Vw={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=Ww(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},Uw=Hv((e=>Math.log(e))),Gw=Ib(vt,Uw),jw={kernelName:vt,backendName:"cpu",kernelFunc:Gw},Hw=Sb(xt,(e=>Math.log1p(e))),qw={kernelName:xt,backendName:"cpu",kernelFunc:Hw},Kw=Db(((e,t)=>e&&t)),Yw=Yb(wt,Kw,null,"bool"),Xw={kernelName:wt,backendName:"cpu",kernelFunc:Yw},Zw=Sb(kt,(e=>e?0:1),"bool"),Qw={kernelName:kt,backendName:"cpu",kernelFunc:Zw},Jw=Db(((e,t)=>e||t)),ek=Yb(Tt,Jw,null,"bool"),tk={kernelName:Tt,backendName:"cpu",kernelFunc:ek};const nk={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;kb(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=y(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let m=0;m<d;m++){const e=f(m),t=h[m]*Math.pow(i+o*e,-l);p[m]=t}return n.makeTensorInfo(s.shape,s.dtype,p)}};const rk={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;kb(i,"LRNGrad");const h=y(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),b=h;for(let y=0;y<b;y++){const e=y%d,t=y-e+Math.max(0,e-o),n=y-e+Math.min(d,e+o+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=u*r+l;for(let s=t;s<n;s++){let e=-2*u*c*f[s]*m[y]/r;y===s&&(e+=Math.pow(r,-c)),e*=p[y],g[s]+=e}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function sk(e,t,n,r){const s=I(r,y(n));for(let a=0;a<s.length;++a){const n=a*t;let r=e[n];for(let s=0;s<t;++s){const t=e[n+s];t>r&&(r=t)}s[a]=r}return s}function ak(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=N(a,l);let h=c;const d=_i(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=pv(p,l,s.dtype,d,e),h=Fi(h.length,u),l=e}kb(s,"max"),Ri("max",h,u);const[f,m]=Ci(l,h),g=sk(p,y(m),f,s.dtype),b=o.write(g,f,s.dtype);let v=f;if(i){v=Ai(f,c)}return{dataId:b,shape:v,dtype:s.dtype}}const ik={kernelName:It,backendName:"cpu",kernelFunc:ak},ok=Db(((e,t)=>Math.max(e,t))),lk=Yb(Et,ok),uk={kernelName:Et,backendName:"cpu",kernelFunc:lk};const ck={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;kb(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(Aa(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=xa(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))c=Cb({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=O(s.shape),r=Rv(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const hk={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u,dilations:c}=r;kb(s,"maxPool3d");let h=c;null==h&&(h=[1,1,1]);const d=wa(s.shape,a,i,h,o,l,u),p=Dv(n.data.get(s.dataId).values,s.shape,s.dtype,O(s.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};const dk={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;kb([s,a],"maxPool3DGrad");const h=wa(a.shape,i,o,u,l,c),d=function(e,t){const n=Es(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let v=b;for(;v<0;)v+=i;const x=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const T=Math.min(t.inWidth,h+p);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=v;t<x;t+=i){const n=t-b;for(let r=d;r<w;r+=o){const s=r-u;for(let a=k;a<T;a+=l){const i=a-p,o=e.get(m,t,r,a,g);o>=N&&(N=o,S=n*c*h+s*c+i)}}}n.set(S,m,y,r,s,g)}}}return n}(n.bufferSync(a),h),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.dilationDepth,y=h.dilationHeight,b=h.dilationWidth,v=h.effectiveFilterDepth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=v-1-h.padInfo.front,T=w-1-h.padInfo.left,N=x-1-h.padInfo.top,S=Es(a.shape,"float32"),I=n.bufferSync(s);for(let E=0;E<h.batchSize;++E)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inDepth;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const s=t-k,a=n-N,i=r-T;let o=0;for(let t=0;t<v;t+=g){const n=(s+t)/p;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=y){const s=(a+r)/f;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let a=0;a<w;a+=b){const l=(i+a)/m;if(l<0||l>=h.outWidth||Math.floor(l)!==l)continue;const u=v*x*w-1-d.get(E,n,s,l,e)===t*x*w+r*w+a?1:0;if(0===u)continue;o+=I.get(E,n,s,l,e)*u}}}S.set(o,E,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const pk={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;kb([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=xa(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Es(d.outShape,o.dtype,_v(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=x-1-d.padInfo.left,k=v-1-d.padInfo.top,T=Es(o.shape,"float32"),N=n.data.get(s.dataId).values,S=Es(s.shape,"float32",N);for(let I=0;I<d.batchSize;++I)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-k,s=n-w;let a=0;for(let t=0;t<v;t+=y){const n=(r+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<x;r+=b){const i=(s+r)/g;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;const o=v*x-1-f.get(I,n,i,e)===t*x+r?1:0;if(0===o)continue;a+=S.get(I,n,i,e)*o}}T.set(a,I,t,n,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const fk={kernelName:_t,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=n,u=r;kb(s,"MaxPoolWithArgmax");const c=u.data.get(s.dataId).values,h=xa(s.shape,a,i,[1,1],o),[d,p]=function(e,t,n,r,s){const a=Rv(e,0,n,O(t),s,"max"),i=_v(e,t,n,s,!0,r);return[a.values,i.values]}(c,s.shape,s.dtype,l,h),f=u.write(d,h.outShape,s.dtype),m=u.write(p,h.outShape,s.dtype);return[{dataId:f,shape:h.outShape,dtype:s.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};function mk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;kb(s,"sum"),o="bool"===s.dtype?qb({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Cb({inputs:{x:s},backend:n});const l=o.shape.length,u=N(a,o.shape),c=_i(u,l);let h=u,d=o;null!=c&&(d=fv({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Fi(h.length,l)),Ri("sum",h,d.shape.length);const[p,f]=Ci(d.shape,h);let m=Gb(n,p,Sr(d.dtype,"int32"));const g=y(f),b=n.data.get(m.dataId).values,v=n.data.get(d.dataId).values;for(let y=0;y<b.length;++y){const e=y*g;let t=0;for(let n=0;n<g;++n)t+=v[e+n];b[y]=t}if(i){const e=m;m=tv({inputs:{x:m},backend:n,attrs:{shape:Ai(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const gk={kernelName:kn,backendName:"cpu",kernelFunc:mk};const yk={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=N(a,s.shape),l=y(Ci(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=qb({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=Qx({inputs:{a:h,b:c},backend:n});u.push(d);const p=mk({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const bk={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;kb(s,"min");const o=N(a,s.shape);let l=o;const u=_i(l,s.shape.length);let c=s;null!=u&&(c=fv({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Fi(l.length,s.shape.length)),Ri("min",l,c.shape.length);const[h,d]=Ci(c.shape,l),p=y(d),f=B(y(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];r<t&&(t=r)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=tv({inputs:{x:g},backend:n,attrs:{shape:Ai(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},vk=Db(((e,t)=>Math.min(e,t))),xk=Yb(Mt,vk),wk={kernelName:Mt,backendName:"cpu",kernelFunc:xk};const kk={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;kb(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=O(s.shape),f=y(o),m=o.length,g=O(o),b=I(s.dtype,f);for(let y=0;y<f;y++){let e=G(y,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=U(e,d,p);b[y]=h[t]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},Tk=Db(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Nk=Yb(Lt,Tk),Sk={kernelName:Lt,backendName:"cpu",kernelFunc:Nk};function Ik(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=N([o],s.shape),u=ak({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Ai(u.shape,l),h=tv({inputs:{x:u},backend:n,attrs:{shape:c}}),d=nw({inputs:{a:s,b:h},backend:n}),p=Bx({inputs:{x:d},backend:n}),f=mk({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=tv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Qx({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const Ek={kernelName:Sn,backendName:"cpu",kernelFunc:Ik};const $k={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;kb(s,"multinomial");const l=o?s:Ik({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=B(y(d),"int32");for(let f=0;f<u;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+h[e+s];const n=ji.alea(i.toString()),r=f*a;for(let s=0;s<a;++s){const e=n();p[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[r+s]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function Ck(e,t,n){const r=lr(-1,n);return qx([],t,r,e,n)}const Ak={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;kb(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=Ck(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},Rk=qo;const _k={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;kb(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=Rk(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Dk=Ko;const Fk={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;kb(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=Dk(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Mk=Yo;const Ok={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;kb(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Mk(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Lk=Db(((e,t)=>e!==t?1:0)),zk=Yb(Wt,Lk,null,"bool"),Pk={kernelName:Wt,backendName:"cpu",kernelFunc:zk};const Bk={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r;kb(s,"oneHot");const l=y(s.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(s.dataId).values;for(let h=0;h<l;++h)c[h]>=0&&c[h]<a&&(u[h*a+c[h]]=i);return n.makeTensorInfo([...s.shape,a],"int32",u)}};function Wk(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=jb({inputs:{input:r},backend:n}),t=Wk({inputs:{x:e},backend:n}),s=ex({inputs:{input:r},backend:n}),a=Wk({inputs:{x:s},backend:n}),i=Vb({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return lw({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Vk={kernelName:Pn,backendName:"cpu",kernelFunc:Wk};const Uk={kernelName:jt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=jb({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=ex({inputs:{input:s},backend:r}),i=Wk({inputs:{x:a},backend:r}),o=Vb({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return lw({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function Gk(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Vx({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(a,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=nx({inputs:t.map((e=>{const t=Vx({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const jk={kernelName:qt,backendName:"cpu",kernelFunc:Gk};const Hk={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;kb(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=y(s.shape),h=s.shape.length,d=O(s.shape),p=y(o),f=o.length,m=O(o),g=I(s.dtype,p);0!==i&&g.fill(i);for(let y=0;y<c;y++){g[U(G(y,h,d).map(((e,t)=>e+l[t])),f,m)]=u[y]}return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},qk=Db(((e,t)=>Math.pow(e,t))),Kk=Yb(Yt,qk),Yk={kernelName:Yt,backendName:"cpu",kernelFunc:Kk};function Xk(e,t,n,r){const[s,a]=Ci(e,r),i=Sr(t,"int32"),o=B(y(s),i),l=y(a);for(let u=0;u<o.length;++u){const e=u*l;let t=1;for(let r=0;r<l;++r)t*=n[e+r];o[u]=t}return{outVals:o,outShape:s,outDtype:i}}const Zk={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;kb(s,"prod");const o=s.shape.length,l=N(a,s.shape),u=_i(l,o);let c=l,h=s;const d=[];null!=u&&(h=fv({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=Fi(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=Xk(h.shape,h.dtype,p,c);let y=m;return i&&(y=Ai(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function Qk(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return B(0,r);const s=B(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+n;return s}const Jk={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=Qk(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},eT=Sb(en,(e=>1/e)),tT={kernelName:en,backendName:"cpu",kernelFunc:eT};const nT={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;kb(s,"resizeBilinear");const l=O(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(y([h,u,c,f])),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],v=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const w=b[0]/v[0],k=b[1]/v[1];for(let y=0;y<h;y++)for(let e=0;e<u;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),a=y*l[0]+n*l[1],o=y*l[0]+s*l[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),s=t-n,u=Math.min(p-1,Math.ceil(t)),c=a+n*l[2],h=o+n*l[2],d=a+u*l[2],y=o+u*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*s,i=a+(n+(m[y+e]-n)*s-a)*r;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}};const rT={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;kb([a,s],"resizeBilinearGrad");const o=O(s.shape),[l,u,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],v=n.data.get(a.dataId).values;let x=0;for(let w=0;w<l;w++){const e=w*o[0];for(let t=0;t<d;t++){const n=t*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=e+r*o[1],i=e+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*u,k=d*s,T=l*u,N=l*s;for(let e=0;e<h;e++){const t=v[x++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*T,f[y+e]+=t*N}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}};const sT={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;kb(s,"resizeNearestNeighbor");const l=O(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],v=y[0]/b[0],x=y[1]/b[1];let w=0;for(let k=0;k<h;k++){const e=k*l[0];for(let t=0;t<u;t++){const n=i?v*(t+.5):v*t;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=e+r*l[1];for(let e=0;e<c;e++){const t=i?x*(e+.5):x*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}};const aT={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;kb([a,s],"resizeNearestNeighborGrad");const o=O(s.shape),l=O(a.shape),[u,c,h,d]=s.shape,[,p,f]=a.shape,m=new Float32Array(u*c*h*d),g=n.data.get(a.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],v=y[0]/b[0],x=y[1]/b[1],w=1/v,k=1/x,T=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let S=0;S<u;S++){const e=S*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*w),s=Math.floor(r-T/2);for(let a=0;a<h;a++){const r=n+a*o[2],u=Math.floor(a*k),y=Math.floor(u-N/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<T;r++){const u=r+s;if(u<0||u>=p)continue;const d=e+u*l[1],m=u*v;if(t===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const r=d+t*l[2],s=t*x;a===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[r+n])}}m[r+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const iT={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;kb(s,"reverse");const i=s.shape.length,o=N(a,s.shape);if(0===i)return Cb({inputs:{x:s},backend:n});const l=new pr(s.shape,s.dtype),u=n.bufferSync(s);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=s.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},oT={kernelName:Vn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:a,fillValue:i,center:o}=n,l=r,u=I(s.dtype,y(s.shape)),[c,h,d,p]=s.shape,[f,m]=_l(o,h,d),g=Math.sin(a),b=Math.cos(a),v=l.data.get(s.dataId).values;for(let y=0;y<c;y++){const e=y*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let r=0;r<d;r++){const s=r*p;for(let a=0;a<p;a++){const o=[c,t,r,a],l=o[2],y=o[1];let x=(l-f)*b-(y-m)*g,w=(l-f)*g+(y-m)*b;x=Math.round(x+f),w=Math.round(w+m);let k=i;if("number"!==typeof i&&(k=3===a?255:i[a]),x>=0&&x<d&&w>=0&&w<h){k=v[e+w*(d*p)+x*p+a]}u[e+n+s+a]=k}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},lT=Sb(cn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),uT={kernelName:cn,backendName:"cpu",kernelFunc:lT},cT=Hv((e=>1/Math.sqrt(e))),hT=Ib(hn,cT),dT={kernelName:hn,backendName:"cpu",kernelFunc:hT};function pT(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return Es(n,t.dtype);const p=Es(c,t.dtype);p.values.fill(l);for(let f=0;f<a;f++){const e=[];let a=0;for(let t=0;t<i;t++){const n=h[f*i+t];e.push(n),a+=n*o[t]}if(a<0||a>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[a*s+n]+=d[f*s+n]:p.values[a*s+n]=0===t.rank?d[0]:d[f*s+n]}return p}const fT={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Wl(0,s,i),d=pT(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};const mT={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;kb([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=Sr(s.dtype,a.dtype),h=B(y(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:y(s.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<p;e++)1===o[f]?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(s.shape,c,h)}},gT=Vl,yT=Ul,bT=Sb(fn,(e=>e>=0?yT*e:gT*(Math.exp(e)-1))),vT={kernelName:fn,backendName:"cpu",kernelFunc:bT},xT=Sb(vn,(e=>1/(1+Math.exp(-e)))),wT={kernelName:vn,backendName:"cpu",kernelFunc:xT},kT=Sb(bn,(e=>e<0?-1:e>0?1:0)),TT={kernelName:bn,backendName:"cpu",kernelFunc:kT},NT=Sb(gn,(e=>Math.sin(e))),ST={kernelName:gn,backendName:"cpu",kernelFunc:NT},IT=Sb(yn,(e=>Math.sinh(e))),ET={kernelName:yn,backendName:"cpu",kernelFunc:IT},$T=Math.log(1.1920928955078125e-7)+2,CT=Sb(xn,(e=>{const t=e>-$T,n=e<$T,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),AT={kernelName:xn,backendName:"cpu",kernelFunc:CT};const RT={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;kb([s],"spaceToBatchND");const o=y(a),l=[[0,0]];l.push(...i);for(let g=1+a.length;g<s.shape.length;++g)l.push([0,0]);const u=Hk.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Dl(u.shape,a,o,!1),h=Fl(c.length,a.length,!1),d=Ml(u.shape,a,o,!1),p=tv({inputs:{x:u},backend:n,attrs:{shape:c}}),f=fv({inputs:{x:p},backend:n,attrs:{perm:h}}),m=tv({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};const _T={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Wl(0,s,o),p=pT(n.bufferSync(s),n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}};const DT={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=N(i,s.shape)[0],l=iu(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=Bv({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},FT=Sb(wn,(e=>Math.sqrt(e))),MT={kernelName:wn,backendName:"cpu",kernelFunc:FT},OT={kernelName:En,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:r}=t,s=n;kb(r,"square");const a=s.data.get(r.dataId).values,i=new Float32Array(a.length);for(let o=0;o<a.length;++o){const e=a[o];i[o]=e*e}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},LT=Db(((e,t)=>{const n=e-t;return n*n})),zT=Yb(In,LT),PT={kernelName:In,backendName:"cpu",kernelFunc:zT},BT=Sb(Bn,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),WT={kernelName:Bn,backendName:"cpu",kernelFunc:BT};function VT(e,t,n,r){const s=Es(e,t.dtype);for(let a=0;a<s.size;a++){const e=s.indexToLoc(a),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];s.set(t.get(...i),...e)}return s}const UT={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;kb(s,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=ea(s.shape,a,i,o,l,u,c,h,d),v=tv({inputs:{x:s},backend:n,attrs:{shape:y}});let x;if(p){const e=Bv({inputs:{x:v},backend:n,attrs:{begin:f,size:g}});x=tv({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))x=n.makeTensorInfo(b,s.dtype,[]);else{const e=VT(b,n.bufferSync(v),m,f);x=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=tv({inputs:{x:x},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(x),w}},GT=Sb(Rn,(e=>Math.tan(e))),jT={kernelName:Rn,backendName:"cpu",kernelFunc:GT},HT=Sb(_n,(e=>Math.tanh(e)));function qT(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=Es(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);r.values[s]=e.values[a]}return r}const KT={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;kb(s,"tile");const i=qT(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function YT(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=I(n,i*r),u=I("int32",i*r);for(let h=0;h<i;h++){const t=h*o,n=e.subarray(t,t+o),s=[];for(let e=0;e<n.length;e++)s.push({value:n[e],index:e});s.sort(((e,t)=>t.value-e.value));const a=h*r,i=l.subarray(a,a+r),c=u.subarray(a,a+r);for(let e=0;e<r;e++)i[e]=s[e].value,c[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[Es(c,n,l),Es(c,"int32",u)]}const XT={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;kb(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=YT(o,s.shape,s.dtype,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};function ZT(e,t,n,r){const s=N(t,n)[0],a=[1,n[0],1];for(let f=0;f<s;f++)a[0]*=n[f];a[1]=n[s];for(let f=s+1;f<n.length;f++)a[2]*=n[f];const i={},o=new Int32Array(n[s]),l=new pr(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let f=0;f<n[s];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<a[0];t++)for(let n=0;n<a[2];n++)e.push(l.get(t,f,n));t=e.join(",")}if(void 0!==i[t])o[f]=i[t];else{const e=Object.keys(i).length;i[t]=e,o[f]=e,u.push(f)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new pr(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const QT={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;kb(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=ZT(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const JT={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==a&&(l[u++]=s.shape[p]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[a]=p;const e=Bv({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[p]=tv({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}};const eN={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;kb(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let d=0;d<u;++d){const e=Vx({inputs:{input:c},backend:n,attrs:{dim:d+1}});c=e,l.push(e)}for(let d=0;d<i;++d){const e=lr(d,"int32"),t=n.makeTensorInfo([],"int32",e),r=Cx({inputs:{a:t,b:c},backend:n}),a=qb({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=Yx({inputs:{a:a,b:s},backend:n}),u=mk({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(u),l.push(t),l.push(r),l.push(a),l.push(i),l.push(u)}const h=Gk({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},tN=[av,ov,uv,hv,ev,dv,gv,yv,bv,vv,wv,Tv,Sv,$v,Av,Fv,Mv,Ov,Lv,sv,zv,Vv,jv,Kb,Yv,Zv,Ub,Qv,rx,ix,ox,ax,ux,cx,lx,dx,fx,mx,gx,yx,bx,xx,wx,kx,Tx,Nx,Ix,Sx,Jx,$b,Ex,Ax,zx,Wx,Ux,Hx,ow,uw,cw,pw,gw,yw,bw,vw,ww,Nw,Ew,Ab,$w,tx,Aw,_w,Fw,_b,Lw,Bw,Vw,jw,qw,Xw,Qw,tk,nk,rk,uk,ck,hk,dk,pk,fk,ik,yk,bk,wk,kk,Sk,$k,Xx,Ak,_k,Fk,Ok,Pk,Bk,Uk,jk,Hk,Yk,Ob,Zk,Jk,Hb,tT,zb,Bb,nv,nT,rT,sT,aT,iT,oT,uT,dT,fT,mT,vT,wT,TT,ST,ET,Wv,Ek,AT,RT,_T,DT,MT,OT,PT,WT,UT,rw,gk,jT,{kernelName:_n,backendName:"cpu",kernelFunc:HT},KT,XT,mv,QT,JT,eN,Vk];for(const n of tN)Zn(n);const nN={},rN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function sN(e){if(!(e in nN)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete nN[e]}),!1),1===e)return t.getContext("webgl",rN)||t.getContext("experimental-webgl",rN);return t.getContext("webgl2",rN)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;nN[e]=t}const t=nN[e];return t.isContextLost()?(delete nN[e],sN(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),nN[e])}var aN,iN,oN;function lN(e,t){return[t,e]}function uN(e){const t=y(e);return x(Math.ceil(t/4))}function cN(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function hN(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===K().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function dN(e,t){const n=t();return K().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(aN||(aN={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(iN||(iN={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(oN||(oN={}));function pN(e){return!!(K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function fN(e,t){return TN(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function mN(e,t){const n=TN(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(dN(e,(()=>e.shaderSource(n,t))),dN(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=gN.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>w((t+1).toString(),a)+e));let o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${w(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const gN=/ERROR: [0-9]+:([0-9]+):/g;function yN(e,t){if(dN(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function bN(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(dN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),dN(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),dN(e,(()=>e.enableVertexAttribArray(o))),!0)}function vN(e,t,n,r){dN(e,(()=>function(e,t,n){NN(e,n),dN(e,(()=>e.activeTexture(e.TEXTURE0+n))),dN(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),dN(e,(()=>e.uniform1i(n,r)))}function xN(e,t,n){dN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),dN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function wN(e,t){dN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),dN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function kN(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function TN(e,t,n){const r=dN(e,(()=>t()));if(null==r)throw new Error(n);return r}function NN(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function SN(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return y(e.slice(0,e.length-t))}function IN(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function EN(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[SN(e),...IN(e)]),t}function $N(e){return e%2===0}function CN(e,t){if(b(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if($N(n)&&$N(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&$N(e[0])&&$N(t[0])}let AN,RN;function _N(e,t){return null!=e.getExtension(t)}function DN(e){try{if(null!=sN(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function FN(e){if(0===e)return!1;const t=sN(e);if(1!==e){if(_N(t,"EXT_color_buffer_float"))return MN(t);const e="EXT_color_buffer_half_float";if(_N(t,e)){const n=t.getExtension(e);return function(e,t){const n=hN(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!_N(t,"OES_texture_float"))return!1;if(!_N(t,"WEBGL_color_buffer_float"))return!1;return MN(t)}function MN(e){const t=hN(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function ON(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&p("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const LN=K();function zN(){let e,t,n,r,s,a,i,o,l,u;return 2===K().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function PN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=O(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${t}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function BN(e){const t=O(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}LN.registerFlag("HAS_WEBGL",(()=>LN.getNumber("WEBGL_VERSION")>0)),LN.registerFlag("WEBGL_VERSION",(()=>DN(2)?2:DN(1)?1:0)),LN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),LN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===LN.get("WEBGL_VERSION"))),LN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),LN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),LN.registerFlag("WEBGL_PACK",(()=>LN.getBool("HAS_WEBGL"))),LN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>LN.getBool("WEBGL_PACK"))),LN.registerFlag("WEBGL_PACK_CLIP",(()=>LN.getBool("WEBGL_PACK"))),LN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),LN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>LN.getBool("WEBGL_PACK"))),LN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>LN.getBool("WEBGL_PACK"))),LN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>LN.getBool("WEBGL_PACK"))),LN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>LN.getBool("WEBGL_PACK"))),LN.registerFlag("WEBGL_PACK_REDUCE",(()=>LN.getBool("WEBGL_PACK"))),LN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>LN.getBool("WEBGL_PACK"))),LN.registerFlag("WEBGL_CONV_IM2COL",(()=>LN.getBool("WEBGL_PACK"))),LN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==AN){const t=sN(e);AN=t.getParameter(t.MAX_TEXTURE_SIZE)}return AN}(LN.getNumber("WEBGL_VERSION")))),LN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==RN){const t=sN(e);RN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,RN)}(LN.getNumber("WEBGL_VERSION")))),LN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=LN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=sN(e);return t=_N(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:_N(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),LN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>LN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Or())),LN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=sN(e);if(1===e){if(!_N(t,"OES_texture_float"))return!1}else if(!_N(t,"EXT_color_buffer_float"))return!1;return MN(t)}(LN.getNumber("WEBGL_VERSION")))),LN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!LN.getBool("WEBGL_FORCE_F16_TEXTURES")&&LN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),LN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>FN(LN.getNumber("WEBGL_VERSION")))),LN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=LN.getNumber("WEBGL_VERSION"))&&null!=sN(e).fenceSync;var e})),LN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>LN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),LN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));const WN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class VN{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=aN.DENSE;const t=uN(e),n=zN();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${PN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class UN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=aN.DENSE;const t=uN(e),n=zN();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${PN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class GN{constructor(e){this.variableNames=["A"],this.outTexUsage=iN.DOWNLOAD;const t=zN();this.outputShape=e,this.userCode=`\n      ${WN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class jN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=iN.DOWNLOAD;const t=zN();this.outputShape=e,this.userCode=`\n      ${WN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class HN{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.variableNames=["A"];const r=zN(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${BN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class qN{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=zN(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let t=0;t<=1;t++){const n=2*l+t;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${e[2]}) {\n            localCoords[2] += ${t};\n            if(localCoords[1] + ${l} < ${e[1]}) {\n              localCoords[1] += ${l};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${BN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function KN(e){const t=zN();return function(e,t){const n=TN(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(dN(e,(()=>e.shaderSource(n,t))),dN(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function YN(e){return function(e,t){const n=TN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),dN(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function XN(e){return function(e,t){const n=TN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),dN(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function ZN(e,t,n,r,s,a){!function(e,t){const n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return TN(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return dN(e,(()=>e.bindTexture(o,i))),dN(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),dN(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),dN(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),dN(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),dN(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))),dN(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function QN(e){return e.internalFormatFloat}function JN(e){return e.internalFormatHalfFloat}function eS(e){return e.downloadTextureFormat}function tS(e){return e.internalFormatPackedFloat}function nS(e){return e.internalFormatPackedHalfFloat}function rS(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=cN(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class sS{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=K().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){nN[e]=t}(t,e)):this.gl=sN(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===K().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=fN(this.gl,e),_N(this.gl,t))this.textureHalfFloatExtension=fN(this.gl,t);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),_N(this.gl,r))this.colorBufferHalfFloatExtension=fN(this.gl,r);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",_N(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!_N(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=YN(this.gl),this.indexBuffer=XN(this.gl),this.framebuffer=function(e){return TN(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=hN(this.gl,this.textureHalfFloatExtension)}get debug(){return K().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;dN(e,(()=>e.finish())),dN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),dN(e,(()=>e.deleteFramebuffer(this.framebuffer))),dN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),dN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),dN(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=lN(t,n);return ZN(e,s,a,QN(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=lN(t,n);return ZN(e,s,a,JN(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=lN(t,n);return ZN(e,s,a,eS(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){dN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?dN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):dN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),dN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;dN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),dN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),dN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=cN(t,n);return ZN(e,s,a,nS(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=cN(t,n);return ZN(e,s,a,tS(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(wN(this.gl,this.framebuffer),this.outputTexture=null),dN(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=lN(t,n),i=new Uint8Array(t*n*4);return dN(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return rS(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();dN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return dN(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),dN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),dN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(K().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return dN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=mN(t,e),r=KN(t),s=function(e){return TN(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return dN(t,(()=>t.attachShader(s,r))),dN(t,(()=>t.attachShader(s,n))),function(e,t){if(dN(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,s),this.debug&&yN(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(e,t,n){return dN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),bN(e,t,"clipSpacePos",n,3,20,0)&&bN(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&dN(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&yN(this.gl,this.program),dN(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return TN(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),dN(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),vN(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=cN(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&yN(this.gl,this.program),kN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),dN(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),dN(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=fN(this.gl,2===K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await k((()=>this.disposed||this.isQueryAvailable(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||k((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),xN(this.gl,e,this.framebuffer),this.debug&&kN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(xN(this.gl,this.outputTexture,this.framebuffer),this.debug&&kN(this.gl)):wN(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;xN(r,e,this.framebuffer),this.debug&&kN(r),this.outputTexture=e,dN(r,(()=>r.viewport(0,0,t,n))),dN(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),dN(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:aS}=r;function iS(e,t,n,r){const s=[];e.forEach((e=>{const t=y(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))}));const a=s.join("\n"),i=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r="";r+=n?lS(e):oS(e);const s=e.shapeInfo.logicalShape,a=t.logicalShape;s.length<=a.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=aS(e.shapeInfo.logicalShape,t.logicalShape),l=gS(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===y(e.shapeInfo.logicalShape),m=y(t.logicalShape),g=1===m;if(1!==a||f||g){if(f&&!g)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&b(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=gS(l),c=aS(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");return`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t));return r}(e,t,r))).join("\n"),o=t.texShape,l=zN(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${uS}\n    ${cS}\n    ${hS}\n  `;return t}(l);t.isPacked?(c=function(e,t){switch(e.length){case 0:return pS();case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(b(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let l=2;l<e.length-1;l++)a*=e[e.length-l-1],i=`\n      int b${l} = index / ${a};\n      index -= b${l} * ${a};\n    `+i,o=`b${l}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t){switch(e.length){case 0:return pS();case 1:return function(e,t){if(1===t[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function(e,t){if(b(e,t))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=PN(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=PN(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=PN(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=PN(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=dS);return[d,u,h,a,c,i,n].join("\n")}function oS(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape,o=fS(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${mS(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=fS(t);if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `;if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&b(t,s)){const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=S(t),o=a;if(o.length<t.length){const t=["row","col"];return`\n      ${oS(yS(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${bS(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${mS(e)}\n      }\n    `;const l=s[0],u=s[1],c=fS(n);if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===l)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:o}=S(t),l=i;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${oS(yS(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${bS(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${mS(e)}\n      }\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],d=e.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const p=fS(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${p};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:o,keptDims:l}=S(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${oS(yS(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${bS(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${mS(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],d=c[1];if(d===i&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const p=fS(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${p});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=S(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${oS(yS(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${bS(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${mS(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=fS(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=S(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${oS(yS(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${bS(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${mS(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=fS(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function lS(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=zN();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=zN();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=s[0],i=s[1],o=zN();if(null!=s&&b(t,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${lS(yS(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${bS(s,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2),u=l*Math.ceil(t[1]/2),c=zN();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u}, ${l}, b, row, col);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let f=2;f<n-1;f++)h=`int b${f}, `+h,c*=t[n-f-1],d=`b${f} * ${c} + `+d;const p=zN();return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}(e)}}const uS="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",cS="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",hS="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dS="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function pS(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function fS(e){return`offset${e}`}function mS(e){const t=e.name,n=y(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function gS(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function yS(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function bS(e,t){return t.map((t=>e[t])).join(", ")}function vS(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!b(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!b(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{mx:xS,XI:wS,Nk:kS,YG:TS,hH:NS,sG:SS,uM:IS,vS:ES,GG:$S,rq:CS,WR:AS,GE:RS,px:_S,jC:DS,He:FS,hE:MS,BF:OS,Dk:LS,_B:zS,qy:PS,Zy:BS,dH:WS,HS:VS,eW:US,dl:GS,Dw:jS,xT:HS,_X:qS,wz:KS}=s;function YS(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function XS(e,t){return 1===t?[e]:YS(e,t)}class ZS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=XS("rc",t),r=gS(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class QS{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${PN(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${BN(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class JS{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=tI(t,n),s=nI(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=eI(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===oN.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===oN.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===oN.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===oN.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===oN.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=tI(n,r),a=nI(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=eI(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=K().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function eI(e,t,n,r,s){const a=function(e,t){switch(e){case oN.PACKED_2X2_FLOAT32:return tS(t);case oN.PACKED_2X2_FLOAT16:return nS(t);case oN.UNPACKED_FLOAT32:return QN(t);case oN.UNPACKED_FLOAT16:return JN(t);case oN.PACKED_4X1_UNSIGNED_BYTE:return eS(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=cN(e[0],e[1]);i=t*n}else{const[t,n]=lN(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function tI(e,t){if(e===iN.UPLOAD)return oN.PACKED_2X2_FLOAT32;if(e===iN.RENDER||null==e)return function(e){return K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?oN.PACKED_2X2_FLOAT32:oN.UNPACKED_FLOAT32:e?oN.PACKED_2X2_FLOAT16:oN.UNPACKED_FLOAT16}(t);if(e===iN.DOWNLOAD||e===iN.PIXELS)return oN.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function nI(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class rI{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const sI="if (isnan(x)) return x;",aI="return abs(x);";const iI=sI+"\n  return (x < 0.0) ? 0.0 : x;\n",oI=sI+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",lI="return x;";class uI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class cI{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=XS("rc",t),r=gS(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const hI=fu,dI={};class pI extends l{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!K().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=sN(K().getNumber("WEBGL_VERSION"));this.binaryCache=((t=K().getNumber("WEBGL_VERSION"))in dI||(dI[t]={}),dI[t]),this.gpgpu=new sS(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new JS(this.gpgpu),this.numMBBeforeWarning=null==K().global.screen?1024:K().global.screen.height*K().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o(this,aa())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((K().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||K().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:iN.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}decComplexRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,n,r){if(K().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:iN.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new uI(i,lI):new rI(i,lI);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=cr()),"complex64"===r){c=Ql(this.readSync(s.real.dataId),this.readSync(s.imag.dataId))}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=cr()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new uI(r,lI):new rI(r,lI);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===K().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&K().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...uN(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Ql(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=y(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>dr(e)))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Es(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!pN(n)){if(K().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=y(t);if(K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...uN(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=K().getBool("WEBGL_PACK")&&!0===r,i=a?EN(t):t,o=a?new jN(i):new GN(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=g(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=g(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:cr(),endMs:null}}endTimer(e){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=cr(),e)}async getQueryTime(e){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return K().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=aa().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:128;const n=this.getCPUBackend();return K().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&y(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Xl("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return hI(e.shape,t)}packedUnaryOp(e,t,n){const r=new uI(e.shape,t);return this.compileAndRun(r,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=WS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(K().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,aI,e.dtype);const t=new rI(e.shape,aI);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&R(n[0])){const s=n.map((e=>hr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return aa().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new cI(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new ZS(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[SN(e.shape),...IN(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[SN(t),...IN(t)],a=new QS(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=EN(r);let i;i=n?new UN(a):new VN(a);return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===aN.DENSE){const t=uN(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===y(a.shape))return i.values=I(a.dtype,0),a;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&y(t.shape)<=K().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!CN(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s,a}(e,l,u),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const s=t.userCode,a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=iS(a,o,s,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===K().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d={};for(let p=0;p<t.variableNames.length;p++){const n=t.variableNames[p],r=!1;d[n]=e.getUniformLocation(u,n,r),d[`offset${n}`]=e.getUniformLocation(u,`offset${n}`,r)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,l,u))),d=null!=this.activeTimers;let p;if(d&&(p=this.startTimer()),function(e,t,n,r,s){vS(t.inShapeInfos,n),vS([t.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===K().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(y(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)})),!K().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;const a=this.runWebGLProgram(e,t,n,r,s);return aa().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!K().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=oa((()=>{if(!K().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=K().getBool("DEBUG");K().set("DEBUG",!1);const t=this.abs(da(1e-8)).dataSync()[0];if(K().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=cr());let c=t.texShape;if(null==c&&(c=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?d(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=S(e);e=t.newShape}let r=y(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=SN(e);let n=2,s=2;return e.length&&([n,s]=IN(e)),r=t*(n/2)*(s/2),x(r).map((e=>2*e))}return x(r)}(n,o),t.texShape=c),null!=s){const e=EN(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array;o?([i,h]=cN(c[0],c[1]),a=new qN(e,[h,i],d)):a=new HN(e,[h,i],d);const p=this.makeTensorInfo([h,i],r);this.texData.get(p.dataId).usage=d?iN.PIXELS:iN.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,h,s);const f=!0,m=this.runWebGLProgram(a,[p],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),t.values=null,l&&(this.uploadWaitMs+=cr()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*A(t)}}Lr()&&ca("webgl",(()=>new pI),2);const fI="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class mI{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ni(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const gI="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class yI{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ni(t,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===y(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${gS(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=XS("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function bI(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const vI={kernelName:ut,backendName:"webgl",kernelFunc:bI};function xI(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=bI({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const l=bI({inputs:{x:s},backend:n});return n.texData.get(l.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:l},a}const wI={kernelName:Te,backendName:"webgl",kernelFunc:xI},kI="return (a < 0.) ? b * a : a;",TI="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const NI={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",lr(a,"float32")),o=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yI(TI,s.shape,i.shape):new mI(kI,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],s.dtype);return n.disposeIntermediateTensorInfo(i),l}},SI="return (a < 0.) ? b * a : a;",II="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const EI={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yI(II,r.shape,s.shape):new mI(SI,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},$I="if (isnan(x)) return x;";function CI(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:s}=e;return e=>{let{inputs:a,backend:i}=e;const{x:o}=a,l=i,u=s||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=r){const e=l.texData.get(o.dataId),t=r(e.values,u);return l.makeTensorInfo(o.shape,u,t)}let c;return c=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new uI(o.shape,n):new rI(o.shape,t),l.runWebGLProgram(c,[o],u)}}function AI(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:i}=e;return e=>{let{inputs:o,backend:l}=e;const{a:u,b:c}=o,h=l;if(s&&"complex64"===u.dtype){const e=h.texData.get(u.dataId),n=h.texData.get(c.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new mI(t,u.shape,c.shape);return h.runWebGLProgram(i,[s,a],Sr(n.dtype,r.dtype))})),a=xI({inputs:{real:r,imag:s},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(s),a}const d=i||Sr(u.dtype,c.dtype);if(h.shouldExecuteOnCPU([u,c])&&null!=a){const e=h.texData.get(u.dataId),t=h.texData.get(c.dataId),[n,r]=a(u.shape,c.shape,e.values,t.values,d),s=h.makeTensorInfo(r,d);return h.texData.get(s.dataId).values=n,s}let p;return p=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new yI(n,u.shape,c.shape,r):new mI(t,u.shape,c.shape),h.runWebGLProgram(p,[u,c],d)}}function RI(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":iI;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":oI;if("prelu"===e)return t?II:SI;if("leakyrelu"===e)return t?TI:kI;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class _I{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${v};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const DI="return areal * breal - aimag * bimag;",FI="return areal * bimag + aimag * breal;";class MI{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ni(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const OI="return a * b;";function LI(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Sr(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new MI(DI,r.shape,s.shape),i=new MI(FI,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=xI({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=OS(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yI(OI,r.shape,s.shape):new mI(OI,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const zI={kernelName:Pt,backendName:"webgl",kernelFunc:LI};function PI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=y(s.shape),l=T(a,o),u=y(l);p(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||CN(s.shape,l)||null!==c.texture&&CN(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[SN(e.shape),...IN(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[SN(t),...IN(t)],i=new QS(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,l,i)}const BI={kernelName:nn,backendName:"webgl",kernelFunc:PI};class WI{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${v(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class VI{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function UI(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Rl(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new WI({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new WI({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new VI({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class GI{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=gS(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class jI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=gS(this.rank),s=YS("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=s[u];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function HI(e,t,n){const r=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jI(e.shape,t):new GI(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function qI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=N(s,e.shape);let o=i;const l=_i(o,a),u=null!=l;let c=e;u&&(c=HI(e,l,r),o=Fi(o.length,a)),Ri("sum",o,a);const[h,d]=Ci(c.shape,o);let p=h;n&&(p=Ai(h,i));const f=y(d),m=PI({inputs:{x:c},attrs:{shape:[y(e.shape)/f,f]},backend:r}),g=UI(m,Ir(e.dtype),"sum",r),b=PI({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),b}(s,a,i,n)}const KI={kernelName:kn,backendName:"webgl",kernelFunc:qI};function YI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=s.shape[a[c]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=qS(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype);i.texData.get(u.dataId).values=t}else u=HI(s,a,i);return u}const XI={kernelName:Mn,backendName:"webgl",kernelFunc:YI};function ZI(e){let{a:t,b:n,transposeA:r,transposeB:s,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e;const c=t.shape.length,h=n.shape.length,d=r?t.shape[c-2]:t.shape[c-1],f=s?n.shape[h-1]:n.shape[h-2],m=r?t.shape[c-1]:t.shape[c-2],g=s?n.shape[h-2]:n.shape[h-1],b=t.shape.slice(0,-2),v=n.shape.slice(0,-2),x=y(b),w=y(v);p(c>=2&&h>=2&&(x===w||1===x||1===w),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${v}).`));const k=(x>w?t.shape.slice(0,-2):n.shape.slice(0,-2)).concat([m,g]);p(d===f,(()=>`Error in matMul: inner shapes (${d}) and (${f}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${s} must match.`));const T=r?[x,d,m]:[x,m,d],N=s?[w,g,f]:[w,f,g],S=PI({inputs:{x:t},backend:a,attrs:{shape:T}}),I=PI({inputs:{x:n},backend:a,attrs:{shape:N}}),E=[S,I],$=Math.max(x,w),C=r?S.shape[1]:S.shape[2],A=null!=i,R=null!=o,_="leakyrelu"===u,D=null!=u?RI(u,!0):null;let F;if((1===m||1===g)&&C>1e3&&!1===(A||R||_||null!=D)){let e=S,t=I;r&&(e=YI({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),E.push(e)),s&&(t=YI({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),E.push(t));const n=1===g;let i=e;1!==g&&(i=PI({inputs:{x:e},backend:a,attrs:{shape:[$,C,1]}}),E.push(i));const o=1===g?2:1;let l=t;n&&(l=PI({inputs:{x:t},backend:a,attrs:{shape:[$,1,C]}}),E.push(l));const u=LI({inputs:{a:i,b:l},backend:a});F=qI({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),E.push(u)}else{const e=Sr(t.dtype,n.dtype),u=new _I(T,N,[$,m,g],r,s,A,D,R,_),c=[S,I];if(null!=i&&c.push(i),R&&c.push(o),_){const e=a.makeTensorInfo([],"float32",lr(l,"float32"));c.push(e),E.push(e)}F=a.runWebGLProgram(u,c,e)}const M=PI({inputs:{x:F},backend:a,attrs:{shape:k}});E.push(F);for(const p of E)a.disposeIntermediateTensorInfo(p);return M}const QI={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return ZI({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},JI="return abs(x);";const eE={kernelName:J,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=WS(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new uI(r.shape,JI):new rI(r.shape,JI),n.runWebGLProgram(s,[r],r.dtype)}},tE=CI({opSnippet:sI+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),nE={kernelName:ee,backendName:"webgl",kernelFunc:tE},rE=CI({opSnippet:sI+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),sE={kernelName:te,backendName:"webgl",kernelFunc:rE},aE="return a + b;",iE=AI({opSnippet:aE,packedOpSnippet:aE,supportsComplex:!0,cpuKernelImpl:xS}),oE={kernelName:ne,backendName:"webgl",kernelFunc:iE};class lE{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class uE{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const cE={kernelName:re,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return bI({inputs:{x:s[0]},backend:r});if(s.length>K().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>Sr(e,t))),i=s.map((e=>e.shape)),o=K().getBool("WEBGL_PACK")?new uE(s[0].shape,i):new lE(s[0].shape,i);return r.runWebGLProgram(o,s,a)}};const hE={kernelName:se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=N(a,s.shape);let u=l;const c=_i(u,o);let h=s;null!=c&&(h=YI({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Fi(u.length,o)),Ri("all",u,o);const[d,p]=Ci(h.shape,u),f=PI({inputs:{x:h},backend:n,attrs:{shape:[-1,y(p)]}}),m=UI(f,f.dtype,"all",n);let g;if(i){g=PI({inputs:{x:m},backend:n,attrs:{shape:Ai(d,l)}})}else g=PI({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};const dE={kernelName:ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=N(a,s.shape);let u=l;const c=_i(u,o);let h=s;null!=c&&(h=YI({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Fi(u.length,o)),Ri("any",u,o);const[d,p]=Ci(h.shape,u),f=PI({inputs:{x:h},backend:n,attrs:{shape:[-1,y(p)]}}),m=UI(f,f.dtype,"any",n);let g;if(i){g=PI({inputs:{x:m},backend:n,attrs:{shape:Ai(d,l)}})}else g=PI({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class pE{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class fE{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,p(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=gS(o),u=XS("coords",o);let c,h;if(1===a){h=o+1;const e=gS(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),f="."+d[h-1],m=d.map((e=>"int "+e)),g=XS("sourceLocR",h-1).concat("inIdx.r"),y=XS("sourceLocG",h-1).concat("inIdx.g"),b=XS("sourceLocB",h-1).concat("inIdx.b"),v=XS("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${v.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,T=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${T}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function mE(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Rl(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new pE(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=mE(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function gE(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const s=null!=r?r.shape:t.shape,a=Rl(s[s.length-1]),i=new fE(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=gE(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function yE(e,t,n,r){const s=[n];if(Ri("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!K().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,i]=Ci(t.shape,s),o=y(i),l=PI({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);const u=mE(e,l,r);n.push(u);const c=PI({inputs:{x:u},backend:e,attrs:{shape:a}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return gE(e,t,r)}const bE={kernelName:ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=N(a,s.shape);const o=_i(i,s.shape.length);let l=s;const u=[];null!=o&&(l=YI({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Fi(i.length,l.shape.length)),Ri("argMax",[i[0]],l.shape.length);const c=yE(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const vE={kernelName:oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=N(a,s.shape);const o=_i(i,s.shape.length);let l=s;const u=[];null!=o&&(l=YI({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Fi(i.length,l.shape.length)),Ri("argMin",[i[0]],l.shape.length);const c=yE(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},xE=CI({opSnippet:sI+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),wE={kernelName:le,backendName:"webgl",kernelFunc:xE},kE=CI({opSnippet:sI+"return log(x + sqrt(x * x + 1.0));"}),TE={kernelName:ue,backendName:"webgl",kernelFunc:kE},NE=CI({opSnippet:sI+"\n  return atan(x);\n"}),SE={kernelName:ce,backendName:"webgl",kernelFunc:NE},IE=AI({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),EE={kernelName:de,backendName:"webgl",kernelFunc:IE},$E=CI({opSnippet:sI+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),CE={kernelName:he,backendName:"webgl",kernelFunc:$E};class AE{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const v=4*Math.floor(a/4),x=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class RE{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const w=4*Math.floor(a/4),k=a%4,T=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${T}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${T}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${T}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${T}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}}const _E={kernelName:pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ON(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(Aa(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=xa(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))return bI({inputs:{x:s},backend:n});const c=new AE(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}};const DE={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=wa(s.shape,a,i,[1,1,1],o,l,u),h=new RE(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class FE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ME{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const OE={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=wa(i.shape,o,l,[1,1,1],u,c),d=new ME(h);return n.runWebGLProgram(d,[s],i.dtype)}};const LE={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;ON([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=xa(i.shape,o,l,1,u),h=new FE(c);return n.runWebGLProgram(h,[s],i.dtype)}};const zE={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return ZI({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class PE{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ni(e,t),ni(e,n);let i="0.0";null!=r&&(ni(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(ni(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class BE{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ni(e,t),ni(e,n);let i="vec4(0.0)";null!=r&&(ni(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(ni(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const WE={kernelName:st,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,mean:a,variance:i,offset:o,scale:l}=t;p(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==l||a.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=[s,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=l&&(d=l.shape,c.push(l));const f=K().getBool("WEBGL_PACK_NORMALIZATION")?new BE(s.shape,a.shape,i.shape,h,d,u):new PE(s.shape,a.shape,i.shape,h,d,u);return n.runWebGLProgram(f,c,c[0].dtype)}};class VE{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=gS(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return UE.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${UE[t]} = start[${t}] + coords.${UE[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const UE=["x","y","z","w","u","v"];class GE{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=gS(this.rank),n=XS("coords",this.rank),r=XS("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function jE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=Js(s,a,i);if(Ps(s,o,l),0===y(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=VS(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=Zs(s.shape,o,l);if(u||!c){const e=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GE(l):new VE(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.complexParentRefCount=0,i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Qs(t,O(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const HE={kernelName:mn,backendName:"webgl",kernelFunc:jE},qE={kernelName:be,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;p(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Dl(s.shape,a,o),u=Fl(l.length,a.length),c=Ml(s.shape,a,o),h=Ol(i,a.length),d=Ll(c,i,a.length),f=[],m=PI({inputs:{x:s},backend:n,attrs:{shape:l}}),g=YI({inputs:{x:m},backend:n,attrs:{perm:u}}),y=PI({inputs:{x:g},backend:n,attrs:{shape:c}}),b=jE({inputs:{x:y},backend:n,attrs:{begin:h,size:d}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const KE={kernelName:ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=wS(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},YE=AI({opSnippet:"return float(a != b);",dtype:"bool"}),XE={kernelName:Wt,backendName:"webgl",kernelFunc:YE};function ZE(e){const{inputs:t,backend:n}=e,{input:r}=t;return bI({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const QE={kernelName:Jt,backendName:"webgl",kernelFunc:ZE};const JE={kernelName:xe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return bI({inputs:{x:a},backend:r});const t=Bi(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=xI({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=ZE({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!$(a.dtype,i)){const e=bI({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new rI(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",I("bool",1)),t=YE({inputs:{a:a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},e$="return ceil(x);",t$=CI({opSnippet:e$,packedOpSnippet:e$,cpuKernelImpl:TS}),n$={kernelName:we,backendName:"webgl",kernelFunc:t$};class r${constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class s${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const a$={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=K().getBool("WEBGL_PACK_CLIP")?new s$(s.shape):new r$(s.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[s],s.dtype,l)}};class i${constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function o$(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const l$={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new i$(r.shape),i=[o$(r,s.complexTensorInfos.real),o$(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class u${constructor(e){this.outputShape=[],this.outputShape=Cl(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const e=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class c${constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Cl(e,t);const n=this.outputShape,r=n.length,s=gS(r),a=XS("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${h$(i,l,e)}),\n            vec2(${h$(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${h$(i,l,p)}),\n          vec2(${h$(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function h$(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function d$(e){const{inputs:t,backend:n}=e,{input:r}=t;return bI({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const p$={kernelName:ht,backendName:"webgl",kernelFunc:d$};function f$(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>ZE({inputs:{input:e},backend:n}))),s=e.map((e=>d$({inputs:{input:e},backend:n}))),a=f$(r,t,n),i=f$(s,t,n),o=xI({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if("string"===r){const{tensors2D:s,outShape:a}=m$(e,t,n),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=1===s[0].shape[0],l=NS(i,a,r,o),u=Cl(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>K().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=f$(e.slice(0,r),t,n),a=f$(e.slice(r),t,n),i=f$([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new c$(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:s,outShape:a}=m$(e,t,n),i=new u$(s.map((e=>e.shape))),o=n.runWebGLProgram(i,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=PI({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(o),l}function m$(e,t,n){const r=Cl(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>PI({inputs:{x:e},attrs:{shape:[-1,y(e.shape.slice(t))]},backend:n}))),outShape:r}}function g$(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=N(s,t[0].shape)[0],i=Cl(t.map((e=>e.shape)),a);if(0===y(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>y(e.shape)>0));if(1===o.length)return bI({inputs:{x:o[0]},backend:n});return $l(o.map((e=>e.shape)),a),f$(o,a,n)}const y$={kernelName:Se,backendName:"webgl",kernelFunc:g$};class b${constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class v${constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class x${constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,m=zN(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let v="";for(let x=0;x<=1;x++)for(let n=0;n<=1;n++)v+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${x};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*x+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*x+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${v}\n\n        ${m.output} = result;\n      }\n    `}}function w$(e){let{x:t,filter:n,convInfo:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e;const u=t.shape,c=s.texData.get(t.dataId),h=r.inChannels,d=u[0]*u[1]*u[2],f=r.outChannels,m="channelsLast"===r.dataFormat,g=!1,y=!1;let b;const v=[],x=(1===d||1===f)&&h>1e3,w=u[2]%2!==0&&!!c.isPacked;if(!x&&K().getBool("WEBGL_LAZILY_UNPACK")&&K().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&w){const e=m?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),h={dataId:t.dataId,shape:[1,e,r.inChannels],dtype:t.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,p(CN(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const f=PI({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}});v.push(f);const x=ZI({a:h,b:f,backend:s,transposeA:g,transposeB:y,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o}),w=s.texData.get(x.dataId);p(w.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,w.shape=r.outShape,b=bI({inputs:{x:x},backend:s}),b.shape=r.outShape,v.push(x)}else{const e=PI({inputs:{x:t},backend:s,attrs:{shape:[1,m?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],r.inChannels]}}),c=PI({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}}),h=ZI({a:e,b:c,transposeA:g,transposeB:y,backend:s,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o});b=PI({inputs:{x:h},backend:s,attrs:{shape:r.outShape}}),v.push(e),v.push(c),v.push(h)}for(const p of v)s.disposeIntermediateTensorInfo(p);return b}function k$(e){let{x:t,filter:n,convInfo:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e;const{filterWidth:u,filterHeight:c,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=r,m="channelsLast"===f,g=u*c*h,b=p*d,v=[g,b],x=[],w=PI({inputs:{x:t},backend:s,attrs:{shape:t.shape.slice(1)}}),k=PI({inputs:{x:n},backend:s,attrs:{shape:[1,g,y(n.shape)/g]}});x.push(w),x.push(k);const T=new x$(v,w.shape,r),N=s.runWebGLProgram(T,[w],"float32"),S=PI({inputs:{x:N},backend:s,attrs:{shape:[1,v[0],v[1]]}});x.push(N),x.push(S);const I=null!=a,E=null!=i,$="leakyrelu"===l,C=l?RI(l,!0):null,A=new _I(S.shape,k.shape,[1,b,r.outChannels],!0,!1,I,C,E,$),R=[S,k];if(a&&R.push(a),E&&R.push(i),$){const e=s.makeTensorInfo([],"float32",lr(o,"float32"));R.push(e),x.push(e)}const _=s.runWebGLProgram(A,R,"float32"),D=PI({inputs:{x:_},backend:s,attrs:{shape:m?[1,p,d,r.outChannels]:[1,r.outChannels,p,d]}});x.push(_);for(const y of x)s.disposeIntermediateTensorInfo(y);return D}const T$={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Ra(l),d=ka(s.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(K().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=k$({x:s,filter:a,convInfo:d,backend:n});else{const e=new b$(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=w$({x:s,filter:a,convInfo:d,backend:n});const f=PI({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class N${constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class S${constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class I${constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class E${constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const $$={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Ra(l),d=ka(s.shape,c,i,1,o,u,!1,h),p=new N$(d);return n.runWebGLProgram(p,[s,a],"float32")}};const C$={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Ra(u),d=ka(i,a.shape,o,1,l,c,!1,h),p=new S$(d);return n.runWebGLProgram(p,[s,a],"float32")}};const A$={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Ta(s.shape,a.shape,i,l,o),c=new v$(u);return n.runWebGLProgram(c,[s,a],"float32")}};const R$={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=Ta(s.shape,l,i,1,o),c=new I$(u);return n.runWebGLProgram(c,[s,a],"float32")}};const _$={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=Ta(l,a.shape,o,1,i),c=new E$(u);return n.runWebGLProgram(c,[s,a],"float32")}},D$=CI({opSnippet:$I+"\n  return cos(x);\n"}),F$={kernelName:_e,backendName:"webgl",kernelFunc:D$},M$=CI({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),O$={kernelName:De,backendName:"webgl",kernelFunc:M$};class L${constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,v,x]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const z$={kernelName:Me,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new L$(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};class P${constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${B$(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${gS(r)} coords = getOutputCoords();\n        int end = ${W$(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${W$(r,"coords")} = idx;\n          val += getX(${B$(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function B$(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function W$(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const V$={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,l=s.shape.length,u=_i([a],l);let c=s;null!=u&&(c=YI({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=Fi(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const d=c.shape[h];let p=bI({inputs:{x:c},backend:n});for(let f=0;f<=Math.ceil(Math.log2(d))-1;f++){const e=new P$(c.shape,!1,o),t=e.getCustomSetupFunc(f),r=p;p=n.runWebGLProgram(e,[p],p.dtype,t),n.disposeIntermediateTensorInfo(r)}if(i){const e=new P$(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=YI({inputs:{x:p},backend:n,attrs:{perm:Di(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}};const U$={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=wS(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=kS(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class G${constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const j$={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;p(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],l="NHWC"===i?s.shape[1]:s.shape[2],u="NHWC"===i?s.shape[2]:s.shape[3],c="NHWC"===i?s.shape[3]:s.shape[1],h=l*a,d=u*a,f=c/(a*a),m=new G$("NHWC"===i?[o,h,d,f]:[o,f,h,d],a,i);return n.runWebGLProgram(m,[s],s.dtype)}};class H${constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class q${constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let y="int xR; int xC; int xCOffset;";for(let d=0;d<f;d++)for(let e=0;e<m;e++)y+=`\n          vec4 xTexelR${d}C${2*e} = vec4(0.);\n          vec4 wR${d}C${e} = vec4(0.);\n          vec4 xR${d}C${e} = vec4(0.);`;for(let w=0;w<f;w++)for(let e=0;e<g;e++){const t=2*e;if(y+=`\n          xR = xRCorner + ${w*h};\n          xC = xCCorner + ${t*p};\n        `,1===c){if(t<m&&(y+=l%2===1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${w}C${t}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${w}C${t} = vec4(previous.zw, xTexelR${w}C${t}.xy);\n                } else {\n                  xR${w}C${t} = vec4(0, 0, xTexelR${w}C${t}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xR${w}C${t} = xTexelR${w}C${t};\n              `,t+1<m)){const e=l%2===0?d(p):p;p%2===0&&l%2===1||p%2!==0&&l%2!==1?(y+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(y+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${w}C${t} = vec4(0.);\n                    }\n                  `),y+=`\n                  xR${w}C${t+1} = vec4(\n                    xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.xy);\n                `):y+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${w}C${t+1} = xTexelR${w}C${t+2};\n                `}}else t<m&&(y+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,l%2===1?(y+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${w}C${t+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${w}C${t+2} = vec4(0.);\n                }\n\n                xR${w}C${t} = vec4(\n                  xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.zw);\n              `,t+1<m&&(y+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${w}C${t+1} = vec4(xTexelR${w}C${t+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${t+2} = vec4(0.);\n                }\n\n                xR${w}C${t} = vec4(\n                  xTexelR${w}C${t}.xy, xTexelR${w}C${t+2}.xy);\n              `,t+1<m&&(y+=`\n                  xR${w}C${t+1} = vec4(\n                    xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.zw);\n                `)),y+="}");t<m&&(y+=`\n            vec4 wTexelR${w}C${t} = getW(${w}, ${t}, d1, q);\n            wR${w}C${t} = vec4(wTexelR${w}C${t}.xz, wTexelR${w}C${t}.xz);\n          `,t+1<m&&(y+=`\n              vec4 wTexelR${w}C${t+1} = getW(${w}, ${t+1}, d1, q);\n              wR${w}C${t+1} =\n                vec4(wTexelR${w}C${t+1}.xz, wTexelR${w}C${t+1}.xz);`))}for(let d=0;d<f;d++)for(let e=0;e<m;e++)y+=`dotProd += xR${d}C${e} * wR${d}C${e};`;let b="",v="";n&&(b=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,v="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${y}\n\n        vec4 result = dotProd;\n        ${x}\n        ${v}\n        setOutput(result);\n      }\n    `}}const K$={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),p(Aa(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=ka(s.shape,a.shape,i,c,o,u,!0);let d;return d=K().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new q$(h):new H$(h),n.runWebGLProgram(d,[s,a],"float32")}};class Y${constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class X${constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Z$={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=ka(s.shape,c,i,o,l,u,!0),d=new Y$(h);return n.runWebGLProgram(d,[s,a],"float32")}};const Q$={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=ka(c,a.shape,i,o,l,u,!0),d=new X$(h);return n.runWebGLProgram(d,[s,a],"float32")}};class J${constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const eC={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=y(r.shape),i=PI({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new J$(a),l=n.runWebGLProgram(o,[i],i.dtype),u=PI({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class tC{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const nC={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=va(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new tC(u);c=n.runWebGLProgram(h,[s,a],"float32");const d=PI({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},rC=CI({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),sC={kernelName:He,backendName:"webgl",kernelFunc:rC},aC={kernelName:qe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yI("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new mI("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},iC=AI({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),oC={kernelName:Ye,backendName:"webgl",kernelFunc:iC},lC=CI({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Gl};\n  float a1 = ${jl};\n  float a2 = ${Hl};\n  float a3 = ${ql};\n  float a4 = ${Kl};\n  float a5 = ${Yl};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),uC={kernelName:Ke,backendName:"webgl",kernelFunc:lC},cC="return exp(x);",hC=CI({opSnippet:cC,packedOpSnippet:cC,cpuKernelImpl:SS}),dC={kernelName:Xe,backendName:"webgl",kernelFunc:hC};function pC(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(p(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),PI({inputs:{x:a},backend:r,attrs:{shape:o}})}const fC={kernelName:Ze,backendName:"webgl",kernelFunc:pC},mC="return exp(x) - 1.0;",gC=CI({opSnippet:mC,packedOpSnippet:mC,cpuKernelImpl:IS}),yC={kernelName:Qe,backendName:"webgl",kernelFunc:gC};class bC{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function vC(e,t,n){const r=n.texData.get(e.dataId),s=y(e.shape),a=e.shape[e.shape.length-1],i=PI({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new bC("real",o,t),u=new bC("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=xI({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=PI({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const xC={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return vC(r,!1,n)}};class wC{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function kC(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||D(s),"string"===a){const e=E(a,y(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new wC(r,s),n=e.getCustomSetupFunc(s);return t.runWebGLProgram(e,[],a,n)}}const TC={kernelName:et,backendName:"webgl",kernelFunc:kC};class NC{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const SC={kernelName:tt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:r}=t,s=n,a=new NC(r.shape);return s.runWebGLProgram(a,[r],r.dtype)}},IC="return floor(x);",EC=CI({opSnippet:IC,packedOpSnippet:IC,cpuKernelImpl:ES}),$C={kernelName:nt,backendName:"webgl",kernelFunc:EC},CC=AI({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),AC={kernelName:rt,backendName:"webgl",kernelFunc:CC};class RC{constructor(e){this.variableNames=["A"];const t=zN(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class _C{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=zN(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const DC={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,l="undefined"!==typeof ImageBitmap&&s instanceof ImageBitmap,[u,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[c,u],d=[c,u,a];(o||i||l)&&(null==FC&&(FC=document.createElement("canvas").getContext("2d")),FC.canvas.width=u,FC.canvas.height=c,FC.drawImage(s,0,0,u,c),s=FC.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=iN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=K().getBool("WEBGL_PACK")?new _C(d):new RC(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let FC;const MC={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Ra(c),g=ka(s.shape,a.shape,l,h,u,d,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(K().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=k$({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,l=p?RI(p,!1):null,u=new b$(g,e,l,t,r),c=[s,a];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",lr(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(u,c,"float32")}else y=w$({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const v=PI({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}};const OC={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r,m=[];let g=c;null==g&&(g=[1,1]),p(Aa(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const y=ka(s.shape,a.shape,l,g,u,h,!0),b=K().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,v=d?RI(d,b):null,x=[s,a],w=null!=i,k=null!=o,T="leakyrelu"===d;if(w&&x.push(i),k&&x.push(o),T){const e=n.makeTensorInfo([],"float32",lr(f,"float32"));x.push(e),m.push(e)}let N;N=b?new q$(y,w,v,k,T):new H$(y,w,v,k,T);const S=n.runWebGLProgram(N,x,"float32");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class LC{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=gS(t.length),s=gS(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const zC={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],[o,l,u,c]=zl(r,s),h=PI({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),d=PI({inputs:{x:r},backend:n,attrs:{shape:[y(r.shape)/u,u]}}),p=new LC(i,c,[l,u]),f=n.runWebGLProgram(p,[d,h],d.dtype),m=PI({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};class PC{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=gS(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("int(getIndices(resRC.x, resRC.z))"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const BC={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=uu(s,a,N(i,s.shape)[0],o),u=y(a.shape),c=[],h=PI({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=PI({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(h),r=$S(t,e,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const f=new PC(h.shape,p),m=n.runWebGLProgram(f,[h,d],h.dtype);c.push(m);const g=PI({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},WC=AI({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:CS,dtype:"bool"}),VC={kernelName:ot,backendName:"webgl",kernelFunc:WC},UC=AI({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),GC={kernelName:lt,backendName:"webgl",kernelFunc:UC};const jC={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return vC(r,!0,n)}},HC=CI({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),qC={kernelName:dt,backendName:"webgl",kernelFunc:HC},KC=CI({opSnippet:"return float(isinf(x));",dtype:"bool"}),YC={kernelName:pt,backendName:"webgl",kernelFunc:KC},XC=CI({opSnippet:"return float(isnan(x));",dtype:"bool"}),ZC={kernelName:ft,backendName:"webgl",kernelFunc:XC},QC=AI({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:AS,dtype:"bool"}),JC={kernelName:gt,backendName:"webgl",kernelFunc:QC},eA=AI({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),tA={kernelName:yt,backendName:"webgl",kernelFunc:eA};const nA={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=RS(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},rA=CI({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:_S}),sA={kernelName:vt,backendName:"webgl",kernelFunc:rA},aA=CI({opSnippet:"return log(1.0 + x);"}),iA={kernelName:xt,backendName:"webgl",kernelFunc:aA},oA=AI({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),lA={kernelName:wt,backendName:"webgl",kernelFunc:oA},uA=CI({opSnippet:"return float(!(x >= 1.0));"}),cA={kernelName:kt,backendName:"webgl",kernelFunc:uA},hA=AI({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),dA={kernelName:Tt,backendName:"webgl",kernelFunc:hA};class pA{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class fA{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const mA={kernelName:Nt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=K().getBool("WEBGL_PACK_NORMALIZATION")?new fA(s.shape,a,i,o,l):new pA(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class gA{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const yA={kernelName:St,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new gA(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function bA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=N(a,s.shape);let u=l;const c=_i(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=s.shape[c[n]];const r=qS(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype);n.texData.get(p.dataId).values=r}else p=HI(s,c,n);u=Fi(u.length,o)}Ri("max",u,o);const[f,m]=Ci(p.shape,u);let g,b=f;if(i&&(b=Ai(f,l)),d){const e=n.texData.get(p.dataId).values,t=DS(e,y(m),b,s.dtype);g=n.makeTensorInfo(b,s.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=y(t),a=PI({inputs:{x:e},attrs:{shape:[y(e.shape)/s,s]},backend:r}),i=UI(a,e.dtype,"max",r),o=PI({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,m,b,n);return h&&n.disposeIntermediateTensorInfo(p),g}const vA={kernelName:It,backendName:"webgl",kernelFunc:bA},xA=AI({opSnippet:fI+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+gI+"\n  return result;\n",cpuKernelImpl:FS}),wA={kernelName:Et,backendName:"webgl",kernelFunc:xA};const kA={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ON(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(Aa(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=xa(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))return bI({inputs:{x:s},backend:n});const c=new AE(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}};const TA={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=wa(s.shape,a,i,[1,1,1],o,u,l),h=new RE(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class NA{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SA{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const IA={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=wa(i.shape,o,l,[1,1,1],u,c),d=new RE(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new SA(h),m=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}};const EA={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;ON([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=xa(o.shape,l,u,1,c,h),p=new AE(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new NA(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const $A={kernelName:_t,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=n,u=r;p(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const c=[1,1];p(Aa(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=xa(s.shape,a,i,c,o),[d,f]=function(e,t,n,r){let s=new AE(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new AE(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(s,l,h,u);return[d,f]}};const CA={kernelName:Dt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{keepDims:a,axis:i}=n,o=r,l=s.shape.length,u=N(i,s.shape);let c=u;const h=_i(c,l),d=null!=h,p=o.shouldExecuteOnCPU([s]),f=[];let m=s;if(d){if(p){const e=o.texData.get(m.dataId).values,t=new Array(l);for(let r=0;r<t.length;r++)t[r]=s.shape[h[r]];const n=qS(e,s.shape,s.dtype,h,t);m=o.makeTensorInfo(t,s.dtype);o.texData.get(m.dataId).values=n}else m=HI(s,h,o);f.push(m),c=Fi(c.length,l)}Ri("sum",c,l);const[g,b]=Ci(m.shape,c);let v=g;a&&(v=Ai(g,u));const x=function(e,t,n,r){const s=y(t),a=PI({inputs:{x:e},attrs:{shape:[y(e.shape)/s,s]},backend:r}),i=UI(a,"float32","mean",r),o=PI({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(m,b,v,o);for(const y of f)o.disposeIntermediateTensorInfo(y);return x}};const AA={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=N(a,s.shape);let u=l;const c=_i(u,o);let h=s;null!=c&&(h=YI({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Fi(u.length,s.shape.length)),Ri("min",u,o);const[d,p]=Ci(h.shape,u),f=PI({inputs:{x:h},backend:n,attrs:{shape:[-1,y(p)]}}),m=UI(f,f.dtype,"min",n);let g;if(i){g=PI({inputs:{x:m},backend:n,attrs:{shape:Ai(d,l)}})}else g=PI({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},RA=AI({opSnippet:fI+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+gI+"\n  return result;\n",cpuKernelImpl:MS}),_A={kernelName:Mt,backendName:"webgl",kernelFunc:RA};class DA{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gS(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class FA{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gS(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=XS("rc",r),l=XS("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const MA={kernelName:Ot,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s}=t,{paddings:a,mode:i}=r,o=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FA(s.shape,a,i):new DA(s.shape,a,i);return n.runWebGLProgram(o,[s],s.dtype)}},OA=AI({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+gI+"\n  return result;\n"}),LA={kernelName:Lt,backendName:"webgl",kernelFunc:OA};class zA{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const PA=AI({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),BA={kernelName:je,backendName:"webgl",kernelFunc:PA},WA="return a - b;",VA=AI({opSnippet:WA,packedOpSnippet:WA,supportsComplex:!0,cpuKernelImpl:GS}),UA={kernelName:$n,backendName:"webgl",kernelFunc:VA};function GA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=N([a],s.shape),o=bA({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Ai(o.shape,i),u=PI({inputs:{x:o},backend:n,attrs:{shape:l}}),c=VA({inputs:{a:s,b:u},backend:n}),h=hC({inputs:{x:c},backend:n}),d=qI({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=PI({inputs:{x:d},backend:n,attrs:{shape:l}}),f=PA({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const jA={kernelName:Sn,backendName:"webgl",kernelFunc:GA};const HA={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:GA({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new zA(u,c,a),d=h.getCustomSetupFunc(i),p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},qA="return -x;";const KA={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=LS(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new uI(r.shape,qA):new rI(r.shape,qA),n.runWebGLProgram(s,[r],r.dtype)}},YA=qo;const XA={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){Xl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=YA(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},ZA=Ko;const QA={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){Xl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=ZA(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},JA=Yo;const eR={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){Xl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=JA(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class tR{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const nR={kernelName:Ht,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r,l=y(s.shape),u=new tR(l,a,i,o),c=PI({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const d=PI({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(h),d}};function rR(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=ZE({inputs:{input:r},backend:n}),t=rR({inputs:{x:e},backend:n}),s=d$({inputs:{input:r},backend:n}),a=rR({inputs:{x:s},backend:n}),i=xI({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return kC({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const sR={kernelName:Pn,backendName:"webgl",kernelFunc:rR};const aR={kernelName:jt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=ZE({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=d$({inputs:{input:s},backend:r}),i=rR({inputs:{x:a},backend:r}),o=xI({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return kC({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const iR={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return pC({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(a,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=g$({inputs:t.map((e=>{const t=pC({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class oR{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gS(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class lR{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gS(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=XS("rc",r),l=XS("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const uR=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r,o=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lR(s.shape,a,i):new oR(s.shape,a,i);return n.runWebGLProgram(o,[s],s.dtype)},cR={kernelName:Kt,backendName:"webgl",kernelFunc:uR},hR=AI({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+gI+"\n  return result;\n"}),dR={kernelName:Yt,backendName:"webgl",kernelFunc:hR};const pR={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=N(a,s.shape);let c=u;const h=_i(c,o);let d,p=s;if(null!=h&&(p=YI({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Fi(c.length,o),l.push(p)),Ri("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=zS(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Ci(p.shape,c),r=y(t),a=PI({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=UI(a,Ir(s.dtype),"prod",n);d=PI({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=Ai(d.shape,u);d=PI({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},fR=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=PS(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},mR={kernelName:Qt,backendName:"webgl",kernelFunc:fR},gR=CI({opSnippet:"return 1.0 / x;"}),yR={kernelName:en,backendName:"webgl",kernelFunc:gR},bR=CI({opSnippet:sI+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),vR={kernelName:tn,backendName:"webgl",kernelFunc:bR},xR=CI({opSnippet:sI+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),wR={kernelName:ln,backendName:"webgl",kernelFunc:xR};class kR{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class TR{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const NR={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TR(s.shape,l,u,a,i):new kR(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class SR{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const IR={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new SR(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class ER{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const $R={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=new ER(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class CR{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const AR={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new CR(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class RR{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=gS(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class _R{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=XS("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=gS(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const DR={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=N(a,s.shape);if(0===i)return bI({inputs:{x:s},backend:n});const l=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _R(s.shape,o):new RR(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class FR{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const s=e[1],a=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[l,u]=_l(r,s,a),c=l.toFixed(3),h=u.toFixed(3);let d="";d="number"===typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${d}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const MR={kernelName:Vn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:a,fillValue:i,center:o}=n,l=r,u=new FR(s.shape,a,i,o);return l.runWebGLProgram(u,[s],s.dtype)}},OR=CI({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),LR={kernelName:cn,backendName:"webgl",kernelFunc:OR},zR=CI({opSnippet:"return inversesqrt(x);",cpuKernelImpl:BS}),PR={kernelName:hn,backendName:"webgl",kernelFunc:zR};class BR{constructor(e,t,n,r,s,a){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const i=gS(s.length),o=gS(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const u=`getIndices(${l})`;let c="";1===r?c="i":2===r&&(c="i, coords[1]");const h=`getUpdates(${c})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${s});\n\n        void main() {\n          ${o} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${u});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const WR={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Wl(0,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=PI({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=PI({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new BR(l,o,p.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=PI({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class VR{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=gS(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const UR={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new VR(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],Sr(s.dtype,a.dtype))}},GR=CI({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Vl};\n  float scale = ${Ul};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),jR={kernelName:fn,backendName:"webgl",kernelFunc:GR},HR=CI({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),qR={kernelName:vn,backendName:"webgl",kernelFunc:HR},KR=CI({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),YR={kernelName:bn,backendName:"webgl",kernelFunc:KR},XR=CI({opSnippet:$I+"\n  return sin(x);\n"}),ZR={kernelName:gn,backendName:"webgl",kernelFunc:XR},QR=CI({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),JR={kernelName:yn,backendName:"webgl",kernelFunc:QR},e_=CI({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),t_={kernelName:xn,backendName:"webgl",kernelFunc:e_},n_={kernelName:Tn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;p(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let p=1+a.length;p<s.shape.length;++p)l.push([0,0]);const u=[],c=uR({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Dl(c.shape,a,o,!1),d=Fl(h.length,a.length,!1),f=Ml(c.shape,a,o,!1),m=PI({inputs:{x:c},backend:n,attrs:{shape:h}}),g=YI({inputs:{x:m},backend:n,attrs:{perm:d}}),y=PI({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(c),u.push(m),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const r_={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=Wl(0,s,o),d=new BR(u,l,s.shape.length,a.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[a,s,i],a.dtype),f=PI({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}};const s_={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=N(i,s.shape)[0],l=iu(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=jE({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},a_=CI({opSnippet:"return sqrt(x);"}),i_={kernelName:wn,backendName:"webgl",kernelFunc:a_},o_={kernelName:En,backendName:"webgl",kernelFunc:CI({opSnippet:"return x * x;"})},l_="return (a - b) * (a - b);",u_=AI({opSnippet:l_,packedOpSnippet:l_}),c_={kernelName:In,backendName:"webgl",kernelFunc:u_};const h_={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,a=sI+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new rI(s.shape,a);return r.runWebGLProgram(i,[s],s.dtype)}};class d_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=gS(n.length),a=gS(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const p_={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=ea(s.shape,a,i,o,l,u,c,h,d),v=PI({inputs:{x:s},backend:n,attrs:{shape:y}});let x;if(p){const e=jE({inputs:{x:v},backend:n,attrs:{begin:f,size:g}});x=PI({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))x=n.makeTensorInfo(b,s.dtype,[]);else{if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId).values,t=Es(v.shape,v.dtype,e),r=US(b,t,m,f);x=n.makeTensorInfo(b,v.dtype,r.values)}else{const e=new d_(f,m,b);x=n.runWebGLProgram(e,[v],v.dtype)}}const w=PI({inputs:{x:x},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(x),w}},f_=CI({opSnippet:"return tan(x);"}),m_={kernelName:Rn,backendName:"webgl",kernelFunc:f_},g_=CI({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),y_={kernelName:_n,backendName:"webgl",kernelFunc:g_};class b_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=gS(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function v_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype){const e=n.readSync(s.dataId).map((e=>dr(e))),t=Es(s.shape,s.dtype,e),r=jS(t,a);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const i=new b_(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const x_={kernelName:Dn,backendName:"webgl",kernelFunc:v_};const w_={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=n.readSync(s.dataId),[l,u]=HS(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const k_={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;ON(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=KS(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const T_={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==a&&(u[c++]=i.shape[m]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;const e=jE({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),t=PI({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class N_{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const S_={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=_i([u],o);let h=s;null!=c&&(h=YI({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Fi(1,o)[0]);const d=lu(h.shape,u,i),p=y([h.shape[u]]),f=PI({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Ir(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=ou(o,a),c=new N_({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const d=fR({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=v_({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});l.push(d),l.push(p);return g(h,t,p,s,a)},b=PI({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let v=b;if(null!=c){l.push(b);const e=Di(c);v=YI({inputs:{x:v},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},I_=[mA,yA,QI,eE,nE,sE,oE,cE,hE,dE,bE,vE,wE,TE,EE,SE,CE,DE,_E,OE,LE,zE,WE,qE,KE,JE,n$,a$,l$,wI,y$,$$,C$,T$,R$,_$,A$,F$,O$,z$,V$,U$,j$,Z$,Q$,K$,eC,nC,sC,aC,oC,uC,dC,fC,yC,xC,TC,SC,$C,AC,DC,MC,OC,zC,BC,VC,GC,vI,jC,p$,qC,YC,ZC,NI,JC,tA,nA,iA,sA,lA,cA,dA,vA,TA,kA,IA,EA,$A,wA,CA,AA,_A,MA,LA,HA,zI,KA,XA,QA,eR,XE,nR,aR,iR,cR,dR,EI,pR,mR,QE,BA,yR,wR,vR,BI,NR,IR,$R,AR,DR,MR,LR,PR,WR,UR,jR,qR,YR,ZR,JR,HE,jA,t_,n_,r_,s_,i_,o_,c_,h_,p_,UA,KI,m_,y_,x_,w_,XI,k_,T_,S_,sR];for(const n of I_)Zn(n);var E_=n(3915),$_=n(7029),C_=n.n($_);var A_=n(579);const R_=function(){const e=(0,a.useRef)(null),t=(0,a.useRef)(null),n=async n=>{if("undefined"!==typeof e.current&&null!==e.current&&4===e.current.video.readyState){const r=e.current.video,s=e.current.video.videoWidth,a=e.current.video.videoHeight;e.current.video.width=s,e.current.video.height=a,t.current.width=s,t.current.height=a;const i=await n.detect(r);console.log(i);((e,t)=>{e.forEach((e=>{const[n,r,s,a]=e.bbox,i=e.class,o="blue";t.strokeSylt=o,t.font="20px Arial",t.fillstyle=o,t.beginPath(),t.fillText(i,n,r),t.rect(n,r,s,a),t.stroke()}))})(i,t.current.getContext("2d"))}};return(0,a.useEffect)((()=>{(async()=>{const e=await E_.load();setInterval((()=>{n(e)}),10)})()}),[]),(0,A_.jsx)("div",{className:"App",children:(0,A_.jsxs)("header",{className:"App-header",children:[(0,A_.jsx)(C_(),{ref:e,muted:!0,style:{position:"absolute",marginLeft:"auto",marginRight:"auto",left:0,right:0,textAlign:"center",zindex:9,width:640,height:480}}),(0,A_.jsx)("canvas",{ref:t,style:{position:"absolute",marginLeft:"auto",marginRight:"auto",left:0,right:0,textAlign:"center",zindex:8,width:640,height:480}})]})})};i.render((0,A_.jsx)(a.StrictMode,{children:(0,A_.jsx)(R_,{})}),document.getElementById("root"))})()})();
//# sourceMappingURL=main.a283fab7.js.map